[{"/Users/luna.c/Documents/code/Luna_Portfolio/src/index.js":"1","/Users/luna.c/Documents/code/Luna_Portfolio/src/App.js":"2","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Contact/Contact.jsx":"3","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/NavBar/NavBar.jsx":"4","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/About/About.jsx":"5","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Hero/Hero.jsx":"6","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Button/Button.jsx":"7","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/ToTopButton/ToTopButton.jsx":"8","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Works/Projects.jsx":"9"},{"size":265,"mtime":1634389864126,"results":"10","hashOfConfig":"11"},{"size":3791,"mtime":1638515866779,"results":"12","hashOfConfig":"11"},{"size":3419,"mtime":1638516185798,"results":"13","hashOfConfig":"11"},{"size":2116,"mtime":1638516846845,"results":"14","hashOfConfig":"11"},{"size":3483,"mtime":1638499661970,"results":"15","hashOfConfig":"11"},{"size":5948,"mtime":1638516415124,"results":"16","hashOfConfig":"11"},{"size":318,"mtime":1638226084585,"results":"17","hashOfConfig":"11"},{"size":846,"mtime":1637704037827,"results":"18","hashOfConfig":"11"},{"size":7357,"mtime":1638474142088,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zguhk5",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/luna.c/Documents/code/Luna_Portfolio/src/index.js",[],"/Users/luna.c/Documents/code/Luna_Portfolio/src/App.js",[],"/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Contact/Contact.jsx",["44","45"],"import React, { useState } from 'react'\nimport emailjs from 'emailjs-com'\nimport './ContactStyle.css'\nimport Button from '../Button/Button'\nimport Resume from '../misc./Luna.Cuevas.prod.pdf'\n\nconst Contact = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [emailSent, setEmailSent] = useState(false);\n    // EmailJS setting id and template id variables\n    const submit = () => {\n        if (name && email && message) {\n            const serviceId = 'service_neh1oii';\n            const templateId = 'template_vdw3ffh';\n            const userId = 'user_JcD1331LVSdIeKGHTgDqA';\n            const templateParams = {\n                name,\n                email,\n                message\n            };\n            // If variable isn't set or input is missing, error will be console logged\n            emailjs.send(serviceId, templateId, templateParams, userId)\n                .then(response => console.log(response))\n                .then(error => console.log(error));\n            // After email has been sent, all variables are now set to blank again.\n            setName('');\n            setEmail('');\n            setMessage('');\n            setEmailSent(true);\n        } else {\n            // if no data is input, error will alert user\n            alert('Please fill in all fields.');\n        }\n    }\n    return (\n        <>\n            <h1 id='contact' className='title'>Contact Me</h1>\n            <div className='contact-container'>\n                <div id=\"contact-form\">\n                    <div className='name-email'>\n                        {/* input fields for name and email */}\n                        <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={e => setName(e.target.value)} />\n                        <input type=\"email\" placeholder=\"Your email address\" value={email} onChange={e => setEmail(e.target.value)} />\n                    </div>\n                    <div className='message'>Message</div>\n                    {/* Input field for message */}\n                    <textarea placeholder=\"Your message\" value={message} onChange={e => setMessage(e.target.value)}></textarea>\n                    <div onClick={submit} className='button'>\n                        <Button  text={'Send Message'} />\n                    </div>\n                    <span className={emailSent ? 'visible' : null}>Thank you for your message, we will be in touch in no time!</span>\n                </div>\n                <div className='contact-text'>\n                    <h2>Let's Talk?</h2>\n                    <p>I'm available to take on projects and collaborate with a team to find solutions. Tell me more about your goals and the vision you're seeking to accomplish, I'll get back to you promptly.</p>\n                    <p>Via Email: <a className='special-a-tag' href=\"mailto:s.cuevas14@gmail.com\" target='_blank'>s.cuevas14@gmail.com</a></p>\n                    <p>Via <a className='special-a-tag' href=\"https://www.linkedin.com/in/luna-cuevas/\" target='_blank'>LinkedIn</a></p>\n                    <div className='button'>\n                        <Button link={ Resume }  text={ 'Resume' } />\n                        <Button link='https://github.com/luna-cuevas' text='Github' />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Contact\n","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/NavBar/NavBar.jsx",["46","47"],"import React, { useState, useCallback, useEffect } from 'react'\nimport './NavStyle.css'\nimport { HamburgerEmphatic } from 'react-animated-burgers'\nimport WebFont from 'webfontloader';\nimport { Link } from 'react-router-dom'\nimport { HashLink } from 'react-router-hash-link';\n\n\n\nconst NavBar = () => {\n    /* this sets the status of the button, \n    if active then it sets the id in mobile overlay as 'not' and if inactive, \n    id is set as 'hidden' */\n    const [isActive, setIsActive] = useState(false)\n    const toggleButton = useCallback(\n      () => setIsActive(prevState => !prevState),\n      [],\n    )\n\n    return (\n        <div id=\"top\" className=\"Nav\">\n            <div className=\"mobile-overlay\">\n                {/* I'm using Hashlinks to leverage smooth scrolling functionality initialized by \"smooth  to\" */}\n                <div id={isActive ? 'hidden' : 'not'}>\n                    <Link className='special-a-tag' to=\"/\">Home</Link>\n                    <HashLink className='special-a-tag' smooth to=\"#info\">About</HashLink>\n                    <HashLink className='special-a-tag' smooth to=\"#projects\">Projects</HashLink>\n                    <HashLink className='special-a-tag' smooth to=\"#contact\">Contact</HashLink>\n                </div>\n            </div>\n            {/* Both mobile and pc overlays are the same but the mobile overlay has special css styling not attributable to pc */}\n            <div className=\"pc-overlay\">\n                <div className='pages'>\n                    <Link className='special-a-tag' to=\"/\">Home</Link>\n                    <HashLink className='special-a-tag' smooth to=\"#info\">About</HashLink>\n                    <HashLink className='special-a-tag' smooth to=\"#projects\">Projects</HashLink>\n                    <HashLink className='special-a-tag' smooth to=\"#contact\">Contact</HashLink>\n                </div>\n            </div>\n            {/* Utilizing a hamburger menu library to give the menu more animation*/}\n            <HamburgerEmphatic barColor=\"white\" isActive={isActive} toggleButton={toggleButton} />\n        </div>\n    )\n}\n\nexport default NavBar\n","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/About/About.jsx",["48","49"],"import React, { useState } from 'react'\nimport './AboutStyle.css'\nimport me from '../img/me.png'\nimport react  from '../img/react.svg'\nimport javascript from '../img/javascript.svg'\nimport html5 from '../img/html5.svg'\nimport css3 from '../img/css.svg'\nimport sass from '../img/sass.svg'\nimport bootstrap from '../img/bootstrap.svg'\nimport node from '../img/nodejs.svg'\nimport github from '../img/github.svg'\nimport photoshop from '../img/photoshop.svg'\nimport illustrator from '../img/illustrator.svg'\nimport mongo from '../img/mongoDB.svg'\nimport material from '../img/material.svg'\n\nconst About = () => {\n    return (\n        <div className='info' id='info'>\n            <h1 className=\"title\">About Me</h1>\n            <div className='blurb gradient-border'>\n                <div className='about-container'>\n                    <img id=\"pic\" src={me} alt=\"a picture of me, Luna Cuevas\"></img>\n                    <div className='lorem'>\n                        <p>Hello! Thanks for taking a moment to check out my website!</p>\n                        <p>I'm a front end developer with over two years of self-taught knowledge and a few months of professional experience. I use Udemy courses, bootcamp material, Youtube tutorials, and <i>plenty</i> of books to reinforce the fundamentals of web development. I've also gained a community of developers through online forums and discord. </p>\n                        <p>In the past year, I've found success as a freelance web developer working with e-commerce clients and content creators. I draft, design, and build beautiful mobile-responsive web pages with SEO optimization and cross browser compatibility. I can also modify CSS and PHP code in CMS tools like Wordpress, Wix, and Squarespace.</p>\n                        <p>My goal is to find a group of talented engineers and help tackle modern problems with creative solutions. You can check out my projects and work below. Thanks again for taking time to read through this, you're awesome!</p>\n                    </div>\n                </div>\n                <div className='skills'>\n                    <h2 className='skills-title'>Skills</h2>\n                    <div className='icons'>\n                        <p>React <img src={react} alt=\"react icon\" /></p>\n                        <p>JavaScript <img src={javascript} alt=\"\" /></p>\n                        <p>HTML5 <img src={html5} alt=\"\" /></p> \n                        <p>CSS3 <img src={css3} alt=\"\" /></p>\n                        <p>Sass <img src={sass} alt=\"\" /></p>\n                        <p>Bootstrap <img src={bootstrap} alt=\"\" /></p>\n                        <p>Node.js <img src={node} alt=\"\" /></p>\n                        <p>MongoDB <img src={mongo} alt=\"\" /></p>\n                        <p>GitHub <img src={github} alt=\"\" /></p>\n                        <p>Photoshop <img src={photoshop} alt=\"\" /></p>\n                        <p>Illustrator <img src={illustrator} alt=\"\" /></p>\n                        <p>Material<img src={material} alt=\"\" /></p>\n                    </div>\n                    <h2 className='skills-title'>In Progress</h2>\n                    <div className='icons'>\n                        <p>React <img src={react} alt=\"react icon\" /></p>\n                        <p>JavaScript <img src={javascript} alt=\"\" /></p>\n                        <p>HTML5 <img src={html5} alt=\"\" /></p> \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Hero/Hero.jsx",["50","51","52"],"import {React, useRef, useEffect} from 'react'\nimport './HeroStyle.css'\nimport Button from '../Button/Button'\nimport { gsap } from \"gsap\";\nimport MotionPathPlugin from 'gsap/dist/MotionPathPlugin'\nimport Resume from '../misc./Luna.Cuevas.prod.pdf'\nimport moon from '../img/moon.svg'\ngsap.registerPlugin(MotionPathPlugin);\n\nconst Hero = () => {\n    const moonRef = useRef();\n\n    // GSAP gradient sphere follows the path #ellipse\n    useEffect(() => {\n        gsap.to(moonRef.current, {\n            motionPath: {\n                path: \"#ellipse\",\n                align: \"#ellipse\",\n                alignOrigin: [0.5, 0.5],\n                // auto rotate allows the sphere to seemingly face the same direction\n                autoRotate: true,\n                start: 2,        \n            },\n            // setting repeat to -1 creates an infinite loop\n            repeat: -1,\n            ease: 'none',\n            duration: 20,\n        });\n    }) \n\n    return (\n        <div className='hero'>\n            <img id='moon' src={moon} alt=\"\" />\n            <div className=\"hero-content\">\n                <div className=\"hero-text\">\n                    {/* SVG orbital moon graphics powered by GSAP */}\n                    <svg className='ellipse-container' viewBox=\"-213 10 812 190\">\n                        {/* this sets the gradient fill on the sphere, check CSS for more info */}\n                        <linearGradient id=\"lg\">\n                            <stop id=\"color1\" offset=\"0\" />\n                            <stop id=\"color2\" offset=\"1\" />\n                        </linearGradient>\n                        <path id='ellipse' x=\"0px\" y=\"0px\" d=\"M103.3,56.9c25.4-4.4,54.4-7.3,85.3-8.2c100.6-3,182.7,16.3,183.5,43.1c0.8,26.8-80.1,50.9-180.6,53.9\n\t                        C90.9,148.7,8.7,129.4,8,102.6c-0.6-18.5,38-35.8,95.2-45.7\"/>\n                        <circle fill=\"url(#lg)\" id='realmoon'  ref={moonRef}  cx=\"184.2\" cy=\"36.1\" r=\"12.9\" x=\"0px\" y=\"0px\"/>\n                    </svg>\n                    <div className='intro'>\n                        <h1  title=\"Luna Cuevas\">Luna Cuevas</h1>\n                        <div className='social'>\n                            <a target='_blank' href=\"https://www.instagram.com/redi8/?hl=en\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/></svg></a>\n                            <a target='_blank' href=\"https://www.linkedin.com/in/luna-cuevas/\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z\"/></svg></a>\n                            <a target='_blank' href=\"https://github.com/luna-cuevas\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-4.466 19.59c-.405.078-.534-.171-.534-.384v-2.195c0-.747-.262-1.233-.55-1.481 1.782-.198 3.654-.875 3.654-3.947 0-.874-.312-1.588-.823-2.147.082-.202.356-1.016-.079-2.117 0 0-.671-.215-2.198.82-.64-.18-1.324-.267-2.004-.271-.68.003-1.364.091-2.003.269-1.528-1.035-2.2-.82-2.2-.82-.434 1.102-.16 1.915-.077 2.118-.512.56-.824 1.273-.824 2.147 0 3.064 1.867 3.751 3.645 3.954-.229.2-.436.552-.508 1.07-.457.204-1.614.557-2.328-.666 0 0-.423-.768-1.227-.825 0 0-.78-.01-.055.487 0 0 .525.246.889 1.17 0 0 .463 1.428 2.688.944v1.489c0 .211-.129.459-.528.385-3.18-1.057-5.472-4.056-5.472-7.59 0-4.419 3.582-8 8-8s8 3.581 8 8c0 3.533-2.289 6.531-5.466 7.59z\"/></svg></a>    \n                        </div>\n                    </div>\n                    <div  className=\"hero-p\">\n                        {/* I added a gradient background on some of the techs to highlight/emphasize */}\n                        <p>I am a front end developer with a background in graphic design. I love to build dynamic mobile-responsive websites using  <span className='language'>HTML</span> <span className='language'>CSS/SCSS</span> and <span className='language'>Javascript</span>.</p>\n                        <p>I develop web apps using <span className='language'>React</span> and various CSS frameworks like Bootstrap and Material-UI. </p>\n                        <div className='button'>\n                            <Button targetTo={ '_self' } link={ '#projects' } text={ 'Projects' } />\n                            <Button link={ Resume }  text={ 'Resume' } />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Hero\n","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Button/Button.jsx",["53"],"import React from 'react'\nimport './ButtonStyle.css'\n\nconst Button = ( {link, text, targetTo} ) => {\n    return (\n        <div>\n            <a target={ !targetTo ? '_blank' : targetTo } href={ link }>\n                <button id=\"bn30\"> { text } </button>\n            </a>\n        </div>\n    )\n}\n\nexport default Button\n","/Users/luna.c/Documents/code/Luna_Portfolio/src/components/ToTopButton/ToTopButton.jsx",[],"/Users/luna.c/Documents/code/Luna_Portfolio/src/components/Works/Projects.jsx",["54"],"import React, { useState } from 'react'\nimport './ProjectsStyle.css'\nimport brooke from '../img/brooke.gif'\nimport Button from '../Button/Button'\nimport travel from '../img/travel advisor.png'\nimport JAndP from '../img/j&p-webpage-mockup.png'\nimport my from '../img/my.png'\nimport frame from '../img/chrome-frame.png'\n\nconst Projects = () => {\n    return (\n        <div id='projects' className='projects-page'>\n            <h1 className='title'>Work & Projects</h1>\n            <div className='projects-container'>\n                <div className='project first'>\n                    <div className='img-container'><img id='frame' src={frame} alt=\"\" /><img id='project-img' src={JAndP} alt=\"\" /></div>\n                    <div className='text'>\n                    <h2>Jazz And Print</h2>\n                    <span className='techs'>\n                        <p>HTML</p>\n                        <p>CSS/SCSS</p>\n                        <p>Javascript</p>\n                        <p>PHP</p>                        \n                    </span>\n                    <span>This client reached out requesting an update to their printing shop webpage. Run on a PHP-based CMS, some of the challenges included finding overwritten style sheets and modifying PHP code to improve UX. The goal was to improve the design, optimize SEO keywords, and generate more web traffic. Features implemented:</span>\n                    <p>• Increased SEO rating from 22% to 91%, fixed meta tags, improved sitemap. </p>\n                    <p>• Improved user experience across browsers and devices.</p>\n                    <p>• Increased web traffic by 31%.</p>\n                    <p>• Updated image carousel to include a colorful progress bar.</p>\n                    <p>• Designed 10 product mockups and banners for display on home page.</p>\n                    <div className='button'>\n                        <Button link=\"https://brooke-cordelia.com/\" text={'Live Demo'}/>\n                        <Button link=\"https://github.com/luna-cuevas/jazzandprint\" text={'Github Repo'} />\n                    </div>\n                </div>\n            </div>\n                <div className='project second'>\n                  <div className='img-container'><img id='frame' src={frame} alt=\"\" /><img id='project-img' src={brooke} alt=\"\" /></div>\n                  <div className='text'>\n                    <h2>Roller Diva</h2>\n                    <span className='techs'>\n                        <p>HTML</p>\n                        <p>CSS/SCSS</p>\n                        <p>Javascript</p>\n                        <p>React</p>                        \n                    </span>\n                    <span>The task was to design a captivating portfolio for a professional roller skater. Key features requested were 80s themes, pastel colors, blog-style graphics, and an emphasis on video playback. Features implemented:</span>\n                    <p>• <b>Responsive design</b> suitable for all devices.</p>\n                    <p>• Play on hover feature implemented using <b>Vimeo Player API</b>.</p>\n                    <p>• Utilized vibrant colors to match the skater's style and brand.</p>\n                    <p>• Implemented a mix of <b>Bootstrap</b> and custom CSS styling to fix videos onto a carousel.</p>\n                    <p>• Routed a custom contact page using <b>PHP</b> to send client inquiries.</p>\n                    <div className='button'>\n                        <Button link=\"https://brooke-cordelia.com/\" text={'Live Demo'}/>\n                        <Button link=\"https://github.com/luna-cuevas/Cordelia_Portfolio\" text={'Github Repo'} />\n                    </div>\n                  </div>\n                </div>\n            <div className='project'>\n            <div id='trvl-img'className='img-container'><img id='frame' src={frame} alt=\"\" /><img id='project-img' src={travel} alt=\"\" /></div>\n                <div id='trvl-text' className='text'>\n                    <h2>Attractions Advisor</h2>\n                    <span className='techs'>\n                        <p>HTML</p>\n                        <p>CSS</p>\n                        <p>Javascript</p>\n                        <p>Material</p>                        \n                    </span>\n                    <span>The goal of this <b>React</b> application is to help users find local eateries, attractions, and hotels in their area. Using the Travel Advisor and Google Maps APIs, the user can search their locale attractions based on ratings ranging from 3 to 5 stars. Other information includes weather information, awards, phone numbers, and rankings. Features implemented:\n                    </span>\n                    <p>\n                    • Utilized <b>Google Maps API</b> to show accurate location for attractions.  \n                    </p>\n                    <p>\n                    • Scraped business information like address, phone number, ratings, and awards from the <b>Travel Advisor API</b>.\n                    </p>\n                    <p>• Populated the map with small product cards accurately displaying location of attractions.</p>\n                    <p>• Implemented a <b>responsive design</b> by using Material UI.</p>\n                    <div className='button'>\n                        <Button link=\"https://trvler.netlify.app/\" text={'Live Demo'}/>\n                        <Button link=\"https://github.com/luna-cuevas/travel-advisor\" text={'Github Repo'} />\n                    </div>\n                </div>\n                \n            </div>\n              <div className='project'>\n                  <div className='img-container'><img id='frame' src={frame} alt=\"\" /><img id='project-img' src={my} alt=\"\" /></div>\n                  <div className='text'>\n                    <h2>This Website</h2>\n                    <span className='techs'>\n                        <p>HTML</p>\n                        <p>CSS/SCSS</p>\n                        <p>Javascript</p>\n                        <p>React</p>                        \n                    </span>\n                    <span>The first initial version did not use the React framework nor Sass compiling which resulted in a functional but clunky portfolio. After some tinkering and further research, I realized that the React component structure could allow my website to function more efficiently. </span>\n                    <span>\n                    You are currently looking at the latest iteration of this portfolio. Here are some of the key features:</span>\n                    <p>• Structured using the <b>React</b> framework so components like buttons and navigation are shared across the app. </p>\n                    <p>• Optimized CSS styling with the <b>Sass</b> compiler to ensure cross-browser functionality.</p>\n                    <p>• Animated text, elements, and images using <b>GSAP</b> and ScrollTrigger.</p>\n                    <p>• Utilized EmailJS to create a lightweight serverless contact form.</p>\n                    <p>• Responsive design using relative units.</p>\n                    <div className='button'>\n                        <Button  link=\"https://github.com/luna-cuevas/Luna_Portfolio\" text={'GitHub Repo'}/>\n                    </div>\n                  </div>  \n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Projects\n",{"ruleId":"55","severity":1,"message":"56","line":58,"column":35,"nodeType":"57","messageId":"58","endLine":58,"endColumn":115,"fix":"59"},{"ruleId":"55","severity":1,"message":"56","line":59,"column":28,"nodeType":"57","messageId":"58","endLine":59,"endColumn":121,"fix":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":40,"nodeType":"63","messageId":"64","endLine":1,"endColumn":49},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":15},{"ruleId":"61","severity":1,"message":"66","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":23,"column":21,"nodeType":"57","endLine":23,"endColumn":79},{"ruleId":"55","severity":1,"message":"56","line":50,"column":29,"nodeType":"57","messageId":"58","endLine":50,"endColumn":94,"fix":"69"},{"ruleId":"55","severity":1,"message":"56","line":51,"column":29,"nodeType":"57","messageId":"58","endLine":51,"endColumn":96,"fix":"70"},{"ruleId":"55","severity":1,"message":"56","line":52,"column":29,"nodeType":"57","messageId":"58","endLine":52,"endColumn":86,"fix":"71"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":13,"nodeType":"57","messageId":"58","endLine":7,"endColumn":73,"fix":"72"},{"ruleId":"61","severity":1,"message":"66","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"73","text":"74"},{"range":"75","text":"74"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'WebFont' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"76","text":"74"},{"range":"77","text":"74"},{"range":"78","text":"74"},{"range":"79","text":"74"},[2936,2936]," rel=\"noreferrer\"",[3085,3085],[2241,2241],[3525,3525],[4052,4052],[199,199]]