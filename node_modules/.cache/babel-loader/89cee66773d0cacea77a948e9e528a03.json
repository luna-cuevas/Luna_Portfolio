{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.window = global.window || {}));\n})(this, function (exports) {\n  'use strict';\n\n  var _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n      _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n      _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n      _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n      _DEG2RAD = Math.PI / 180,\n      _RAD2DEG = 180 / Math.PI,\n      _sin = Math.sin,\n      _cos = Math.cos,\n      _abs = Math.abs,\n      _sqrt = Math.sqrt,\n      _atan2 = Math.atan2,\n      _largeNum = 1e8,\n      _isString = function _isString(value) {\n    return typeof value === \"string\";\n  },\n      _isNumber = function _isNumber(value) {\n    return typeof value === \"number\";\n  },\n      _isUndefined = function _isUndefined(value) {\n    return typeof value === \"undefined\";\n  },\n      _temp = {},\n      _temp2 = {},\n      _roundingNum = 1e5,\n      _wrapProgress = function _wrapProgress(progress) {\n    return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n  },\n      _round = function _round(value) {\n    return Math.round(value * _roundingNum) / _roundingNum || 0;\n  },\n      _roundPrecise = function _roundPrecise(value) {\n    return Math.round(value * 1e10) / 1e10 || 0;\n  },\n      _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n    var segment = rawPath[segIndex],\n        shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\n    if (shift && shift + i + 2 < segment.length) {\n      rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n      segment.splice(0, i + shift);\n      return 1;\n    }\n  },\n      _getSampleIndex = function _getSampleIndex(samples, length, progress) {\n    var l = samples.length,\n        i = ~~(progress * l);\n\n    if (samples[i] > length) {\n      while (--i && samples[i] > length) {}\n    } else {\n      while (samples[++i] < length && i < l) {}\n    }\n\n    return i < l ? i : l - 1;\n  },\n      _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n    var i = rawPath.length;\n    skipOuter || rawPath.reverse();\n\n    while (i--) {\n      rawPath[i].reversed || reverseSegment(rawPath[i]);\n    }\n  },\n      _copyMetaData = function _copyMetaData(source, copy) {\n    copy.totalLength = source.totalLength;\n\n    if (source.samples) {\n      copy.samples = source.samples.slice(0);\n      copy.lookup = source.lookup.slice(0);\n      copy.minLength = source.minLength;\n      copy.resolution = source.resolution;\n    } else if (source.totalPoints) {\n      copy.totalPoints = source.totalPoints;\n    }\n\n    return copy;\n  },\n      _appendOrMerge = function _appendOrMerge(rawPath, segment) {\n    var index = rawPath.length,\n        prevSeg = rawPath[index - 1] || [],\n        l = prevSeg.length;\n\n    if (index && segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n      segment = prevSeg.concat(segment.slice(2));\n      index--;\n    }\n\n    rawPath[index] = segment;\n  };\n\n  function getRawPath(value) {\n    value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n    var e = value.getAttribute ? value : 0,\n        rawPath;\n\n    if (e && (value = value.getAttribute(\"d\"))) {\n      if (!e._gsPath) {\n        e._gsPath = {};\n      }\n\n      rawPath = e._gsPath[value];\n      return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n    }\n\n    return !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [value] : value;\n  }\n\n  function copyRawPath(rawPath) {\n    var a = [],\n        i = 0;\n\n    for (; i < rawPath.length; i++) {\n      a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n    }\n\n    return _copyMetaData(rawPath, a);\n  }\n\n  function reverseSegment(segment) {\n    var i = 0,\n        y;\n    segment.reverse();\n\n    for (; i < segment.length; i += 2) {\n      y = segment[i];\n      segment[i] = segment[i + 1];\n      segment[i + 1] = y;\n    }\n\n    segment.reversed = !segment.reversed;\n  }\n\n  var _createPath = function _createPath(e, ignore) {\n    var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n        attr = [].slice.call(e.attributes),\n        i = attr.length,\n        name;\n    ignore = \",\" + ignore + \",\";\n\n    while (--i > -1) {\n      name = attr[i].nodeName.toLowerCase();\n\n      if (ignore.indexOf(\",\" + name + \",\") < 0) {\n        path.setAttributeNS(null, name, attr[i].nodeValue);\n      }\n    }\n\n    return path;\n  },\n      _typeAttrs = {\n    rect: \"rx,ry,x,y,width,height\",\n    circle: \"r,cx,cy\",\n    ellipse: \"rx,ry,cx,cy\",\n    line: \"x1,x2,y1,y2\"\n  },\n      _attrToObj = function _attrToObj(e, attrs) {\n    var props = attrs ? attrs.split(\",\") : [],\n        obj = {},\n        i = props.length;\n\n    while (--i > -1) {\n      obj[props[i]] = +e.getAttribute(props[i]) || 0;\n    }\n\n    return obj;\n  };\n\n  function convertToPath(element, swap) {\n    var type = element.tagName.toLowerCase(),\n        circ = 0.552284749831,\n        data,\n        x,\n        y,\n        r,\n        ry,\n        path,\n        rcirc,\n        rycirc,\n        points,\n        w,\n        h,\n        x2,\n        x3,\n        x4,\n        x5,\n        x6,\n        y2,\n        y3,\n        y4,\n        y5,\n        y6,\n        attr;\n\n    if (type === \"path\" || !element.getBBox) {\n      return element;\n    }\n\n    path = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n    attr = _attrToObj(element, _typeAttrs[type]);\n\n    if (type === \"rect\") {\n      r = attr.rx;\n      ry = attr.ry || r;\n      x = attr.x;\n      y = attr.y;\n      w = attr.width - r * 2;\n      h = attr.height - ry * 2;\n\n      if (r || ry) {\n        x2 = x + r * (1 - circ);\n        x3 = x + r;\n        x4 = x3 + w;\n        x5 = x4 + r * circ;\n        x6 = x4 + r;\n        y2 = y + ry * (1 - circ);\n        y3 = y + ry;\n        y4 = y3 + h;\n        y5 = y4 + ry * circ;\n        y6 = y4 + ry;\n        data = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n      } else {\n        data = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + -w + \" v\" + -h + \" h\" + w + \"z\";\n      }\n    } else if (type === \"circle\" || type === \"ellipse\") {\n      if (type === \"circle\") {\n        r = ry = attr.r;\n        rycirc = r * circ;\n      } else {\n        r = attr.rx;\n        ry = attr.ry;\n        rycirc = ry * circ;\n      }\n\n      x = attr.cx;\n      y = attr.cy;\n      rcirc = r * circ;\n      data = \"M\" + (x + r) + \",\" + y + \" C\" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n    } else if (type === \"line\") {\n      data = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2;\n    } else if (type === \"polyline\" || type === \"polygon\") {\n      points = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n      x = points.shift();\n      y = points.shift();\n      data = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\n      if (type === \"polygon\") {\n        data += \",\" + x + \",\" + y + \"z\";\n      }\n    }\n\n    path.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\n    if (swap && element.parentNode) {\n      element.parentNode.insertBefore(path, element);\n      element.parentNode.removeChild(element);\n    }\n\n    return path;\n  }\n\n  function getRotationAtBezierT(segment, i, t) {\n    var a = segment[i],\n        b = segment[i + 2],\n        c = segment[i + 4],\n        x;\n    a += (b - a) * t;\n    b += (c - b) * t;\n    a += (b - a) * t;\n    x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n    a = segment[i + 1];\n    b = segment[i + 3];\n    c = segment[i + 5];\n    a += (b - a) * t;\n    b += (c - b) * t;\n    a += (b - a) * t;\n    return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n  }\n\n  function sliceRawPath(rawPath, start, end) {\n    end = _isUndefined(end) ? 1 : _roundPrecise(end) || 0;\n    start = _roundPrecise(start) || 0;\n    var loops = Math.max(0, ~~(_abs(end - start) - 1e-8)),\n        path = copyRawPath(rawPath);\n\n    if (start > end) {\n      start = 1 - start;\n      end = 1 - end;\n\n      _reverseRawPath(path);\n\n      path.totalLength = 0;\n    }\n\n    if (start < 0 || end < 0) {\n      var offset = Math.abs(~~Math.min(start, end)) + 1;\n      start += offset;\n      end += offset;\n    }\n\n    path.totalLength || cacheRawPathMeasurements(path);\n    var wrap = end > 1,\n        s = getProgressData(path, start, _temp, true),\n        e = getProgressData(path, end, _temp2),\n        eSeg = e.segment,\n        sSeg = s.segment,\n        eSegIndex = e.segIndex,\n        sSegIndex = s.segIndex,\n        ei = e.i,\n        si = s.i,\n        sameSegment = sSegIndex === eSegIndex,\n        sameBezier = ei === si && sameSegment,\n        wrapsBehind,\n        sShift,\n        eShift,\n        i,\n        copy,\n        totalSegments,\n        l,\n        j;\n\n    if (wrap || loops) {\n      wrapsBehind = eSegIndex < sSegIndex || sameSegment && ei < si || sameBezier && e.t < s.t;\n\n      if (_splitSegment(path, sSegIndex, si, s.t)) {\n        sSegIndex++;\n\n        if (!wrapsBehind) {\n          eSegIndex++;\n\n          if (sameBezier) {\n            e.t = (e.t - s.t) / (1 - s.t);\n            ei = 0;\n          } else if (sameSegment) {\n            ei -= si;\n          }\n        }\n      }\n\n      if (1 - (end - start) < 1e-5) {\n        eSegIndex = sSegIndex - 1;\n      } else if (!e.t && eSegIndex) {\n        eSegIndex--;\n      } else if (_splitSegment(path, eSegIndex, ei, e.t) && wrapsBehind) {\n        sSegIndex++;\n      }\n\n      if (s.t === 1) {\n        sSegIndex = (sSegIndex + 1) % path.length;\n      }\n\n      copy = [];\n      totalSegments = path.length;\n      l = 1 + totalSegments * loops;\n      j = sSegIndex;\n      l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n\n      for (i = 0; i < l; i++) {\n        _appendOrMerge(copy, path[j++ % totalSegments]);\n      }\n\n      path = copy;\n    } else {\n      eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\n      if (start !== end) {\n        sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n        sameSegment && (eShift += sShift);\n        eSeg.splice(ei + eShift + 2);\n        (sShift || si) && sSeg.splice(0, si + sShift);\n        i = path.length;\n\n        while (i--) {\n          (i < sSegIndex || i > eSegIndex) && path.splice(i, 1);\n        }\n      } else {\n        eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0);\n        ei += eShift;\n        s = eSeg[ei];\n        e = eSeg[ei + 1];\n        eSeg.length = eSeg.totalLength = 0;\n        eSeg.totalPoints = path.totalPoints = 8;\n        eSeg.push(s, e, s, e, s, e, s, e);\n      }\n    }\n\n    path.totalLength = 0;\n    return path;\n  }\n\n  function measureSegment(segment, startIndex, bezierQty) {\n    startIndex = startIndex || 0;\n\n    if (!segment.samples) {\n      segment.samples = [];\n      segment.lookup = [];\n    }\n\n    var resolution = ~~segment.resolution || 12,\n        inc = 1 / resolution,\n        endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n        x1 = segment[startIndex],\n        y1 = segment[startIndex + 1],\n        samplesIndex = startIndex ? startIndex / 6 * resolution : 0,\n        samples = segment.samples,\n        lookup = segment.lookup,\n        min = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n        prevLength = samples[samplesIndex + bezierQty * resolution - 1],\n        length = startIndex ? samples[samplesIndex - 1] : 0,\n        i,\n        j,\n        x4,\n        x3,\n        x2,\n        xd,\n        xd1,\n        y4,\n        y3,\n        y2,\n        yd,\n        yd1,\n        inv,\n        t,\n        lengthIndex,\n        l,\n        segLength;\n    samples.length = lookup.length = 0;\n\n    for (j = startIndex + 2; j < endIndex; j += 6) {\n      x4 = segment[j + 4] - x1;\n      x3 = segment[j + 2] - x1;\n      x2 = segment[j] - x1;\n      y4 = segment[j + 5] - y1;\n      y3 = segment[j + 3] - y1;\n      y2 = segment[j + 1] - y1;\n      xd = xd1 = yd = yd1 = 0;\n\n      if (_abs(x4) < .01 && _abs(y4) < .01 && _abs(x2) + _abs(y2) < .01) {\n        if (segment.length > 8) {\n          segment.splice(j, 6);\n          j -= 6;\n          endIndex -= 6;\n        }\n      } else {\n        for (i = 1; i <= resolution; i++) {\n          t = inc * i;\n          inv = 1 - t;\n          xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n          yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n          l = _sqrt(yd * yd + xd * xd);\n\n          if (l < min) {\n            min = l;\n          }\n\n          length += l;\n          samples[samplesIndex++] = length;\n        }\n      }\n\n      x1 += x4;\n      y1 += y4;\n    }\n\n    if (prevLength) {\n      prevLength -= length;\n\n      for (; samplesIndex < samples.length; samplesIndex++) {\n        samples[samplesIndex] += prevLength;\n      }\n    }\n\n    if (samples.length && min) {\n      segment.totalLength = segLength = samples[samples.length - 1] || 0;\n      segment.minLength = min;\n\n      if (segLength / min < 9999) {\n        l = lengthIndex = 0;\n\n        for (i = 0; i < segLength; i += min) {\n          lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n        }\n      }\n    } else {\n      segment.totalLength = samples[0] = 0;\n    }\n\n    return startIndex ? length - samples[startIndex / 2 - 1] : length;\n  }\n\n  function cacheRawPathMeasurements(rawPath, resolution) {\n    var pathLength, points, i;\n\n    for (i = pathLength = points = 0; i < rawPath.length; i++) {\n      rawPath[i].resolution = ~~resolution || 12;\n      points += rawPath[i].length;\n      pathLength += measureSegment(rawPath[i]);\n    }\n\n    rawPath.totalPoints = points;\n    rawPath.totalLength = pathLength;\n    return rawPath;\n  }\n\n  function subdivideSegment(segment, i, t) {\n    if (t <= 0 || t >= 1) {\n      return 0;\n    }\n\n    var ax = segment[i],\n        ay = segment[i + 1],\n        cp1x = segment[i + 2],\n        cp1y = segment[i + 3],\n        cp2x = segment[i + 4],\n        cp2y = segment[i + 5],\n        bx = segment[i + 6],\n        by = segment[i + 7],\n        x1a = ax + (cp1x - ax) * t,\n        x2 = cp1x + (cp2x - cp1x) * t,\n        y1a = ay + (cp1y - ay) * t,\n        y2 = cp1y + (cp2y - cp1y) * t,\n        x1 = x1a + (x2 - x1a) * t,\n        y1 = y1a + (y2 - y1a) * t,\n        x2a = cp2x + (bx - cp2x) * t,\n        y2a = cp2y + (by - cp2y) * t;\n    x2 += (x2a - x2) * t;\n    y2 += (y2a - y2) * t;\n    segment.splice(i + 2, 4, _round(x1a), _round(y1a), _round(x1), _round(y1), _round(x1 + (x2 - x1) * t), _round(y1 + (y2 - y1) * t), _round(x2), _round(y2), _round(x2a), _round(y2a));\n    segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n    return 6;\n  }\n\n  function getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n    decoratee = decoratee || {};\n    rawPath.totalLength || cacheRawPathMeasurements(rawPath);\n\n    if (progress < 0 || progress > 1) {\n      progress = _wrapProgress(progress);\n    }\n\n    var segIndex = 0,\n        segment = rawPath[0],\n        samples,\n        resolution,\n        length,\n        min,\n        max,\n        i,\n        t;\n\n    if (!progress) {\n      t = i = segIndex = 0;\n      segment = rawPath[0];\n    } else if (progress === 1) {\n      t = 1;\n      segIndex = rawPath.length - 1;\n      segment = rawPath[segIndex];\n      i = segment.length - 8;\n    } else {\n      if (rawPath.length > 1) {\n        length = rawPath.totalLength * progress;\n        max = i = 0;\n\n        while ((max += rawPath[i++].totalLength) < length) {\n          segIndex = i;\n        }\n\n        segment = rawPath[segIndex];\n        min = max - segment.totalLength;\n        progress = (length - min) / (max - min) || 0;\n      }\n\n      samples = segment.samples;\n      resolution = segment.resolution;\n      length = segment.totalLength * progress;\n      i = segment.lookup.length ? segment.lookup[~~(length / segment.minLength)] || 0 : _getSampleIndex(samples, length, progress);\n      min = i ? samples[i - 1] : 0;\n      max = samples[i];\n\n      if (max < length) {\n        min = max;\n        max = samples[++i];\n      }\n\n      t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n      i = ~~(i / resolution) * 6;\n\n      if (pushToNextIfAtEnd && t === 1) {\n        if (i + 6 < segment.length) {\n          i += 6;\n          t = 0;\n        } else if (segIndex + 1 < rawPath.length) {\n          i = t = 0;\n          segment = rawPath[++segIndex];\n        }\n      }\n    }\n\n    decoratee.t = t;\n    decoratee.i = i;\n    decoratee.path = rawPath;\n    decoratee.segment = segment;\n    decoratee.segIndex = segIndex;\n    return decoratee;\n  }\n\n  function getPositionOnPath(rawPath, progress, includeAngle, point) {\n    var segment = rawPath[0],\n        result = point || {},\n        samples,\n        resolution,\n        length,\n        min,\n        max,\n        i,\n        t,\n        a,\n        inv;\n\n    if (progress < 0 || progress > 1) {\n      progress = _wrapProgress(progress);\n    }\n\n    if (rawPath.length > 1) {\n      length = rawPath.totalLength * progress;\n      max = i = 0;\n\n      while ((max += rawPath[i++].totalLength) < length) {\n        segment = rawPath[i];\n      }\n\n      min = max - segment.totalLength;\n      progress = (length - min) / (max - min) || 0;\n    }\n\n    samples = segment.samples;\n    resolution = segment.resolution;\n    length = segment.totalLength * progress;\n    i = segment.lookup.length ? segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0 : _getSampleIndex(samples, length, progress);\n    min = i ? samples[i - 1] : 0;\n    max = samples[i];\n\n    if (max < length) {\n      min = max;\n      max = samples[++i];\n    }\n\n    t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n    inv = 1 - t;\n    i = ~~(i / resolution) * 6;\n    a = segment[i];\n    result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n    result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\n    if (includeAngle) {\n      result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n    }\n\n    return result;\n  }\n\n  function transformRawPath(rawPath, a, b, c, d, tx, ty) {\n    var j = rawPath.length,\n        segment,\n        l,\n        i,\n        x,\n        y;\n\n    while (--j > -1) {\n      segment = rawPath[j];\n      l = segment.length;\n\n      for (i = 0; i < l; i += 2) {\n        x = segment[i];\n        y = segment[i + 1];\n        segment[i] = x * a + y * c + tx;\n        segment[i + 1] = x * b + y * d + ty;\n      }\n    }\n\n    rawPath._dirty = 1;\n    return rawPath;\n  }\n\n  function arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n    if (lastX === x && lastY === y) {\n      return;\n    }\n\n    rx = _abs(rx);\n    ry = _abs(ry);\n\n    var angleRad = angle % 360 * _DEG2RAD,\n        cosAngle = _cos(angleRad),\n        sinAngle = _sin(angleRad),\n        PI = Math.PI,\n        TWOPI = PI * 2,\n        dx2 = (lastX - x) / 2,\n        dy2 = (lastY - y) / 2,\n        x1 = cosAngle * dx2 + sinAngle * dy2,\n        y1 = -sinAngle * dx2 + cosAngle * dy2,\n        x1_sq = x1 * x1,\n        y1_sq = y1 * y1,\n        radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\n    if (radiiCheck > 1) {\n      rx = _sqrt(radiiCheck) * rx;\n      ry = _sqrt(radiiCheck) * ry;\n    }\n\n    var rx_sq = rx * rx,\n        ry_sq = ry * ry,\n        sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n\n    if (sq < 0) {\n      sq = 0;\n    }\n\n    var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq),\n        cx1 = coef * (rx * y1 / ry),\n        cy1 = coef * -(ry * x1 / rx),\n        sx2 = (lastX + x) / 2,\n        sy2 = (lastY + y) / 2,\n        cx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n        cy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n        ux = (x1 - cx1) / rx,\n        uy = (y1 - cy1) / ry,\n        vx = (-x1 - cx1) / rx,\n        vy = (-y1 - cy1) / ry,\n        temp = ux * ux + uy * uy,\n        angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n        angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\n    isNaN(angleExtent) && (angleExtent = PI);\n\n    if (!sweepFlag && angleExtent > 0) {\n      angleExtent -= TWOPI;\n    } else if (sweepFlag && angleExtent < 0) {\n      angleExtent += TWOPI;\n    }\n\n    angleStart %= TWOPI;\n    angleExtent %= TWOPI;\n\n    var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n        rawPath = [],\n        angleIncrement = angleExtent / segments,\n        controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n        ma = cosAngle * rx,\n        mb = sinAngle * rx,\n        mc = sinAngle * -ry,\n        md = cosAngle * ry,\n        i;\n\n    for (i = 0; i < segments; i++) {\n      angle = angleStart + i * angleIncrement;\n      x1 = _cos(angle);\n      y1 = _sin(angle);\n      ux = _cos(angle += angleIncrement);\n      uy = _sin(angle);\n      rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n    }\n\n    for (i = 0; i < rawPath.length; i += 2) {\n      x1 = rawPath[i];\n      y1 = rawPath[i + 1];\n      rawPath[i] = x1 * ma + y1 * mc + cx;\n      rawPath[i + 1] = x1 * mb + y1 * md + cy;\n    }\n\n    rawPath[i - 2] = x;\n    rawPath[i - 1] = y;\n    return rawPath;\n  }\n\n  function stringToRawPath(d) {\n    var a = (d + \"\").replace(_scientific, function (m) {\n      var n = +m;\n      return n < 0.0001 && n > -0.0001 ? 0 : n;\n    }).match(_svgPathExp) || [],\n        path = [],\n        relativeX = 0,\n        relativeY = 0,\n        twoThirds = 2 / 3,\n        elements = a.length,\n        points = 0,\n        errorMessage = \"ERROR: malformed path: \" + d,\n        i,\n        j,\n        x,\n        y,\n        command,\n        isRelative,\n        segment,\n        startX,\n        startY,\n        difX,\n        difY,\n        beziers,\n        prevCommand,\n        flag1,\n        flag2,\n        line = function line(sx, sy, ex, ey) {\n      difX = (ex - sx) / 3;\n      difY = (ey - sy) / 3;\n      segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n    };\n\n    if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n      console.log(errorMessage);\n      return path;\n    }\n\n    for (i = 0; i < elements; i++) {\n      prevCommand = command;\n\n      if (isNaN(a[i])) {\n        command = a[i].toUpperCase();\n        isRelative = command !== a[i];\n      } else {\n        i--;\n      }\n\n      x = +a[i + 1];\n      y = +a[i + 2];\n\n      if (isRelative) {\n        x += relativeX;\n        y += relativeY;\n      }\n\n      if (!i) {\n        startX = x;\n        startY = y;\n      }\n\n      if (command === \"M\") {\n        if (segment) {\n          if (segment.length < 8) {\n            path.length -= 1;\n          } else {\n            points += segment.length;\n          }\n        }\n\n        relativeX = startX = x;\n        relativeY = startY = y;\n        segment = [x, y];\n        path.push(segment);\n        i += 2;\n        command = \"L\";\n      } else if (command === \"C\") {\n        if (!segment) {\n          segment = [0, 0];\n        }\n\n        if (!isRelative) {\n          relativeX = relativeY = 0;\n        }\n\n        segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n        i += 6;\n      } else if (command === \"S\") {\n        difX = relativeX;\n        difY = relativeY;\n\n        if (prevCommand === \"C\" || prevCommand === \"S\") {\n          difX += relativeX - segment[segment.length - 4];\n          difY += relativeY - segment[segment.length - 3];\n        }\n\n        if (!isRelative) {\n          relativeX = relativeY = 0;\n        }\n\n        segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n        i += 4;\n      } else if (command === \"Q\") {\n        difX = relativeX + (x - relativeX) * twoThirds;\n        difY = relativeY + (y - relativeY) * twoThirds;\n\n        if (!isRelative) {\n          relativeX = relativeY = 0;\n        }\n\n        relativeX += a[i + 3] * 1;\n        relativeY += a[i + 4] * 1;\n        segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n        i += 4;\n      } else if (command === \"T\") {\n        difX = relativeX - segment[segment.length - 4];\n        difY = relativeY - segment[segment.length - 3];\n        segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n        i += 2;\n      } else if (command === \"H\") {\n        line(relativeX, relativeY, relativeX = x, relativeY);\n        i += 1;\n      } else if (command === \"V\") {\n        line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n        i += 1;\n      } else if (command === \"L\" || command === \"Z\") {\n        if (command === \"Z\") {\n          x = startX;\n          y = startY;\n          segment.closed = true;\n        }\n\n        if (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n          line(relativeX, relativeY, x, y);\n\n          if (command === \"L\") {\n            i += 2;\n          }\n        }\n\n        relativeX = x;\n        relativeY = y;\n      } else if (command === \"A\") {\n        flag1 = a[i + 4];\n        flag2 = a[i + 5];\n        difX = a[i + 6];\n        difY = a[i + 7];\n        j = 7;\n\n        if (flag1.length > 1) {\n          if (flag1.length < 3) {\n            difY = difX;\n            difX = flag2;\n            j--;\n          } else {\n            difY = flag2;\n            difX = flag1.substr(2);\n            j -= 2;\n          }\n\n          flag2 = flag1.charAt(1);\n          flag1 = flag1.charAt(0);\n        }\n\n        beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n        i += j;\n\n        if (beziers) {\n          for (j = 0; j < beziers.length; j++) {\n            segment.push(beziers[j]);\n          }\n        }\n\n        relativeX = segment[segment.length - 2];\n        relativeY = segment[segment.length - 1];\n      } else {\n        console.log(errorMessage);\n      }\n    }\n\n    i = segment.length;\n\n    if (i < 6) {\n      path.pop();\n      i = 0;\n    } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n      segment.closed = true;\n    }\n\n    path.totalPoints = points + i;\n    return path;\n  }\n\n  function flatPointsToSegment(points, curviness) {\n    if (curviness === void 0) {\n      curviness = 1;\n    }\n\n    var x = points[0],\n        y = 0,\n        segment = [x, y],\n        i = 2;\n\n    for (; i < points.length; i += 2) {\n      segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n    }\n\n    return segment;\n  }\n\n  function pointsToSegment(points, curviness, cornerThreshold) {\n    _abs(points[0] - points[2]) < 1e-4 && _abs(points[1] - points[3]) < 1e-4 && (points = points.slice(2));\n    var l = points.length - 2,\n        x = +points[0],\n        y = +points[1],\n        nextX = +points[2],\n        nextY = +points[3],\n        segment = [x, y, x, y],\n        dx2 = nextX - x,\n        dy2 = nextY - y,\n        closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001,\n        prevX,\n        prevY,\n        angle,\n        slope,\n        i,\n        dx1,\n        dx3,\n        dy1,\n        dy3,\n        d1,\n        d2,\n        a,\n        b,\n        c;\n\n    if (isNaN(cornerThreshold)) {\n      cornerThreshold = Math.PI / 10;\n    }\n\n    if (closed) {\n      points.push(nextX, nextY);\n      nextX = x;\n      nextY = y;\n      x = points[l - 2];\n      y = points[l - 1];\n      points.unshift(x, y);\n      l += 4;\n    }\n\n    curviness = curviness || curviness === 0 ? +curviness : 1;\n\n    for (i = 2; i < l; i += 2) {\n      prevX = x;\n      prevY = y;\n      x = nextX;\n      y = nextY;\n      nextX = +points[i + 2];\n      nextY = +points[i + 3];\n\n      if (x === nextX && y === nextY) {\n        continue;\n      }\n\n      dx1 = dx2;\n      dy1 = dy2;\n      dx2 = nextX - x;\n      dy2 = nextY - y;\n      dx3 = nextX - prevX;\n      dy3 = nextY - prevY;\n      a = dx1 * dx1 + dy1 * dy1;\n      b = dx2 * dx2 + dy2 * dy2;\n      c = dx3 * dx3 + dy3 * dy3;\n      angle = Math.acos((a + b - c) / _sqrt(4 * a * b));\n      d2 = angle / Math.PI * curviness;\n      d1 = _sqrt(a) * d2;\n      d2 *= _sqrt(b);\n\n      if (x !== prevX || y !== prevY) {\n        if (angle > cornerThreshold) {\n          slope = _atan2(dy3, dx3);\n          segment.push(_round(x - _cos(slope) * d1), _round(y - _sin(slope) * d1), _round(x), _round(y), _round(x + _cos(slope) * d2), _round(y + _sin(slope) * d2));\n        } else {\n          slope = _atan2(dy1, dx1);\n          segment.push(_round(x - _cos(slope) * d1), _round(y - _sin(slope) * d1));\n          slope = _atan2(dy2, dx2);\n          segment.push(_round(x), _round(y), _round(x + _cos(slope) * d2), _round(y + _sin(slope) * d2));\n        }\n      }\n    }\n\n    x !== nextX || y !== nextY || segment.length < 4 ? segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY)) : segment.length -= 2;\n\n    if (closed) {\n      segment.splice(0, 6);\n      segment.length = segment.length - 6;\n    }\n\n    return segment;\n  }\n\n  function rawPathToString(rawPath) {\n    if (_isNumber(rawPath[0])) {\n      rawPath = [rawPath];\n    }\n\n    var result = \"\",\n        l = rawPath.length,\n        sl,\n        s,\n        i,\n        segment;\n\n    for (s = 0; s < l; s++) {\n      segment = rawPath[s];\n      result += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n      sl = segment.length;\n\n      for (i = 2; i < sl; i++) {\n        result += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n      }\n\n      if (segment.closed) {\n        result += \"z\";\n      }\n    }\n\n    return result;\n  }\n\n  var _doc,\n      _win,\n      _docElement,\n      _body,\n      _divContainer,\n      _svgContainer,\n      _identityMatrix,\n      _gEl,\n      _transformProp = \"transform\",\n      _transformOriginProp = _transformProp + \"Origin\",\n      _hasOffsetBug,\n      _setDoc = function _setDoc(element) {\n    var doc = element.ownerDocument || element;\n\n    if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n      _transformProp = \"msTransform\";\n      _transformOriginProp = _transformProp + \"Origin\";\n    }\n\n    while (doc.parentNode && (doc = doc.parentNode)) {}\n\n    _win = window;\n    _identityMatrix = new Matrix2D();\n\n    if (doc) {\n      _doc = doc;\n      _docElement = doc.documentElement;\n      _body = doc.body;\n      _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      _gEl.style.transform = \"none\";\n      var d1 = doc.createElement(\"div\"),\n          d2 = doc.createElement(\"div\");\n\n      _body.appendChild(d1);\n\n      d1.appendChild(d2);\n      d1.style.position = \"static\";\n      d1.style[_transformProp] = \"translate3d(0,0,1px)\";\n      _hasOffsetBug = d2.offsetParent !== d1;\n\n      _body.removeChild(d1);\n    }\n\n    return doc;\n  },\n      _forceNonZeroScale = function _forceNonZeroScale(e) {\n    var a, cache;\n\n    while (e && e !== _body) {\n      cache = e._gsap;\n      cache && cache.uncache && cache.get(e, \"x\");\n\n      if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n        cache.scaleX = cache.scaleY = 1e-4;\n        cache.renderTransform(1, cache);\n        a ? a.push(cache) : a = [cache];\n      }\n\n      e = e.parentNode;\n    }\n\n    return a;\n  },\n      _svgTemps = [],\n      _divTemps = [],\n      _getDocScrollTop = function _getDocScrollTop() {\n    return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n  },\n      _getDocScrollLeft = function _getDocScrollLeft() {\n    return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n  },\n      _svgOwner = function _svgOwner(element) {\n    return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n  },\n      _isFixed = function _isFixed(element) {\n    if (_win.getComputedStyle(element).position === \"fixed\") {\n      return true;\n    }\n\n    element = element.parentNode;\n\n    if (element && element.nodeType === 1) {\n      return _isFixed(element);\n    }\n  },\n      _createSibling = function _createSibling(element, i) {\n    if (element.parentNode && (_doc || _setDoc(element))) {\n      var svg = _svgOwner(element),\n          ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\",\n          type = svg ? i ? \"rect\" : \"g\" : \"div\",\n          x = i !== 2 ? 0 : 100,\n          y = i === 3 ? 100 : 0,\n          css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\",\n          e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\n      if (i) {\n        if (!svg) {\n          if (!_divContainer) {\n            _divContainer = _createSibling(element);\n            _divContainer.style.cssText = css;\n          }\n\n          e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\n          _divContainer.appendChild(e);\n        } else {\n          _svgContainer || (_svgContainer = _createSibling(element));\n          e.setAttribute(\"width\", 0.01);\n          e.setAttribute(\"height\", 0.01);\n          e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n          _svgContainer.appendChild(e);\n        }\n      }\n\n      return e;\n    }\n\n    throw \"Need document and parent.\";\n  },\n      _consolidate = function _consolidate(m) {\n    var c = new Matrix2D(),\n        i = 0;\n\n    for (; i < m.numberOfItems; i++) {\n      c.multiply(m.getItem(i).matrix);\n    }\n\n    return c;\n  },\n      _getCTM = function _getCTM(svg) {\n    var m = svg.getCTM(),\n        transform;\n\n    if (!m) {\n      transform = svg.style[_transformProp];\n      svg.style[_transformProp] = \"none\";\n      svg.appendChild(_gEl);\n      m = _gEl.getCTM();\n      svg.removeChild(_gEl);\n      transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n    }\n\n    return m || _identityMatrix.clone();\n  },\n      _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n    var svg = _svgOwner(element),\n        isRootSVG = element === svg,\n        siblings = svg ? _svgTemps : _divTemps,\n        parent = element.parentNode,\n        container,\n        m,\n        b,\n        x,\n        y,\n        cs;\n\n    if (element === _win) {\n      return element;\n    }\n\n    siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n    container = svg ? _svgContainer : _divContainer;\n\n    if (svg) {\n      if (isRootSVG) {\n        b = _getCTM(element);\n        x = -b.e / b.a;\n        y = -b.f / b.d;\n        m = _identityMatrix;\n      } else {\n        b = element.getBBox();\n        m = element.transform ? element.transform.baseVal : {};\n        m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;\n        x = m.a * b.x + m.c * b.y;\n        y = m.b * b.x + m.d * b.y;\n      }\n\n      if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n        x = y = 0;\n      }\n\n      (isRootSVG ? svg : parent).appendChild(container);\n      container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n    } else {\n      x = y = 0;\n\n      if (_hasOffsetBug) {\n        m = element.offsetParent;\n        b = element;\n\n        while (b && (b = b.parentNode) && b !== m && b.parentNode) {\n          if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n            x = b.offsetLeft;\n            y = b.offsetTop;\n            b = 0;\n          }\n        }\n      }\n\n      cs = _win.getComputedStyle(element);\n\n      if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n        m = element.offsetParent;\n\n        while (parent && parent !== m) {\n          x += parent.scrollLeft || 0;\n          y += parent.scrollTop || 0;\n          parent = parent.parentNode;\n        }\n      }\n\n      b = container.style;\n      b.top = element.offsetTop - y + \"px\";\n      b.left = element.offsetLeft - x + \"px\";\n      b[_transformProp] = cs[_transformProp];\n      b[_transformOriginProp] = cs[_transformOriginProp];\n      b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n      element.parentNode.appendChild(container);\n    }\n\n    return container;\n  },\n      _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n    m.a = a;\n    m.b = b;\n    m.c = c;\n    m.d = d;\n    m.e = e;\n    m.f = f;\n    return m;\n  };\n\n  var Matrix2D = function () {\n    function Matrix2D(a, b, c, d, e, f) {\n      if (a === void 0) {\n        a = 1;\n      }\n\n      if (b === void 0) {\n        b = 0;\n      }\n\n      if (c === void 0) {\n        c = 0;\n      }\n\n      if (d === void 0) {\n        d = 1;\n      }\n\n      if (e === void 0) {\n        e = 0;\n      }\n\n      if (f === void 0) {\n        f = 0;\n      }\n\n      _setMatrix(this, a, b, c, d, e, f);\n    }\n\n    var _proto = Matrix2D.prototype;\n\n    _proto.inverse = function inverse() {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f,\n          determinant = a * d - b * c || 1e-10;\n      return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n    };\n\n    _proto.multiply = function multiply(matrix) {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f,\n          a2 = matrix.a,\n          b2 = matrix.c,\n          c2 = matrix.b,\n          d2 = matrix.d,\n          e2 = matrix.e,\n          f2 = matrix.f;\n      return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n    };\n\n    _proto.clone = function clone() {\n      return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n\n    _proto.equals = function equals(matrix) {\n      var a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f;\n      return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n    };\n\n    _proto.apply = function apply(point, decoratee) {\n      if (decoratee === void 0) {\n        decoratee = {};\n      }\n\n      var x = point.x,\n          y = point.y,\n          a = this.a,\n          b = this.b,\n          c = this.c,\n          d = this.d,\n          e = this.e,\n          f = this.f;\n      decoratee.x = x * a + y * c + e || 0;\n      decoratee.y = x * b + y * d + f || 0;\n      return decoratee;\n    };\n\n    return Matrix2D;\n  }();\n\n  function getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n    if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n      return new Matrix2D();\n    }\n\n    var zeroScales = _forceNonZeroScale(element),\n        svg = _svgOwner(element),\n        temps = svg ? _svgTemps : _divTemps,\n        container = _placeSiblings(element, adjustGOffset),\n        b1 = temps[0].getBoundingClientRect(),\n        b2 = temps[1].getBoundingClientRect(),\n        b3 = temps[2].getBoundingClientRect(),\n        parent = container.parentNode,\n        isFixed = !includeScrollInFixed && _isFixed(element),\n        m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n\n    parent.removeChild(container);\n\n    if (zeroScales) {\n      b1 = zeroScales.length;\n\n      while (b1--) {\n        b2 = zeroScales[b1];\n        b2.scaleX = b2.scaleY = 0;\n        b2.renderTransform(1, b2);\n      }\n    }\n\n    return inverse ? m.inverse() : m;\n  }\n  /*!\n   * MotionPathPlugin 3.8.0\n   * https://greensock.com\n   *\n   * @license Copyright 2008-2021, GreenSock. All rights reserved.\n   * Subject to the terms at https://greensock.com/standard-license or for\n   * Club GreenSock members, the agreement issued with that membership.\n   * @author: Jack Doyle, jack@greensock.com\n  */\n\n\n  var _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n      _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n      _DEG2RAD$1 = Math.PI / 180,\n      gsap,\n      PropTween,\n      _getUnit,\n      _toArray,\n      _getGSAP = function _getGSAP() {\n    return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n  },\n      _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n    var l = values.length,\n        si = mode === 2 ? 0 : mode,\n        i = 0,\n        v;\n\n    for (; i < l; i++) {\n      segment[si] = v = parseFloat(values[i][property]);\n      mode === 2 && (segment[si + 1] = 0);\n      si += 2;\n    }\n\n    return segment;\n  },\n      _getPropNum = function _getPropNum(target, prop, unit) {\n    return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n  },\n      _relativize = function _relativize(segment) {\n    var x = segment[0],\n        y = segment[1],\n        i;\n\n    for (i = 2; i < segment.length; i += 2) {\n      x = segment[i] += x;\n      y = segment[i + 1] += y;\n    }\n  },\n      _segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n    if (vars.type === \"cubic\") {\n      segment = [segment];\n    } else {\n      vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n      vars.relative && _relativize(segment);\n      var pointFunc = y ? pointsToSegment : flatPointsToSegment;\n      segment = [pointFunc(segment, vars.curviness)];\n    }\n\n    segment = slicer(_align(segment, target, vars));\n\n    _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n\n    y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n    return cacheRawPathMeasurements(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12));\n  },\n      _emptyFunc = function _emptyFunc(v) {\n    return v;\n  },\n      _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g,\n      _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n    var m = getGlobalMatrix(element),\n        x = 0,\n        y = 0,\n        svg;\n\n    if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n      svg = element.viewBox.baseVal;\n      svg.width || (svg = {\n        width: +element.getAttribute(\"width\"),\n        height: +element.getAttribute(\"height\")\n      });\n    } else {\n      svg = origin && element.getBBox && element.getBBox();\n    }\n\n    if (origin && origin !== \"auto\") {\n      x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n      y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n    }\n\n    return parentMatrix.apply(x || y ? m.apply({\n      x: x,\n      y: y\n    }) : {\n      x: m.e,\n      y: m.f\n    });\n  },\n      _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n    var parentMatrix = getGlobalMatrix(fromElement.parentNode, true, true),\n        m = parentMatrix.clone().multiply(getGlobalMatrix(toElement)),\n        fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix),\n        _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix),\n        x = _originToPoint2.x,\n        y = _originToPoint2.y,\n        p;\n\n    m.e = m.f = 0;\n\n    if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n      p = toElement.getAttribute(\"d\").match(_numExp) || [];\n      p = m.apply({\n        x: +p[0],\n        y: +p[1]\n      });\n      x += p.x;\n      y += p.y;\n    }\n\n    if (p || toElement.getBBox && fromElement.getBBox && toElement.ownerSVGElement === fromElement.ownerSVGElement) {\n      p = m.apply(toElement.getBBox());\n      x -= p.x;\n      y -= p.y;\n    }\n\n    m.e = x - fromPoint.x;\n    m.f = y - fromPoint.y;\n    return m;\n  },\n      _align = function _align(rawPath, target, _ref) {\n    var align = _ref.align,\n        matrix = _ref.matrix,\n        offsetX = _ref.offsetX,\n        offsetY = _ref.offsetY,\n        alignOrigin = _ref.alignOrigin;\n\n    var x = rawPath[0][0],\n        y = rawPath[0][1],\n        curX = _getPropNum(target, \"x\"),\n        curY = _getPropNum(target, \"y\"),\n        alignTarget,\n        m,\n        p;\n\n    if (!rawPath || !rawPath.length) {\n      return getRawPath(\"M0,0L0,0\");\n    }\n\n    if (align) {\n      if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n        transformRawPath(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n      } else {\n        if (alignOrigin && alignOrigin[2] !== false) {\n          gsap.set(target, {\n            transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n          });\n        } else {\n          alignOrigin = [_getPropNum(target, \"xPercent\") / -100, _getPropNum(target, \"yPercent\") / -100];\n        }\n\n        m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n        p = m.apply({\n          x: x,\n          y: y\n        });\n        transformRawPath(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n      }\n    }\n\n    if (matrix) {\n      transformRawPath(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n    } else if (offsetX || offsetY) {\n      transformRawPath(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n    }\n\n    return rawPath;\n  },\n      _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n    var cache = target._gsap,\n        harness = cache.harness,\n        alias = harness && harness.aliases && harness.aliases[property],\n        prop = alias && alias.indexOf(\",\") < 0 ? alias : property,\n        pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n    pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n    pt.path = rawPath;\n    pt.pp = pathProperty;\n\n    plugin._props.push(prop);\n  },\n      _sliceModifier = function _sliceModifier(start, end) {\n    return function (rawPath) {\n      return start || end !== 1 ? sliceRawPath(rawPath, start, end) : rawPath;\n    };\n  };\n\n  var MotionPathPlugin = {\n    version: \"3.8.0\",\n    name: \"motionPath\",\n    register: function register(core, Plugin, propTween) {\n      gsap = core;\n      _getUnit = gsap.utils.getUnit;\n      _toArray = gsap.utils.toArray;\n      PropTween = propTween;\n    },\n    init: function init(target, vars) {\n      if (!gsap) {\n        console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n        return false;\n      }\n\n      if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n        vars = {\n          path: vars\n        };\n      }\n\n      var rawPaths = [],\n          _vars = vars,\n          path = _vars.path,\n          autoRotate = _vars.autoRotate,\n          unitX = _vars.unitX,\n          unitY = _vars.unitY,\n          x = _vars.x,\n          y = _vars.y,\n          firstObj = path[0],\n          slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1),\n          rawPath,\n          p;\n\n      this.rawPaths = rawPaths;\n      this.target = target;\n\n      if (this.rotate = autoRotate || autoRotate === 0) {\n        this.rOffset = parseFloat(autoRotate) || 0;\n        this.radians = !!vars.useRadians;\n        this.rProp = vars.rotation || \"rotation\";\n        this.rSet = target._gsap.set(target, this.rProp, this);\n        this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0;\n      }\n\n      if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n        for (p in firstObj) {\n          if (!x && ~_xProps.indexOf(p)) {\n            x = p;\n          } else if (!y && ~_yProps.indexOf(p)) {\n            y = p;\n          }\n        }\n\n        if (x && y) {\n          rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n        } else {\n          x = y = 0;\n        }\n\n        for (p in firstObj) {\n          p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n        }\n      } else {\n        rawPath = slicer(_align(getRawPath(vars.path), target, vars));\n        cacheRawPathMeasurements(rawPath, vars.resolution);\n        rawPaths.push(rawPath);\n\n        _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n\n        _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n      }\n    },\n    render: function render(ratio, data) {\n      var rawPaths = data.rawPaths,\n          i = rawPaths.length,\n          pt = data._pt;\n\n      if (ratio > 1) {\n        ratio = 1;\n      } else if (ratio < 0) {\n        ratio = 0;\n      }\n\n      while (i--) {\n        getPositionOnPath(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n      }\n\n      while (pt) {\n        pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n        pt = pt._next;\n      }\n\n      data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD$1 : 1) + data.rOffset + data.ru, data, ratio);\n    },\n    getLength: function getLength(path) {\n      return cacheRawPathMeasurements(getRawPath(path)).totalLength;\n    },\n    sliceRawPath: sliceRawPath,\n    getRawPath: getRawPath,\n    pointsToSegment: pointsToSegment,\n    stringToRawPath: stringToRawPath,\n    rawPathToString: rawPathToString,\n    transformRawPath: transformRawPath,\n    getGlobalMatrix: getGlobalMatrix,\n    getPositionOnPath: getPositionOnPath,\n    cacheRawPathMeasurements: cacheRawPathMeasurements,\n    convertToPath: function convertToPath$1(targets, swap) {\n      return _toArray(targets).map(function (target) {\n        return convertToPath(target, swap !== false);\n      });\n    },\n    convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n      var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n      return point ? m.apply(point) : m;\n    },\n    getAlignMatrix: _getAlignMatrix,\n    getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n      var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n\n      return {\n        x: m.e,\n        y: m.f\n      };\n    },\n    arrayToRawPath: function arrayToRawPath(value, vars) {\n      vars = vars || {};\n\n      var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n\n      vars.relative && _relativize(segment);\n      return [vars.type === \"cubic\" ? segment : pointsToSegment(segment, vars.curviness)];\n    }\n  };\n  _getGSAP() && gsap.registerPlugin(MotionPathPlugin);\n  exports.MotionPathPlugin = MotionPathPlugin;\n  exports.default = MotionPathPlugin;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/luna.c/Documents/CodeWork/Luna_Portfolio/node_modules/gsap/dist/MotionPathPlugin.js"],"names":["global","factory","exports","module","define","amd","self","window","_svgPathExp","_numbersExp","_scientific","_selectorExp","_DEG2RAD","Math","PI","_RAD2DEG","_sin","sin","_cos","cos","_abs","abs","_sqrt","sqrt","_atan2","atan2","_largeNum","_isString","value","_isNumber","_isUndefined","_temp","_temp2","_roundingNum","_wrapProgress","progress","round","_round","_roundPrecise","_splitSegment","rawPath","segIndex","i","t","segment","shift","subdivideSegment","length","splice","slice","_getSampleIndex","samples","l","_reverseRawPath","skipOuter","reverse","reversed","reverseSegment","_copyMetaData","source","copy","totalLength","lookup","minLength","resolution","totalPoints","_appendOrMerge","index","prevSeg","concat","getRawPath","test","document","querySelector","e","getAttribute","_gsPath","_dirty","stringToRawPath","console","warn","copyRawPath","a","y","_createPath","ignore","path","createElementNS","attr","call","attributes","name","nodeName","toLowerCase","indexOf","setAttributeNS","nodeValue","_typeAttrs","rect","circle","ellipse","line","_attrToObj","attrs","props","split","obj","convertToPath","element","swap","type","tagName","circ","data","x","r","ry","rcirc","rycirc","points","w","h","x2","x3","x4","x5","x6","y2","y3","y4","y5","y6","getBBox","rx","width","height","join","cx","cy","x1","y1","match","setAttribute","rawPathToString","_gsRawPath","parentNode","insertBefore","removeChild","getRotationAtBezierT","b","c","sliceRawPath","start","end","loops","max","offset","min","cacheRawPathMeasurements","wrap","s","getProgressData","eSeg","sSeg","eSegIndex","sSegIndex","ei","si","sameSegment","sameBezier","wrapsBehind","sShift","eShift","totalSegments","j","angle","push","measureSegment","startIndex","bezierQty","inc","endIndex","samplesIndex","prevLength","xd","xd1","yd","yd1","inv","lengthIndex","segLength","pathLength","ax","ay","cp1x","cp1y","cp2x","cp2y","bx","by","x1a","y1a","x2a","y2a","decoratee","pushToNextIfAtEnd","getPositionOnPath","includeAngle","point","result","transformRawPath","d","tx","ty","arcToSegment","lastX","lastY","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","TWOPI","dx2","dy2","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","sx2","sy2","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","isNaN","segments","ceil","angleIncrement","controlLength","ma","mb","mc","md","replace","m","n","relativeX","relativeY","twoThirds","elements","errorMessage","command","isRelative","startX","startY","difX","difY","beziers","prevCommand","flag1","flag2","sx","sy","ex","ey","log","toUpperCase","closed","substr","charAt","pop","flatPointsToSegment","curviness","pointsToSegment","cornerThreshold","nextX","nextY","prevX","prevY","slope","dx1","dx3","dy1","dy3","d1","d2","unshift","sl","_doc","_win","_docElement","_body","_divContainer","_svgContainer","_identityMatrix","_gEl","_transformProp","_transformOriginProp","_hasOffsetBug","_setDoc","doc","ownerDocument","style","Matrix2D","documentElement","body","transform","createElement","appendChild","position","offsetParent","_forceNonZeroScale","cache","_gsap","uncache","get","scaleX","scaleY","renderTransform","_svgTemps","_divTemps","_getDocScrollTop","pageYOffset","scrollTop","_getDocScrollLeft","pageXOffset","scrollLeft","_svgOwner","ownerSVGElement","_isFixed","getComputedStyle","nodeType","_createSibling","svg","ns","css","cssText","_consolidate","numberOfItems","multiply","getItem","matrix","_getCTM","getCTM","removeProperty","clone","_placeSiblings","adjustGOffset","isRootSVG","siblings","parent","container","cs","f","baseVal","offsetLeft","offsetTop","top","left","_setMatrix","_proto","prototype","inverse","determinant","a2","b2","c2","e2","f2","equals","apply","getGlobalMatrix","includeScrollInFixed","zeroScales","temps","b1","getBoundingClientRect","b3","isFixed","_xProps","_yProps","_DEG2RAD$1","gsap","PropTween","_getUnit","_toArray","_getGSAP","registerPlugin","_populateSegmentFromArray","values","property","mode","v","parseFloat","_getPropNum","target","prop","unit","_relativize","_segmentToRawPath","plugin","slicer","vars","unitX","unitY","fromCurrent","relative","pointFunc","_align","_addDimensionalPropTween","_emptyFunc","_numExp","_originToPoint","origin","parentMatrix","viewBox","offsetWidth","offsetHeight","_getAlignMatrix","fromElement","toElement","fromOrigin","toOrigin","fromPoint","_originToPoint2","p","getTotalLength","_ref","align","offsetX","offsetY","alignOrigin","curX","curY","alignTarget","set","transformOrigin","pathProperty","forceUnit","harness","alias","aliases","pt","_pt","u","pp","_props","_sliceModifier","MotionPathPlugin","version","register","core","Plugin","propTween","utils","getUnit","toArray","init","rawPaths","_vars","autoRotate","firstObj","rotate","rOffset","radians","useRadians","rProp","rotation","rSet","ru","Array","isArray","render","ratio","_next","getLength","convertToPath$1","targets","map","convertCoordinates","getAlignMatrix","getRelativePosition","arrayToRawPath","default","Object","defineProperty"],"mappings":"AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC3B,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,OAAO,CAACC,OAAD,CAAtE,GACA,OAAOE,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcH,OAAd,CAAnD,IACCD,MAAM,GAAGA,MAAM,IAAIM,IAAnB,EAAyBL,OAAO,CAACD,MAAM,CAACO,MAAP,GAAgBP,MAAM,CAACO,MAAP,IAAiB,EAAlC,CADjC,CADA;AAGA,CAJA,EAIC,IAJD,EAIQ,UAAUL,OAAV,EAAmB;AAAE;;AAE7B,MAAIM,WAAW,GAAG,kDAAlB;AAAA,MACIC,WAAW,GAAG,yCADlB;AAAA,MAEIC,WAAW,GAAG,+BAFlB;AAAA,MAGIC,YAAY,GAAG,2BAHnB;AAAA,MAIIC,QAAQ,GAAGC,IAAI,CAACC,EAAL,GAAU,GAJzB;AAAA,MAKIC,QAAQ,GAAG,MAAMF,IAAI,CAACC,EAL1B;AAAA,MAMIE,IAAI,GAAGH,IAAI,CAACI,GANhB;AAAA,MAOIC,IAAI,GAAGL,IAAI,CAACM,GAPhB;AAAA,MAQIC,IAAI,GAAGP,IAAI,CAACQ,GARhB;AAAA,MASIC,KAAK,GAAGT,IAAI,CAACU,IATjB;AAAA,MAUIC,MAAM,GAAGX,IAAI,CAACY,KAVlB;AAAA,MAWIC,SAAS,GAAG,GAXhB;AAAA,MAYIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxC,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AACD,GAdD;AAAA,MAeIC,SAAS,GAAG,SAASA,SAAT,CAAmBD,KAAnB,EAA0B;AACxC,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AACD,GAjBD;AAAA,MAkBIE,YAAY,GAAG,SAASA,YAAT,CAAsBF,KAAtB,EAA6B;AAC9C,WAAO,OAAOA,KAAP,KAAiB,WAAxB;AACD,GApBD;AAAA,MAqBIG,KAAK,GAAG,EArBZ;AAAA,MAsBIC,MAAM,GAAG,EAtBb;AAAA,MAuBIC,YAAY,GAAG,GAvBnB;AAAA,MAwBIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AACnD,WAAOtB,IAAI,CAACuB,KAAL,CAAW,CAACD,QAAQ,GAAGT,SAAZ,IAAyB,CAAzB,GAA6BO,YAAxC,IAAwDA,YAAxD,KAAyEE,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmB,CAA5F,CAAP;AACD,GA1BD;AAAA,MA2BIE,MAAM,GAAG,SAASA,MAAT,CAAgBT,KAAhB,EAAuB;AAClC,WAAOf,IAAI,CAACuB,KAAL,CAAWR,KAAK,GAAGK,YAAnB,IAAmCA,YAAnC,IAAmD,CAA1D;AACD,GA7BD;AAAA,MA8BIK,aAAa,GAAG,SAASA,aAAT,CAAuBV,KAAvB,EAA8B;AAChD,WAAOf,IAAI,CAACuB,KAAL,CAAWR,KAAK,GAAG,IAAnB,IAA2B,IAA3B,IAAmC,CAA1C;AACD,GAhCD;AAAA,MAiCIW,aAAa,GAAG,SAASA,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,CAA1C,EAA6CC,CAA7C,EAAgD;AAClE,QAAIC,OAAO,GAAGJ,OAAO,CAACC,QAAD,CAArB;AAAA,QACII,KAAK,GAAGF,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcG,gBAAgB,CAACF,OAAD,EAAUF,CAAV,EAAaC,CAAb,CAD1C;;AAGA,QAAIE,KAAK,IAAIA,KAAK,GAAGH,CAAR,GAAY,CAAZ,GAAgBE,OAAO,CAACG,MAArC,EAA6C;AAC3CP,MAAAA,OAAO,CAACQ,MAAR,CAAeP,QAAf,EAAyB,CAAzB,EAA4BG,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBP,CAAC,GAAGG,KAAJ,GAAY,CAA7B,CAA5B;AACAD,MAAAA,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBN,CAAC,GAAGG,KAAtB;AACA,aAAO,CAAP;AACD;AACF,GA1CD;AAAA,MA2CIK,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkCJ,MAAlC,EAA0CZ,QAA1C,EAAoD;AACxE,QAAIiB,CAAC,GAAGD,OAAO,CAACJ,MAAhB;AAAA,QACIL,CAAC,GAAG,CAAC,EAAEP,QAAQ,GAAGiB,CAAb,CADT;;AAGA,QAAID,OAAO,CAACT,CAAD,CAAP,GAAaK,MAAjB,EAAyB;AACvB,aAAO,EAAEL,CAAF,IAAOS,OAAO,CAACT,CAAD,CAAP,GAAaK,MAA3B,EAAmC,CAAE;AACtC,KAFD,MAEO;AACL,aAAOI,OAAO,CAAC,EAAET,CAAH,CAAP,GAAeK,MAAf,IAAyBL,CAAC,GAAGU,CAApC,EAAuC,CAAE;AAC1C;;AAED,WAAOV,CAAC,GAAGU,CAAJ,GAAQV,CAAR,GAAYU,CAAC,GAAG,CAAvB;AACD,GAtDD;AAAA,MAuDIC,eAAe,GAAG,SAASA,eAAT,CAAyBb,OAAzB,EAAkCc,SAAlC,EAA6C;AACjE,QAAIZ,CAAC,GAAGF,OAAO,CAACO,MAAhB;AACAO,IAAAA,SAAS,IAAId,OAAO,CAACe,OAAR,EAAb;;AAEA,WAAOb,CAAC,EAAR,EAAY;AACVF,MAAAA,OAAO,CAACE,CAAD,CAAP,CAAWc,QAAX,IAAuBC,cAAc,CAACjB,OAAO,CAACE,CAAD,CAAR,CAArC;AACD;AACF,GA9DD;AAAA,MA+DIgB,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AACvDA,IAAAA,IAAI,CAACC,WAAL,GAAmBF,MAAM,CAACE,WAA1B;;AAEA,QAAIF,MAAM,CAACR,OAAX,EAAoB;AAClBS,MAAAA,IAAI,CAACT,OAAL,GAAeQ,MAAM,CAACR,OAAP,CAAeF,KAAf,CAAqB,CAArB,CAAf;AACAW,MAAAA,IAAI,CAACE,MAAL,GAAcH,MAAM,CAACG,MAAP,CAAcb,KAAd,CAAoB,CAApB,CAAd;AACAW,MAAAA,IAAI,CAACG,SAAL,GAAiBJ,MAAM,CAACI,SAAxB;AACAH,MAAAA,IAAI,CAACI,UAAL,GAAkBL,MAAM,CAACK,UAAzB;AACD,KALD,MAKO,IAAIL,MAAM,CAACM,WAAX,EAAwB;AAC7BL,MAAAA,IAAI,CAACK,WAAL,GAAmBN,MAAM,CAACM,WAA1B;AACD;;AAED,WAAOL,IAAP;AACD,GA5ED;AAAA,MA6EIM,cAAc,GAAG,SAASA,cAAT,CAAwB1B,OAAxB,EAAiCI,OAAjC,EAA0C;AAC7D,QAAIuB,KAAK,GAAG3B,OAAO,CAACO,MAApB;AAAA,QACIqB,OAAO,GAAG5B,OAAO,CAAC2B,KAAK,GAAG,CAAT,CAAP,IAAsB,EADpC;AAAA,QAEIf,CAAC,GAAGgB,OAAO,CAACrB,MAFhB;;AAIA,QAAIoB,KAAK,IAAIvB,OAAO,CAAC,CAAD,CAAP,KAAewB,OAAO,CAAChB,CAAC,GAAG,CAAL,CAA/B,IAA0CR,OAAO,CAAC,CAAD,CAAP,KAAewB,OAAO,CAAChB,CAAC,GAAG,CAAL,CAApE,EAA6E;AAC3ER,MAAAA,OAAO,GAAGwB,OAAO,CAACC,MAAR,CAAezB,OAAO,CAACK,KAAR,CAAc,CAAd,CAAf,CAAV;AACAkB,MAAAA,KAAK;AACN;;AAED3B,IAAAA,OAAO,CAAC2B,KAAD,CAAP,GAAiBvB,OAAjB;AACD,GAxFD;;AA0FA,WAAS0B,UAAT,CAAoB1C,KAApB,EAA2B;AACzBA,IAAAA,KAAK,GAAGD,SAAS,CAACC,KAAD,CAAT,IAAoBjB,YAAY,CAAC4D,IAAb,CAAkB3C,KAAlB,CAApB,GAA+C4C,QAAQ,CAACC,aAAT,CAAuB7C,KAAvB,KAAiCA,KAAhF,GAAwFA,KAAhG;AACA,QAAI8C,CAAC,GAAG9C,KAAK,CAAC+C,YAAN,GAAqB/C,KAArB,GAA6B,CAArC;AAAA,QACIY,OADJ;;AAGA,QAAIkC,CAAC,KAAK9C,KAAK,GAAGA,KAAK,CAAC+C,YAAN,CAAmB,GAAnB,CAAb,CAAL,EAA4C;AAC1C,UAAI,CAACD,CAAC,CAACE,OAAP,EAAgB;AACdF,QAAAA,CAAC,CAACE,OAAF,GAAY,EAAZ;AACD;;AAEDpC,MAAAA,OAAO,GAAGkC,CAAC,CAACE,OAAF,CAAUhD,KAAV,CAAV;AACA,aAAOY,OAAO,IAAI,CAACA,OAAO,CAACqC,MAApB,GAA6BrC,OAA7B,GAAuCkC,CAAC,CAACE,OAAF,CAAUhD,KAAV,IAAmBkD,eAAe,CAAClD,KAAD,CAAhF;AACD;;AAED,WAAO,CAACA,KAAD,GAASmD,OAAO,CAACC,IAAR,CAAa,uDAAb,CAAT,GAAiFrD,SAAS,CAACC,KAAD,CAAT,GAAmBkD,eAAe,CAAClD,KAAD,CAAlC,GAA4CC,SAAS,CAACD,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,CAACA,KAAD,CAAtB,GAAgCA,KAApK;AACD;;AACD,WAASqD,WAAT,CAAqBzC,OAArB,EAA8B;AAC5B,QAAI0C,CAAC,GAAG,EAAR;AAAA,QACIxC,CAAC,GAAG,CADR;;AAGA,WAAOA,CAAC,GAAGF,OAAO,CAACO,MAAnB,EAA2BL,CAAC,EAA5B,EAAgC;AAC9BwC,MAAAA,CAAC,CAACxC,CAAD,CAAD,GAAOgB,aAAa,CAAClB,OAAO,CAACE,CAAD,CAAR,EAAaF,OAAO,CAACE,CAAD,CAAP,CAAWO,KAAX,CAAiB,CAAjB,CAAb,CAApB;AACD;;AAED,WAAOS,aAAa,CAAClB,OAAD,EAAU0C,CAAV,CAApB;AACD;;AACD,WAASzB,cAAT,CAAwBb,OAAxB,EAAiC;AAC/B,QAAIF,CAAC,GAAG,CAAR;AAAA,QACIyC,CADJ;AAEAvC,IAAAA,OAAO,CAACW,OAAR;;AAEA,WAAOb,CAAC,GAAGE,OAAO,CAACG,MAAnB,EAA2BL,CAAC,IAAI,CAAhC,EAAmC;AACjCyC,MAAAA,CAAC,GAAGvC,OAAO,CAACF,CAAD,CAAX;AACAE,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAaE,OAAO,CAACF,CAAC,GAAG,CAAL,CAApB;AACAE,MAAAA,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiByC,CAAjB;AACD;;AAEDvC,IAAAA,OAAO,CAACY,QAAR,GAAmB,CAACZ,OAAO,CAACY,QAA5B;AACD;;AAED,MAAI4B,WAAW,GAAG,SAASA,WAAT,CAAqBV,CAArB,EAAwBW,MAAxB,EAAgC;AAChD,QAAIC,IAAI,GAAGd,QAAQ,CAACe,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAX;AAAA,QACIC,IAAI,GAAG,GAAGvC,KAAH,CAASwC,IAAT,CAAcf,CAAC,CAACgB,UAAhB,CADX;AAAA,QAEIhD,CAAC,GAAG8C,IAAI,CAACzC,MAFb;AAAA,QAGI4C,IAHJ;AAIAN,IAAAA,MAAM,GAAG,MAAMA,MAAN,GAAe,GAAxB;;AAEA,WAAO,EAAE3C,CAAF,GAAM,CAAC,CAAd,EAAiB;AACfiD,MAAAA,IAAI,GAAGH,IAAI,CAAC9C,CAAD,CAAJ,CAAQkD,QAAR,CAAiBC,WAAjB,EAAP;;AAEA,UAAIR,MAAM,CAACS,OAAP,CAAe,MAAMH,IAAN,GAAa,GAA5B,IAAmC,CAAvC,EAA0C;AACxCL,QAAAA,IAAI,CAACS,cAAL,CAAoB,IAApB,EAA0BJ,IAA1B,EAAgCH,IAAI,CAAC9C,CAAD,CAAJ,CAAQsD,SAAxC;AACD;AACF;;AAED,WAAOV,IAAP;AACD,GAhBD;AAAA,MAiBIW,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE,wBADS;AAEfC,IAAAA,MAAM,EAAE,SAFO;AAGfC,IAAAA,OAAO,EAAE,aAHM;AAIfC,IAAAA,IAAI,EAAE;AAJS,GAjBjB;AAAA,MAuBIC,UAAU,GAAG,SAASA,UAAT,CAAoB5B,CAApB,EAAuB6B,KAAvB,EAA8B;AAC7C,QAAIC,KAAK,GAAGD,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAH,GAAsB,EAAvC;AAAA,QACIC,GAAG,GAAG,EADV;AAAA,QAEIhE,CAAC,GAAG8D,KAAK,CAACzD,MAFd;;AAIA,WAAO,EAAEL,CAAF,GAAM,CAAC,CAAd,EAAiB;AACfgE,MAAAA,GAAG,CAACF,KAAK,CAAC9D,CAAD,CAAN,CAAH,GAAgB,CAACgC,CAAC,CAACC,YAAF,CAAe6B,KAAK,CAAC9D,CAAD,CAApB,CAAD,IAA6B,CAA7C;AACD;;AAED,WAAOgE,GAAP;AACD,GAjCD;;AAmCA,WAASC,aAAT,CAAuBC,OAAvB,EAAgCC,IAAhC,EAAsC;AACpC,QAAIC,IAAI,GAAGF,OAAO,CAACG,OAAR,CAAgBlB,WAAhB,EAAX;AAAA,QACImB,IAAI,GAAG,cADX;AAAA,QAEIC,IAFJ;AAAA,QAGIC,CAHJ;AAAA,QAII/B,CAJJ;AAAA,QAKIgC,CALJ;AAAA,QAMIC,EANJ;AAAA,QAOI9B,IAPJ;AAAA,QAQI+B,KARJ;AAAA,QASIC,MATJ;AAAA,QAUIC,MAVJ;AAAA,QAWIC,CAXJ;AAAA,QAYIC,CAZJ;AAAA,QAaIC,EAbJ;AAAA,QAcIC,EAdJ;AAAA,QAeIC,EAfJ;AAAA,QAgBIC,EAhBJ;AAAA,QAiBIC,EAjBJ;AAAA,QAkBIC,EAlBJ;AAAA,QAmBIC,EAnBJ;AAAA,QAoBIC,EApBJ;AAAA,QAqBIC,EArBJ;AAAA,QAsBIC,EAtBJ;AAAA,QAuBI3C,IAvBJ;;AAyBA,QAAIsB,IAAI,KAAK,MAAT,IAAmB,CAACF,OAAO,CAACwB,OAAhC,EAAyC;AACvC,aAAOxB,OAAP;AACD;;AAEDtB,IAAAA,IAAI,GAAGF,WAAW,CAACwB,OAAD,EAAU,mDAAV,CAAlB;AACApB,IAAAA,IAAI,GAAGc,UAAU,CAACM,OAAD,EAAUX,UAAU,CAACa,IAAD,CAApB,CAAjB;;AAEA,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACnBK,MAAAA,CAAC,GAAG3B,IAAI,CAAC6C,EAAT;AACAjB,MAAAA,EAAE,GAAG5B,IAAI,CAAC4B,EAAL,IAAWD,CAAhB;AACAD,MAAAA,CAAC,GAAG1B,IAAI,CAAC0B,CAAT;AACA/B,MAAAA,CAAC,GAAGK,IAAI,CAACL,CAAT;AACAqC,MAAAA,CAAC,GAAGhC,IAAI,CAAC8C,KAAL,GAAanB,CAAC,GAAG,CAArB;AACAM,MAAAA,CAAC,GAAGjC,IAAI,CAAC+C,MAAL,GAAcnB,EAAE,GAAG,CAAvB;;AAEA,UAAID,CAAC,IAAIC,EAAT,EAAa;AACXM,QAAAA,EAAE,GAAGR,CAAC,GAAGC,CAAC,IAAI,IAAIH,IAAR,CAAV;AACAW,QAAAA,EAAE,GAAGT,CAAC,GAAGC,CAAT;AACAS,QAAAA,EAAE,GAAGD,EAAE,GAAGH,CAAV;AACAK,QAAAA,EAAE,GAAGD,EAAE,GAAGT,CAAC,GAAGH,IAAd;AACAc,QAAAA,EAAE,GAAGF,EAAE,GAAGT,CAAV;AACAY,QAAAA,EAAE,GAAG5C,CAAC,GAAGiC,EAAE,IAAI,IAAIJ,IAAR,CAAX;AACAgB,QAAAA,EAAE,GAAG7C,CAAC,GAAGiC,EAAT;AACAa,QAAAA,EAAE,GAAGD,EAAE,GAAGP,CAAV;AACAS,QAAAA,EAAE,GAAGD,EAAE,GAAGb,EAAE,GAAGJ,IAAf;AACAmB,QAAAA,EAAE,GAAGF,EAAE,GAAGb,EAAV;AACAH,QAAAA,IAAI,GAAG,MAAMa,EAAN,GAAW,GAAX,GAAiBE,EAAjB,GAAsB,IAAtB,GAA6BC,EAA7B,GAAkC,IAAlC,GAAyC,CAACH,EAAD,EAAKI,EAAL,EAASL,EAAT,EAAaM,EAAb,EAAiBP,EAAjB,EAAqBO,EAArB,EAAyBP,EAAE,GAAG,CAACA,EAAE,GAAGD,EAAN,IAAY,CAA1C,EAA6CQ,EAA7C,EAAiDR,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAN,IAAY,CAAlE,EAAqEQ,EAArE,EAAyER,EAAzE,EAA6EQ,EAA7E,EAAiFT,EAAjF,EAAqFS,EAArF,EAAyFjB,CAAzF,EAA4FgB,EAA5F,EAAgGhB,CAAhG,EAAmGe,EAAnG,EAAuGf,CAAvG,EAA0Ge,EAAE,GAAG,CAACA,EAAE,GAAGD,EAAN,IAAY,CAA3H,EAA8Hd,CAA9H,EAAiIc,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAN,IAAY,CAAlJ,EAAqJd,CAArJ,EAAwJc,EAAxJ,EAA4Jd,CAA5J,EAA+Ja,EAA/J,EAAmKL,EAAnK,EAAuKvC,CAAvK,EAA0KwC,EAA1K,EAA8KxC,CAA9K,EAAiLwC,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAN,IAAY,CAAlM,EAAqMxC,CAArM,EAAwMyC,EAAE,GAAG,CAACA,EAAE,GAAGD,EAAN,IAAY,CAAzN,EAA4NxC,CAA5N,EAA+NyC,EAA/N,EAAmOzC,CAAnO,EAAsO0C,EAAtO,EAA0O1C,CAA1O,EAA6O2C,EAA7O,EAAiPC,EAAjP,EAAqPD,EAArP,EAAyPE,EAAzP,EAA6PQ,IAA7P,CAAkQ,GAAlQ,CAAzC,GAAkT,GAAzT;AACD,OAZD,MAYO;AACLvB,QAAAA,IAAI,GAAG,OAAOC,CAAC,GAAGM,CAAX,IAAgB,GAAhB,GAAsBrC,CAAtB,GAA0B,IAA1B,GAAiCsC,CAAjC,GAAqC,IAArC,GAA4C,CAACD,CAA7C,GAAiD,IAAjD,GAAwD,CAACC,CAAzD,GAA6D,IAA7D,GAAoED,CAApE,GAAwE,GAA/E;AACD;AACF,KAvBD,MAuBO,IAAIV,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,SAAlC,EAA6C;AAClD,UAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBK,QAAAA,CAAC,GAAGC,EAAE,GAAG5B,IAAI,CAAC2B,CAAd;AACAG,QAAAA,MAAM,GAAGH,CAAC,GAAGH,IAAb;AACD,OAHD,MAGO;AACLG,QAAAA,CAAC,GAAG3B,IAAI,CAAC6C,EAAT;AACAjB,QAAAA,EAAE,GAAG5B,IAAI,CAAC4B,EAAV;AACAE,QAAAA,MAAM,GAAGF,EAAE,GAAGJ,IAAd;AACD;;AAEDE,MAAAA,CAAC,GAAG1B,IAAI,CAACiD,EAAT;AACAtD,MAAAA,CAAC,GAAGK,IAAI,CAACkD,EAAT;AACArB,MAAAA,KAAK,GAAGF,CAAC,GAAGH,IAAZ;AACAC,MAAAA,IAAI,GAAG,OAAOC,CAAC,GAAGC,CAAX,IAAgB,GAAhB,GAAsBhC,CAAtB,GAA0B,IAA1B,GAAiC,CAAC+B,CAAC,GAAGC,CAAL,EAAQhC,CAAC,GAAGmC,MAAZ,EAAoBJ,CAAC,GAAGG,KAAxB,EAA+BlC,CAAC,GAAGiC,EAAnC,EAAuCF,CAAvC,EAA0C/B,CAAC,GAAGiC,EAA9C,EAAkDF,CAAC,GAAGG,KAAtD,EAA6DlC,CAAC,GAAGiC,EAAjE,EAAqEF,CAAC,GAAGC,CAAzE,EAA4EhC,CAAC,GAAGmC,MAAhF,EAAwFJ,CAAC,GAAGC,CAA5F,EAA+FhC,CAA/F,EAAkG+B,CAAC,GAAGC,CAAtG,EAAyGhC,CAAC,GAAGmC,MAA7G,EAAqHJ,CAAC,GAAGG,KAAzH,EAAgIlC,CAAC,GAAGiC,EAApI,EAAwIF,CAAxI,EAA2I/B,CAAC,GAAGiC,EAA/I,EAAmJF,CAAC,GAAGG,KAAvJ,EAA8JlC,CAAC,GAAGiC,EAAlK,EAAsKF,CAAC,GAAGC,CAA1K,EAA6KhC,CAAC,GAAGmC,MAAjL,EAAyLJ,CAAC,GAAGC,CAA7L,EAAgMhC,CAAhM,EAAmMqD,IAAnM,CAAwM,GAAxM,CAAjC,GAAgP,GAAvP;AACD,KAdM,MAcA,IAAI1B,IAAI,KAAK,MAAb,EAAqB;AAC1BG,MAAAA,IAAI,GAAG,MAAMzB,IAAI,CAACmD,EAAX,GAAgB,GAAhB,GAAsBnD,IAAI,CAACoD,EAA3B,GAAgC,IAAhC,GAAuCpD,IAAI,CAACkC,EAA5C,GAAiD,GAAjD,GAAuDlC,IAAI,CAACuC,EAAnE;AACD,KAFM,MAEA,IAAIjB,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,SAApC,EAA+C;AACpDS,MAAAA,MAAM,GAAG,CAACX,OAAO,CAACjC,YAAR,CAAqB,QAArB,IAAiC,EAAlC,EAAsCkE,KAAtC,CAA4CpI,WAA5C,KAA4D,EAArE;AACAyG,MAAAA,CAAC,GAAGK,MAAM,CAAC1E,KAAP,EAAJ;AACAsC,MAAAA,CAAC,GAAGoC,MAAM,CAAC1E,KAAP,EAAJ;AACAoE,MAAAA,IAAI,GAAG,MAAMC,CAAN,GAAU,GAAV,GAAgB/B,CAAhB,GAAoB,IAApB,GAA2BoC,MAAM,CAACiB,IAAP,CAAY,GAAZ,CAAlC;;AAEA,UAAI1B,IAAI,KAAK,SAAb,EAAwB;AACtBG,QAAAA,IAAI,IAAI,MAAMC,CAAN,GAAU,GAAV,GAAgB/B,CAAhB,GAAoB,GAA5B;AACD;AACF;;AAEDG,IAAAA,IAAI,CAACwD,YAAL,CAAkB,GAAlB,EAAuBC,eAAe,CAACzD,IAAI,CAAC0D,UAAL,GAAkBlE,eAAe,CAACmC,IAAD,CAAlC,CAAtC;;AAEA,QAAIJ,IAAI,IAAID,OAAO,CAACqC,UAApB,EAAgC;AAC9BrC,MAAAA,OAAO,CAACqC,UAAR,CAAmBC,YAAnB,CAAgC5D,IAAhC,EAAsCsB,OAAtC;AACAA,MAAAA,OAAO,CAACqC,UAAR,CAAmBE,WAAnB,CAA+BvC,OAA/B;AACD;;AAED,WAAOtB,IAAP;AACD;;AAED,WAAS8D,oBAAT,CAA8BxG,OAA9B,EAAuCF,CAAvC,EAA0CC,CAA1C,EAA6C;AAC3C,QAAIuC,CAAC,GAAGtC,OAAO,CAACF,CAAD,CAAf;AAAA,QACI2G,CAAC,GAAGzG,OAAO,CAACF,CAAC,GAAG,CAAL,CADf;AAAA,QAEI4G,CAAC,GAAG1G,OAAO,CAACF,CAAC,GAAG,CAAL,CAFf;AAAA,QAGIwE,CAHJ;AAIAhC,IAAAA,CAAC,IAAI,CAACmE,CAAC,GAAGnE,CAAL,IAAUvC,CAAf;AACA0G,IAAAA,CAAC,IAAI,CAACC,CAAC,GAAGD,CAAL,IAAU1G,CAAf;AACAuC,IAAAA,CAAC,IAAI,CAACmE,CAAC,GAAGnE,CAAL,IAAUvC,CAAf;AACAuE,IAAAA,CAAC,GAAGmC,CAAC,GAAG,CAACC,CAAC,GAAG,CAAC1G,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiB4G,CAAlB,IAAuB3G,CAA3B,GAA+B0G,CAAhC,IAAqC1G,CAAzC,GAA6CuC,CAAjD;AACAA,IAAAA,CAAC,GAAGtC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAX;AACA2G,IAAAA,CAAC,GAAGzG,OAAO,CAACF,CAAC,GAAG,CAAL,CAAX;AACA4G,IAAAA,CAAC,GAAG1G,OAAO,CAACF,CAAC,GAAG,CAAL,CAAX;AACAwC,IAAAA,CAAC,IAAI,CAACmE,CAAC,GAAGnE,CAAL,IAAUvC,CAAf;AACA0G,IAAAA,CAAC,IAAI,CAACC,CAAC,GAAGD,CAAL,IAAU1G,CAAf;AACAuC,IAAAA,CAAC,IAAI,CAACmE,CAAC,GAAGnE,CAAL,IAAUvC,CAAf;AACA,WAAON,MAAM,CAACb,MAAM,CAAC6H,CAAC,GAAG,CAACC,CAAC,GAAG,CAAC1G,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiB4G,CAAlB,IAAuB3G,CAA3B,GAA+B0G,CAAhC,IAAqC1G,CAAzC,GAA6CuC,CAA9C,EAAiDgC,CAAjD,CAAN,GAA4DnG,QAA7D,CAAb;AACD;;AAED,WAASwI,YAAT,CAAsB/G,OAAtB,EAA+BgH,KAA/B,EAAsCC,GAAtC,EAA2C;AACzCA,IAAAA,GAAG,GAAG3H,YAAY,CAAC2H,GAAD,CAAZ,GAAoB,CAApB,GAAwBnH,aAAa,CAACmH,GAAD,CAAb,IAAsB,CAApD;AACAD,IAAAA,KAAK,GAAGlH,aAAa,CAACkH,KAAD,CAAb,IAAwB,CAAhC;AACA,QAAIE,KAAK,GAAG7I,IAAI,CAAC8I,GAAL,CAAS,CAAT,EAAY,CAAC,EAAEvI,IAAI,CAACqI,GAAG,GAAGD,KAAP,CAAJ,GAAoB,IAAtB,CAAb,CAAZ;AAAA,QACIlE,IAAI,GAAGL,WAAW,CAACzC,OAAD,CADtB;;AAGA,QAAIgH,KAAK,GAAGC,GAAZ,EAAiB;AACfD,MAAAA,KAAK,GAAG,IAAIA,KAAZ;AACAC,MAAAA,GAAG,GAAG,IAAIA,GAAV;;AAEApG,MAAAA,eAAe,CAACiC,IAAD,CAAf;;AAEAA,MAAAA,IAAI,CAACzB,WAAL,GAAmB,CAAnB;AACD;;AAED,QAAI2F,KAAK,GAAG,CAAR,IAAaC,GAAG,GAAG,CAAvB,EAA0B;AACxB,UAAIG,MAAM,GAAG/I,IAAI,CAACQ,GAAL,CAAS,CAAC,CAACR,IAAI,CAACgJ,GAAL,CAASL,KAAT,EAAgBC,GAAhB,CAAX,IAAmC,CAAhD;AACAD,MAAAA,KAAK,IAAII,MAAT;AACAH,MAAAA,GAAG,IAAIG,MAAP;AACD;;AAEDtE,IAAAA,IAAI,CAACzB,WAAL,IAAoBiG,wBAAwB,CAACxE,IAAD,CAA5C;AACA,QAAIyE,IAAI,GAAGN,GAAG,GAAG,CAAjB;AAAA,QACIO,CAAC,GAAGC,eAAe,CAAC3E,IAAD,EAAOkE,KAAP,EAAczH,KAAd,EAAqB,IAArB,CADvB;AAAA,QAEI2C,CAAC,GAAGuF,eAAe,CAAC3E,IAAD,EAAOmE,GAAP,EAAYzH,MAAZ,CAFvB;AAAA,QAGIkI,IAAI,GAAGxF,CAAC,CAAC9B,OAHb;AAAA,QAIIuH,IAAI,GAAGH,CAAC,CAACpH,OAJb;AAAA,QAKIwH,SAAS,GAAG1F,CAAC,CAACjC,QALlB;AAAA,QAMI4H,SAAS,GAAGL,CAAC,CAACvH,QANlB;AAAA,QAOI6H,EAAE,GAAG5F,CAAC,CAAChC,CAPX;AAAA,QAQI6H,EAAE,GAAGP,CAAC,CAACtH,CARX;AAAA,QASI8H,WAAW,GAAGH,SAAS,KAAKD,SAThC;AAAA,QAUIK,UAAU,GAAGH,EAAE,KAAKC,EAAP,IAAaC,WAV9B;AAAA,QAWIE,WAXJ;AAAA,QAYIC,MAZJ;AAAA,QAaIC,MAbJ;AAAA,QAcIlI,CAdJ;AAAA,QAeIkB,IAfJ;AAAA,QAgBIiH,aAhBJ;AAAA,QAiBIzH,CAjBJ;AAAA,QAkBI0H,CAlBJ;;AAoBA,QAAIf,IAAI,IAAIL,KAAZ,EAAmB;AACjBgB,MAAAA,WAAW,GAAGN,SAAS,GAAGC,SAAZ,IAAyBG,WAAW,IAAIF,EAAE,GAAGC,EAA7C,IAAmDE,UAAU,IAAI/F,CAAC,CAAC/B,CAAF,GAAMqH,CAAC,CAACrH,CAAvF;;AAEA,UAAIJ,aAAa,CAAC+C,IAAD,EAAO+E,SAAP,EAAkBE,EAAlB,EAAsBP,CAAC,CAACrH,CAAxB,CAAjB,EAA6C;AAC3C0H,QAAAA,SAAS;;AAET,YAAI,CAACK,WAAL,EAAkB;AAChBN,UAAAA,SAAS;;AAET,cAAIK,UAAJ,EAAgB;AACd/F,YAAAA,CAAC,CAAC/B,CAAF,GAAM,CAAC+B,CAAC,CAAC/B,CAAF,GAAMqH,CAAC,CAACrH,CAAT,KAAe,IAAIqH,CAAC,CAACrH,CAArB,CAAN;AACA2H,YAAAA,EAAE,GAAG,CAAL;AACD,WAHD,MAGO,IAAIE,WAAJ,EAAiB;AACtBF,YAAAA,EAAE,IAAIC,EAAN;AACD;AACF;AACF;;AAED,UAAI,KAAKd,GAAG,GAAGD,KAAX,IAAoB,IAAxB,EAA8B;AAC5BY,QAAAA,SAAS,GAAGC,SAAS,GAAG,CAAxB;AACD,OAFD,MAEO,IAAI,CAAC3F,CAAC,CAAC/B,CAAH,IAAQyH,SAAZ,EAAuB;AAC5BA,QAAAA,SAAS;AACV,OAFM,MAEA,IAAI7H,aAAa,CAAC+C,IAAD,EAAO8E,SAAP,EAAkBE,EAAlB,EAAsB5F,CAAC,CAAC/B,CAAxB,CAAb,IAA2C+H,WAA/C,EAA4D;AACjEL,QAAAA,SAAS;AACV;;AAED,UAAIL,CAAC,CAACrH,CAAF,KAAQ,CAAZ,EAAe;AACb0H,QAAAA,SAAS,GAAG,CAACA,SAAS,GAAG,CAAb,IAAkB/E,IAAI,CAACvC,MAAnC;AACD;;AAEDa,MAAAA,IAAI,GAAG,EAAP;AACAiH,MAAAA,aAAa,GAAGvF,IAAI,CAACvC,MAArB;AACAK,MAAAA,CAAC,GAAG,IAAIyH,aAAa,GAAGnB,KAAxB;AACAoB,MAAAA,CAAC,GAAGT,SAAJ;AACAjH,MAAAA,CAAC,IAAI,CAACyH,aAAa,GAAGR,SAAhB,GAA4BD,SAA7B,IAA0CS,aAA/C;;AAEA,WAAKnI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,CAAhB,EAAmBV,CAAC,EAApB,EAAwB;AACtBwB,QAAAA,cAAc,CAACN,IAAD,EAAO0B,IAAI,CAACwF,CAAC,KAAKD,aAAP,CAAX,CAAd;AACD;;AAEDvF,MAAAA,IAAI,GAAG1B,IAAP;AACD,KAzCD,MAyCO;AACLgH,MAAAA,MAAM,GAAGlG,CAAC,CAAC/B,CAAF,KAAQ,CAAR,GAAY,CAAZ,GAAgBG,gBAAgB,CAACoH,IAAD,EAAOI,EAAP,EAAW5F,CAAC,CAAC/B,CAAb,CAAzC;;AAEA,UAAI6G,KAAK,KAAKC,GAAd,EAAmB;AACjBkB,QAAAA,MAAM,GAAG7H,gBAAgB,CAACqH,IAAD,EAAOI,EAAP,EAAWE,UAAU,GAAGT,CAAC,CAACrH,CAAF,GAAM+B,CAAC,CAAC/B,CAAX,GAAeqH,CAAC,CAACrH,CAAtC,CAAzB;AACA6H,QAAAA,WAAW,KAAKI,MAAM,IAAID,MAAf,CAAX;AACAT,QAAAA,IAAI,CAAClH,MAAL,CAAYsH,EAAE,GAAGM,MAAL,GAAc,CAA1B;AACA,SAACD,MAAM,IAAIJ,EAAX,KAAkBJ,IAAI,CAACnH,MAAL,CAAY,CAAZ,EAAeuH,EAAE,GAAGI,MAApB,CAAlB;AACAjI,QAAAA,CAAC,GAAG4C,IAAI,CAACvC,MAAT;;AAEA,eAAOL,CAAC,EAAR,EAAY;AACV,WAACA,CAAC,GAAG2H,SAAJ,IAAiB3H,CAAC,GAAG0H,SAAtB,KAAoC9E,IAAI,CAACtC,MAAL,CAAYN,CAAZ,EAAe,CAAf,CAApC;AACD;AACF,OAVD,MAUO;AACLwH,QAAAA,IAAI,CAACa,KAAL,GAAa3B,oBAAoB,CAACc,IAAD,EAAOI,EAAE,GAAGM,MAAZ,EAAoB,CAApB,CAAjC;AACAN,QAAAA,EAAE,IAAIM,MAAN;AACAZ,QAAAA,CAAC,GAAGE,IAAI,CAACI,EAAD,CAAR;AACA5F,QAAAA,CAAC,GAAGwF,IAAI,CAACI,EAAE,GAAG,CAAN,CAAR;AACAJ,QAAAA,IAAI,CAACnH,MAAL,GAAcmH,IAAI,CAACrG,WAAL,GAAmB,CAAjC;AACAqG,QAAAA,IAAI,CAACjG,WAAL,GAAmBqB,IAAI,CAACrB,WAAL,GAAmB,CAAtC;AACAiG,QAAAA,IAAI,CAACc,IAAL,CAAUhB,CAAV,EAAatF,CAAb,EAAgBsF,CAAhB,EAAmBtF,CAAnB,EAAsBsF,CAAtB,EAAyBtF,CAAzB,EAA4BsF,CAA5B,EAA+BtF,CAA/B;AACD;AACF;;AAEDY,IAAAA,IAAI,CAACzB,WAAL,GAAmB,CAAnB;AACA,WAAOyB,IAAP;AACD;;AAED,WAAS2F,cAAT,CAAwBrI,OAAxB,EAAiCsI,UAAjC,EAA6CC,SAA7C,EAAwD;AACtDD,IAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;;AAEA,QAAI,CAACtI,OAAO,CAACO,OAAb,EAAsB;AACpBP,MAAAA,OAAO,CAACO,OAAR,GAAkB,EAAlB;AACAP,MAAAA,OAAO,CAACkB,MAAR,GAAiB,EAAjB;AACD;;AAED,QAAIE,UAAU,GAAG,CAAC,CAACpB,OAAO,CAACoB,UAAV,IAAwB,EAAzC;AAAA,QACIoH,GAAG,GAAG,IAAIpH,UADd;AAAA,QAEIqH,QAAQ,GAAGF,SAAS,GAAGD,UAAU,GAAGC,SAAS,GAAG,CAAzB,GAA6B,CAAhC,GAAoCvI,OAAO,CAACG,MAFpE;AAAA,QAGI4F,EAAE,GAAG/F,OAAO,CAACsI,UAAD,CAHhB;AAAA,QAIItC,EAAE,GAAGhG,OAAO,CAACsI,UAAU,GAAG,CAAd,CAJhB;AAAA,QAKII,YAAY,GAAGJ,UAAU,GAAGA,UAAU,GAAG,CAAb,GAAiBlH,UAApB,GAAiC,CAL9D;AAAA,QAMIb,OAAO,GAAGP,OAAO,CAACO,OANtB;AAAA,QAOIW,MAAM,GAAGlB,OAAO,CAACkB,MAPrB;AAAA,QAQI+F,GAAG,GAAG,CAACqB,UAAU,GAAGtI,OAAO,CAACmB,SAAX,GAAuBrC,SAAlC,KAAgDA,SAR1D;AAAA,QASI6J,UAAU,GAAGpI,OAAO,CAACmI,YAAY,GAAGH,SAAS,GAAGnH,UAA3B,GAAwC,CAAzC,CATxB;AAAA,QAUIjB,MAAM,GAAGmI,UAAU,GAAG/H,OAAO,CAACmI,YAAY,GAAG,CAAhB,CAAV,GAA+B,CAVtD;AAAA,QAWI5I,CAXJ;AAAA,QAYIoI,CAZJ;AAAA,QAaIlD,EAbJ;AAAA,QAcID,EAdJ;AAAA,QAeID,EAfJ;AAAA,QAgBI8D,EAhBJ;AAAA,QAiBIC,GAjBJ;AAAA,QAkBIxD,EAlBJ;AAAA,QAmBID,EAnBJ;AAAA,QAoBID,EApBJ;AAAA,QAqBI2D,EArBJ;AAAA,QAsBIC,GAtBJ;AAAA,QAuBIC,GAvBJ;AAAA,QAwBIjJ,CAxBJ;AAAA,QAyBIkJ,WAzBJ;AAAA,QA0BIzI,CA1BJ;AAAA,QA2BI0I,SA3BJ;AA4BA3I,IAAAA,OAAO,CAACJ,MAAR,GAAiBe,MAAM,CAACf,MAAP,GAAgB,CAAjC;;AAEA,SAAK+H,CAAC,GAAGI,UAAU,GAAG,CAAtB,EAAyBJ,CAAC,GAAGO,QAA7B,EAAuCP,CAAC,IAAI,CAA5C,EAA+C;AAC7ClD,MAAAA,EAAE,GAAGhF,OAAO,CAACkI,CAAC,GAAG,CAAL,CAAP,GAAiBnC,EAAtB;AACAhB,MAAAA,EAAE,GAAG/E,OAAO,CAACkI,CAAC,GAAG,CAAL,CAAP,GAAiBnC,EAAtB;AACAjB,MAAAA,EAAE,GAAG9E,OAAO,CAACkI,CAAD,CAAP,GAAanC,EAAlB;AACAV,MAAAA,EAAE,GAAGrF,OAAO,CAACkI,CAAC,GAAG,CAAL,CAAP,GAAiBlC,EAAtB;AACAZ,MAAAA,EAAE,GAAGpF,OAAO,CAACkI,CAAC,GAAG,CAAL,CAAP,GAAiBlC,EAAtB;AACAb,MAAAA,EAAE,GAAGnF,OAAO,CAACkI,CAAC,GAAG,CAAL,CAAP,GAAiBlC,EAAtB;AACA4C,MAAAA,EAAE,GAAGC,GAAG,GAAGC,EAAE,GAAGC,GAAG,GAAG,CAAtB;;AAEA,UAAIvK,IAAI,CAACwG,EAAD,CAAJ,GAAW,GAAX,IAAkBxG,IAAI,CAAC6G,EAAD,CAAJ,GAAW,GAA7B,IAAoC7G,IAAI,CAACsG,EAAD,CAAJ,GAAWtG,IAAI,CAAC2G,EAAD,CAAf,GAAsB,GAA9D,EAAmE;AACjE,YAAInF,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtBH,UAAAA,OAAO,CAACI,MAAR,CAAe8H,CAAf,EAAkB,CAAlB;AACAA,UAAAA,CAAC,IAAI,CAAL;AACAO,UAAAA,QAAQ,IAAI,CAAZ;AACD;AACF,OAND,MAMO;AACL,aAAK3I,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIsB,UAAjB,EAA6BtB,CAAC,EAA9B,EAAkC;AAChCC,UAAAA,CAAC,GAAGyI,GAAG,GAAG1I,CAAV;AACAkJ,UAAAA,GAAG,GAAG,IAAIjJ,CAAV;AACA6I,UAAAA,EAAE,GAAGC,GAAG,IAAIA,GAAG,GAAG,CAAC9I,CAAC,GAAGA,CAAJ,GAAQiF,EAAR,GAAa,IAAIgE,GAAJ,IAAWjJ,CAAC,GAAGgF,EAAJ,GAASiE,GAAG,GAAGlE,EAA1B,CAAd,IAA+C/E,CAAzD,CAAR;AACA+I,UAAAA,EAAE,GAAGC,GAAG,IAAIA,GAAG,GAAG,CAAChJ,CAAC,GAAGA,CAAJ,GAAQsF,EAAR,GAAa,IAAI2D,GAAJ,IAAWjJ,CAAC,GAAGqF,EAAJ,GAAS4D,GAAG,GAAG7D,EAA1B,CAAd,IAA+CpF,CAAzD,CAAR;AACAS,UAAAA,CAAC,GAAG9B,KAAK,CAACoK,EAAE,GAAGA,EAAL,GAAUF,EAAE,GAAGA,EAAhB,CAAT;;AAEA,cAAIpI,CAAC,GAAGyG,GAAR,EAAa;AACXA,YAAAA,GAAG,GAAGzG,CAAN;AACD;;AAEDL,UAAAA,MAAM,IAAIK,CAAV;AACAD,UAAAA,OAAO,CAACmI,YAAY,EAAb,CAAP,GAA0BvI,MAA1B;AACD;AACF;;AAED4F,MAAAA,EAAE,IAAIf,EAAN;AACAgB,MAAAA,EAAE,IAAIX,EAAN;AACD;;AAED,QAAIsD,UAAJ,EAAgB;AACdA,MAAAA,UAAU,IAAIxI,MAAd;;AAEA,aAAOuI,YAAY,GAAGnI,OAAO,CAACJ,MAA9B,EAAsCuI,YAAY,EAAlD,EAAsD;AACpDnI,QAAAA,OAAO,CAACmI,YAAD,CAAP,IAAyBC,UAAzB;AACD;AACF;;AAED,QAAIpI,OAAO,CAACJ,MAAR,IAAkB8G,GAAtB,EAA2B;AACzBjH,MAAAA,OAAO,CAACiB,WAAR,GAAsBiI,SAAS,GAAG3I,OAAO,CAACA,OAAO,CAACJ,MAAR,GAAiB,CAAlB,CAAP,IAA+B,CAAjE;AACAH,MAAAA,OAAO,CAACmB,SAAR,GAAoB8F,GAApB;;AAEA,UAAIiC,SAAS,GAAGjC,GAAZ,GAAkB,IAAtB,EAA4B;AAC1BzG,QAAAA,CAAC,GAAGyI,WAAW,GAAG,CAAlB;;AAEA,aAAKnJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoJ,SAAhB,EAA2BpJ,CAAC,IAAImH,GAAhC,EAAqC;AACnC/F,UAAAA,MAAM,CAACV,CAAC,EAAF,CAAN,GAAcD,OAAO,CAAC0I,WAAD,CAAP,GAAuBnJ,CAAvB,GAA2B,EAAEmJ,WAA7B,GAA2CA,WAAzD;AACD;AACF;AACF,KAXD,MAWO;AACLjJ,MAAAA,OAAO,CAACiB,WAAR,GAAsBV,OAAO,CAAC,CAAD,CAAP,GAAa,CAAnC;AACD;;AAED,WAAO+H,UAAU,GAAGnI,MAAM,GAAGI,OAAO,CAAC+H,UAAU,GAAG,CAAb,GAAiB,CAAlB,CAAnB,GAA0CnI,MAA3D;AACD;;AAED,WAAS+G,wBAAT,CAAkCtH,OAAlC,EAA2CwB,UAA3C,EAAuD;AACrD,QAAI+H,UAAJ,EAAgBxE,MAAhB,EAAwB7E,CAAxB;;AAEA,SAAKA,CAAC,GAAGqJ,UAAU,GAAGxE,MAAM,GAAG,CAA/B,EAAkC7E,CAAC,GAAGF,OAAO,CAACO,MAA9C,EAAsDL,CAAC,EAAvD,EAA2D;AACzDF,MAAAA,OAAO,CAACE,CAAD,CAAP,CAAWsB,UAAX,GAAwB,CAAC,CAACA,UAAF,IAAgB,EAAxC;AACAuD,MAAAA,MAAM,IAAI/E,OAAO,CAACE,CAAD,CAAP,CAAWK,MAArB;AACAgJ,MAAAA,UAAU,IAAId,cAAc,CAACzI,OAAO,CAACE,CAAD,CAAR,CAA5B;AACD;;AAEDF,IAAAA,OAAO,CAACyB,WAAR,GAAsBsD,MAAtB;AACA/E,IAAAA,OAAO,CAACqB,WAAR,GAAsBkI,UAAtB;AACA,WAAOvJ,OAAP;AACD;;AACD,WAASM,gBAAT,CAA0BF,OAA1B,EAAmCF,CAAnC,EAAsCC,CAAtC,EAAyC;AACvC,QAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAnB,EAAsB;AACpB,aAAO,CAAP;AACD;;AAED,QAAIqJ,EAAE,GAAGpJ,OAAO,CAACF,CAAD,CAAhB;AAAA,QACIuJ,EAAE,GAAGrJ,OAAO,CAACF,CAAC,GAAG,CAAL,CADhB;AAAA,QAEIwJ,IAAI,GAAGtJ,OAAO,CAACF,CAAC,GAAG,CAAL,CAFlB;AAAA,QAGIyJ,IAAI,GAAGvJ,OAAO,CAACF,CAAC,GAAG,CAAL,CAHlB;AAAA,QAII0J,IAAI,GAAGxJ,OAAO,CAACF,CAAC,GAAG,CAAL,CAJlB;AAAA,QAKI2J,IAAI,GAAGzJ,OAAO,CAACF,CAAC,GAAG,CAAL,CALlB;AAAA,QAMI4J,EAAE,GAAG1J,OAAO,CAACF,CAAC,GAAG,CAAL,CANhB;AAAA,QAOI6J,EAAE,GAAG3J,OAAO,CAACF,CAAC,GAAG,CAAL,CAPhB;AAAA,QAQI8J,GAAG,GAAGR,EAAE,GAAG,CAACE,IAAI,GAAGF,EAAR,IAAcrJ,CAR7B;AAAA,QASI+E,EAAE,GAAGwE,IAAI,GAAG,CAACE,IAAI,GAAGF,IAAR,IAAgBvJ,CAThC;AAAA,QAUI8J,GAAG,GAAGR,EAAE,GAAG,CAACE,IAAI,GAAGF,EAAR,IAActJ,CAV7B;AAAA,QAWIoF,EAAE,GAAGoE,IAAI,GAAG,CAACE,IAAI,GAAGF,IAAR,IAAgBxJ,CAXhC;AAAA,QAYIgG,EAAE,GAAG6D,GAAG,GAAG,CAAC9E,EAAE,GAAG8E,GAAN,IAAa7J,CAZ5B;AAAA,QAaIiG,EAAE,GAAG6D,GAAG,GAAG,CAAC1E,EAAE,GAAG0E,GAAN,IAAa9J,CAb5B;AAAA,QAcI+J,GAAG,GAAGN,IAAI,GAAG,CAACE,EAAE,GAAGF,IAAN,IAAczJ,CAd/B;AAAA,QAeIgK,GAAG,GAAGN,IAAI,GAAG,CAACE,EAAE,GAAGF,IAAN,IAAc1J,CAf/B;AAgBA+E,IAAAA,EAAE,IAAI,CAACgF,GAAG,GAAGhF,EAAP,IAAa/E,CAAnB;AACAoF,IAAAA,EAAE,IAAI,CAAC4E,GAAG,GAAG5E,EAAP,IAAapF,CAAnB;AACAC,IAAAA,OAAO,CAACI,MAAR,CAAeN,CAAC,GAAG,CAAnB,EAAsB,CAAtB,EAAyBL,MAAM,CAACmK,GAAD,CAA/B,EAAsCnK,MAAM,CAACoK,GAAD,CAA5C,EAAmDpK,MAAM,CAACsG,EAAD,CAAzD,EAA+DtG,MAAM,CAACuG,EAAD,CAArE,EAA2EvG,MAAM,CAACsG,EAAE,GAAG,CAACjB,EAAE,GAAGiB,EAAN,IAAYhG,CAAlB,CAAjF,EAAuGN,MAAM,CAACuG,EAAE,GAAG,CAACb,EAAE,GAAGa,EAAN,IAAYjG,CAAlB,CAA7G,EAAmIN,MAAM,CAACqF,EAAD,CAAzI,EAA+IrF,MAAM,CAAC0F,EAAD,CAArJ,EAA2J1F,MAAM,CAACqK,GAAD,CAAjK,EAAwKrK,MAAM,CAACsK,GAAD,CAA9K;AACA/J,IAAAA,OAAO,CAACO,OAAR,IAAmBP,OAAO,CAACO,OAAR,CAAgBH,MAAhB,CAAuBN,CAAC,GAAG,CAAJ,GAAQE,OAAO,CAACoB,UAAhB,GAA6B,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,CAAzE,CAAnB;AACA,WAAO,CAAP;AACD;;AAED,WAASiG,eAAT,CAAyBzH,OAAzB,EAAkCL,QAAlC,EAA4CyK,SAA5C,EAAuDC,iBAAvD,EAA0E;AACxED,IAAAA,SAAS,GAAGA,SAAS,IAAI,EAAzB;AACApK,IAAAA,OAAO,CAACqB,WAAR,IAAuBiG,wBAAwB,CAACtH,OAAD,CAA/C;;AAEA,QAAIL,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,CAA/B,EAAkC;AAChCA,MAAAA,QAAQ,GAAGD,aAAa,CAACC,QAAD,CAAxB;AACD;;AAED,QAAIM,QAAQ,GAAG,CAAf;AAAA,QACIG,OAAO,GAAGJ,OAAO,CAAC,CAAD,CADrB;AAAA,QAEIW,OAFJ;AAAA,QAGIa,UAHJ;AAAA,QAIIjB,MAJJ;AAAA,QAKI8G,GALJ;AAAA,QAMIF,GANJ;AAAA,QAOIjH,CAPJ;AAAA,QAQIC,CARJ;;AAUA,QAAI,CAACR,QAAL,EAAe;AACbQ,MAAAA,CAAC,GAAGD,CAAC,GAAGD,QAAQ,GAAG,CAAnB;AACAG,MAAAA,OAAO,GAAGJ,OAAO,CAAC,CAAD,CAAjB;AACD,KAHD,MAGO,IAAIL,QAAQ,KAAK,CAAjB,EAAoB;AACzBQ,MAAAA,CAAC,GAAG,CAAJ;AACAF,MAAAA,QAAQ,GAAGD,OAAO,CAACO,MAAR,GAAiB,CAA5B;AACAH,MAAAA,OAAO,GAAGJ,OAAO,CAACC,QAAD,CAAjB;AACAC,MAAAA,CAAC,GAAGE,OAAO,CAACG,MAAR,GAAiB,CAArB;AACD,KALM,MAKA;AACL,UAAIP,OAAO,CAACO,MAAR,GAAiB,CAArB,EAAwB;AACtBA,QAAAA,MAAM,GAAGP,OAAO,CAACqB,WAAR,GAAsB1B,QAA/B;AACAwH,QAAAA,GAAG,GAAGjH,CAAC,GAAG,CAAV;;AAEA,eAAO,CAACiH,GAAG,IAAInH,OAAO,CAACE,CAAC,EAAF,CAAP,CAAamB,WAArB,IAAoCd,MAA3C,EAAmD;AACjDN,UAAAA,QAAQ,GAAGC,CAAX;AACD;;AAEDE,QAAAA,OAAO,GAAGJ,OAAO,CAACC,QAAD,CAAjB;AACAoH,QAAAA,GAAG,GAAGF,GAAG,GAAG/G,OAAO,CAACiB,WAApB;AACA1B,QAAAA,QAAQ,GAAG,CAACY,MAAM,GAAG8G,GAAV,KAAkBF,GAAG,GAAGE,GAAxB,KAAgC,CAA3C;AACD;;AAED1G,MAAAA,OAAO,GAAGP,OAAO,CAACO,OAAlB;AACAa,MAAAA,UAAU,GAAGpB,OAAO,CAACoB,UAArB;AACAjB,MAAAA,MAAM,GAAGH,OAAO,CAACiB,WAAR,GAAsB1B,QAA/B;AACAO,MAAAA,CAAC,GAAGE,OAAO,CAACkB,MAAR,CAAef,MAAf,GAAwBH,OAAO,CAACkB,MAAR,CAAe,CAAC,EAAEf,MAAM,GAAGH,OAAO,CAACmB,SAAnB,CAAhB,KAAkD,CAA1E,GAA8Eb,eAAe,CAACC,OAAD,EAAUJ,MAAV,EAAkBZ,QAAlB,CAAjG;AACA0H,MAAAA,GAAG,GAAGnH,CAAC,GAAGS,OAAO,CAACT,CAAC,GAAG,CAAL,CAAV,GAAoB,CAA3B;AACAiH,MAAAA,GAAG,GAAGxG,OAAO,CAACT,CAAD,CAAb;;AAEA,UAAIiH,GAAG,GAAG5G,MAAV,EAAkB;AAChB8G,QAAAA,GAAG,GAAGF,GAAN;AACAA,QAAAA,GAAG,GAAGxG,OAAO,CAAC,EAAET,CAAH,CAAb;AACD;;AAEDC,MAAAA,CAAC,GAAG,IAAIqB,UAAJ,IAAkB,CAACjB,MAAM,GAAG8G,GAAV,KAAkBF,GAAG,GAAGE,GAAxB,IAA+BnH,CAAC,GAAGsB,UAArD,CAAJ;AACAtB,MAAAA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsB,UAAN,CAAD,GAAqB,CAAzB;;AAEA,UAAI6I,iBAAiB,IAAIlK,CAAC,KAAK,CAA/B,EAAkC;AAChC,YAAID,CAAC,GAAG,CAAJ,GAAQE,OAAO,CAACG,MAApB,EAA4B;AAC1BL,UAAAA,CAAC,IAAI,CAAL;AACAC,UAAAA,CAAC,GAAG,CAAJ;AACD,SAHD,MAGO,IAAIF,QAAQ,GAAG,CAAX,GAAeD,OAAO,CAACO,MAA3B,EAAmC;AACxCL,UAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACAC,UAAAA,OAAO,GAAGJ,OAAO,CAAC,EAAEC,QAAH,CAAjB;AACD;AACF;AACF;;AAEDmK,IAAAA,SAAS,CAACjK,CAAV,GAAcA,CAAd;AACAiK,IAAAA,SAAS,CAAClK,CAAV,GAAcA,CAAd;AACAkK,IAAAA,SAAS,CAACtH,IAAV,GAAiB9C,OAAjB;AACAoK,IAAAA,SAAS,CAAChK,OAAV,GAAoBA,OAApB;AACAgK,IAAAA,SAAS,CAACnK,QAAV,GAAqBA,QAArB;AACA,WAAOmK,SAAP;AACD;;AAED,WAASE,iBAAT,CAA2BtK,OAA3B,EAAoCL,QAApC,EAA8C4K,YAA9C,EAA4DC,KAA5D,EAAmE;AACjE,QAAIpK,OAAO,GAAGJ,OAAO,CAAC,CAAD,CAArB;AAAA,QACIyK,MAAM,GAAGD,KAAK,IAAI,EADtB;AAAA,QAEI7J,OAFJ;AAAA,QAGIa,UAHJ;AAAA,QAIIjB,MAJJ;AAAA,QAKI8G,GALJ;AAAA,QAMIF,GANJ;AAAA,QAOIjH,CAPJ;AAAA,QAQIC,CARJ;AAAA,QASIuC,CATJ;AAAA,QAUI0G,GAVJ;;AAYA,QAAIzJ,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,CAA/B,EAAkC;AAChCA,MAAAA,QAAQ,GAAGD,aAAa,CAACC,QAAD,CAAxB;AACD;;AAED,QAAIK,OAAO,CAACO,MAAR,GAAiB,CAArB,EAAwB;AACtBA,MAAAA,MAAM,GAAGP,OAAO,CAACqB,WAAR,GAAsB1B,QAA/B;AACAwH,MAAAA,GAAG,GAAGjH,CAAC,GAAG,CAAV;;AAEA,aAAO,CAACiH,GAAG,IAAInH,OAAO,CAACE,CAAC,EAAF,CAAP,CAAamB,WAArB,IAAoCd,MAA3C,EAAmD;AACjDH,QAAAA,OAAO,GAAGJ,OAAO,CAACE,CAAD,CAAjB;AACD;;AAEDmH,MAAAA,GAAG,GAAGF,GAAG,GAAG/G,OAAO,CAACiB,WAApB;AACA1B,MAAAA,QAAQ,GAAG,CAACY,MAAM,GAAG8G,GAAV,KAAkBF,GAAG,GAAGE,GAAxB,KAAgC,CAA3C;AACD;;AAED1G,IAAAA,OAAO,GAAGP,OAAO,CAACO,OAAlB;AACAa,IAAAA,UAAU,GAAGpB,OAAO,CAACoB,UAArB;AACAjB,IAAAA,MAAM,GAAGH,OAAO,CAACiB,WAAR,GAAsB1B,QAA/B;AACAO,IAAAA,CAAC,GAAGE,OAAO,CAACkB,MAAR,CAAef,MAAf,GAAwBH,OAAO,CAACkB,MAAR,CAAe3B,QAAQ,GAAG,CAAX,GAAe,CAAC,EAAEY,MAAM,GAAGH,OAAO,CAACmB,SAAnB,CAAhB,GAAgDnB,OAAO,CAACkB,MAAR,CAAef,MAAf,GAAwB,CAAvF,KAA6F,CAArH,GAAyHG,eAAe,CAACC,OAAD,EAAUJ,MAAV,EAAkBZ,QAAlB,CAA5I;AACA0H,IAAAA,GAAG,GAAGnH,CAAC,GAAGS,OAAO,CAACT,CAAC,GAAG,CAAL,CAAV,GAAoB,CAA3B;AACAiH,IAAAA,GAAG,GAAGxG,OAAO,CAACT,CAAD,CAAb;;AAEA,QAAIiH,GAAG,GAAG5G,MAAV,EAAkB;AAChB8G,MAAAA,GAAG,GAAGF,GAAN;AACAA,MAAAA,GAAG,GAAGxG,OAAO,CAAC,EAAET,CAAH,CAAb;AACD;;AAEDC,IAAAA,CAAC,GAAG,IAAIqB,UAAJ,IAAkB,CAACjB,MAAM,GAAG8G,GAAV,KAAkBF,GAAG,GAAGE,GAAxB,IAA+BnH,CAAC,GAAGsB,UAArD,KAAoE,CAAxE;AACA4H,IAAAA,GAAG,GAAG,IAAIjJ,CAAV;AACAD,IAAAA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsB,UAAN,CAAD,GAAqB,CAAzB;AACAkB,IAAAA,CAAC,GAAGtC,OAAO,CAACF,CAAD,CAAX;AACAuK,IAAAA,MAAM,CAAC/F,CAAP,GAAW7E,MAAM,CAAC,CAACM,CAAC,GAAGA,CAAJ,IAASC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwC,CAA1B,IAA+B,IAAI0G,GAAJ,IAAWjJ,CAAC,IAAIC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwC,CAArB,CAAD,GAA2B0G,GAAG,IAAIhJ,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwC,CAArB,CAAzC,CAAhC,IAAqGvC,CAArG,GAAyGuC,CAA1G,CAAjB;AACA+H,IAAAA,MAAM,CAAC9H,CAAP,GAAW9C,MAAM,CAAC,CAACM,CAAC,GAAGA,CAAJ,IAASC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,IAAkBwC,CAAC,GAAGtC,OAAO,CAACF,CAAC,GAAG,CAAL,CAA7B,CAAT,IAAkD,IAAIkJ,GAAJ,IAAWjJ,CAAC,IAAIC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwC,CAArB,CAAD,GAA2B0G,GAAG,IAAIhJ,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwC,CAArB,CAAzC,CAAnD,IAAwHvC,CAAxH,GAA4HuC,CAA7H,CAAjB;;AAEA,QAAI6H,YAAJ,EAAkB;AAChBE,MAAAA,MAAM,CAAClC,KAAP,GAAenI,OAAO,CAACiB,WAAR,GAAsBuF,oBAAoB,CAACxG,OAAD,EAAUF,CAAV,EAAaC,CAAC,IAAI,CAAL,GAAS,IAAI,IAAb,GAAoBA,CAAC,GAAGA,CAAH,GAAO,IAAzC,CAA1C,GAA2FC,OAAO,CAACmI,KAAR,IAAiB,CAA3H;AACD;;AAED,WAAOkC,MAAP;AACD;;AACD,WAASC,gBAAT,CAA0B1K,OAA1B,EAAmC0C,CAAnC,EAAsCmE,CAAtC,EAAyCC,CAAzC,EAA4C6D,CAA5C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuD;AACrD,QAAIvC,CAAC,GAAGtI,OAAO,CAACO,MAAhB;AAAA,QACIH,OADJ;AAAA,QAEIQ,CAFJ;AAAA,QAGIV,CAHJ;AAAA,QAIIwE,CAJJ;AAAA,QAKI/B,CALJ;;AAOA,WAAO,EAAE2F,CAAF,GAAM,CAAC,CAAd,EAAiB;AACflI,MAAAA,OAAO,GAAGJ,OAAO,CAACsI,CAAD,CAAjB;AACA1H,MAAAA,CAAC,GAAGR,OAAO,CAACG,MAAZ;;AAEA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,CAAhB,EAAmBV,CAAC,IAAI,CAAxB,EAA2B;AACzBwE,QAAAA,CAAC,GAAGtE,OAAO,CAACF,CAAD,CAAX;AACAyC,QAAAA,CAAC,GAAGvC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAX;AACAE,QAAAA,OAAO,CAACF,CAAD,CAAP,GAAawE,CAAC,GAAGhC,CAAJ,GAAQC,CAAC,GAAGmE,CAAZ,GAAgB8D,EAA7B;AACAxK,QAAAA,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,GAAiBwE,CAAC,GAAGmC,CAAJ,GAAQlE,CAAC,GAAGgI,CAAZ,GAAgBE,EAAjC;AACD;AACF;;AAED7K,IAAAA,OAAO,CAACqC,MAAR,GAAiB,CAAjB;AACA,WAAOrC,OAAP;AACD;;AAED,WAAS8K,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCnF,EAApC,EAAwCjB,EAAxC,EAA4C2D,KAA5C,EAAmD0C,YAAnD,EAAiEC,SAAjE,EAA4ExG,CAA5E,EAA+E/B,CAA/E,EAAkF;AAChF,QAAIoI,KAAK,KAAKrG,CAAV,IAAesG,KAAK,KAAKrI,CAA7B,EAAgC;AAC9B;AACD;;AAEDkD,IAAAA,EAAE,GAAGjH,IAAI,CAACiH,EAAD,CAAT;AACAjB,IAAAA,EAAE,GAAGhG,IAAI,CAACgG,EAAD,CAAT;;AAEA,QAAIuG,QAAQ,GAAG5C,KAAK,GAAG,GAAR,GAAcnK,QAA7B;AAAA,QACIgN,QAAQ,GAAG1M,IAAI,CAACyM,QAAD,CADnB;AAAA,QAEIE,QAAQ,GAAG7M,IAAI,CAAC2M,QAAD,CAFnB;AAAA,QAGI7M,EAAE,GAAGD,IAAI,CAACC,EAHd;AAAA,QAIIgN,KAAK,GAAGhN,EAAE,GAAG,CAJjB;AAAA,QAKIiN,GAAG,GAAG,CAACR,KAAK,GAAGrG,CAAT,IAAc,CALxB;AAAA,QAMI8G,GAAG,GAAG,CAACR,KAAK,GAAGrI,CAAT,IAAc,CANxB;AAAA,QAOIwD,EAAE,GAAGiF,QAAQ,GAAGG,GAAX,GAAiBF,QAAQ,GAAGG,GAPrC;AAAA,QAQIpF,EAAE,GAAG,CAACiF,QAAD,GAAYE,GAAZ,GAAkBH,QAAQ,GAAGI,GARtC;AAAA,QASIC,KAAK,GAAGtF,EAAE,GAAGA,EATjB;AAAA,QAUIuF,KAAK,GAAGtF,EAAE,GAAGA,EAVjB;AAAA,QAWIuF,UAAU,GAAGF,KAAK,IAAI5F,EAAE,GAAGA,EAAT,CAAL,GAAoB6F,KAAK,IAAI9G,EAAE,GAAGA,EAAT,CAX1C;;AAaA,QAAI+G,UAAU,GAAG,CAAjB,EAAoB;AAClB9F,MAAAA,EAAE,GAAG/G,KAAK,CAAC6M,UAAD,CAAL,GAAoB9F,EAAzB;AACAjB,MAAAA,EAAE,GAAG9F,KAAK,CAAC6M,UAAD,CAAL,GAAoB/G,EAAzB;AACD;;AAED,QAAIgH,KAAK,GAAG/F,EAAE,GAAGA,EAAjB;AAAA,QACIgG,KAAK,GAAGjH,EAAE,GAAGA,EADjB;AAAA,QAEIkH,EAAE,GAAG,CAACF,KAAK,GAAGC,KAAR,GAAgBD,KAAK,GAAGF,KAAxB,GAAgCG,KAAK,GAAGJ,KAAzC,KAAmDG,KAAK,GAAGF,KAAR,GAAgBG,KAAK,GAAGJ,KAA3E,CAFT;;AAIA,QAAIK,EAAE,GAAG,CAAT,EAAY;AACVA,MAAAA,EAAE,GAAG,CAAL;AACD;;AAED,QAAIC,IAAI,GAAG,CAACd,YAAY,KAAKC,SAAjB,GAA6B,CAAC,CAA9B,GAAkC,CAAnC,IAAwCpM,KAAK,CAACgN,EAAD,CAAxD;AAAA,QACIE,GAAG,GAAGD,IAAI,IAAIlG,EAAE,GAAGO,EAAL,GAAUxB,EAAd,CADd;AAAA,QAEIqH,GAAG,GAAGF,IAAI,GAAG,EAAEnH,EAAE,GAAGuB,EAAL,GAAUN,EAAZ,CAFjB;AAAA,QAGIqG,GAAG,GAAG,CAACnB,KAAK,GAAGrG,CAAT,IAAc,CAHxB;AAAA,QAIIyH,GAAG,GAAG,CAACnB,KAAK,GAAGrI,CAAT,IAAc,CAJxB;AAAA,QAKIsD,EAAE,GAAGiG,GAAG,IAAId,QAAQ,GAAGY,GAAX,GAAiBX,QAAQ,GAAGY,GAAhC,CALZ;AAAA,QAMI/F,EAAE,GAAGiG,GAAG,IAAId,QAAQ,GAAGW,GAAX,GAAiBZ,QAAQ,GAAGa,GAAhC,CANZ;AAAA,QAOIG,EAAE,GAAG,CAACjG,EAAE,GAAG6F,GAAN,IAAanG,EAPtB;AAAA,QAQIwG,EAAE,GAAG,CAACjG,EAAE,GAAG6F,GAAN,IAAarH,EARtB;AAAA,QASI0H,EAAE,GAAG,CAAC,CAACnG,EAAD,GAAM6F,GAAP,IAAcnG,EATvB;AAAA,QAUI0G,EAAE,GAAG,CAAC,CAACnG,EAAD,GAAM6F,GAAP,IAAcrH,EAVvB;AAAA,QAWI4H,IAAI,GAAGJ,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAX1B;AAAA,QAYII,UAAU,GAAG,CAACJ,EAAE,GAAG,CAAL,GAAS,CAAC,CAAV,GAAc,CAAf,IAAoBhO,IAAI,CAACqO,IAAL,CAAUN,EAAE,GAAGtN,KAAK,CAAC0N,IAAD,CAApB,CAZrC;AAAA,QAaIG,WAAW,GAAG,CAACP,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGC,EAAf,GAAoB,CAApB,GAAwB,CAAC,CAAzB,GAA6B,CAA9B,IAAmCjO,IAAI,CAACqO,IAAL,CAAU,CAACN,EAAE,GAAGE,EAAL,GAAUD,EAAE,GAAGE,EAAhB,IAAsBzN,KAAK,CAAC0N,IAAI,IAAIF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAnB,CAAL,CAArC,CAbrD;;AAeAK,IAAAA,KAAK,CAACD,WAAD,CAAL,KAAuBA,WAAW,GAAGrO,EAArC;;AAEA,QAAI,CAAC4M,SAAD,IAAcyB,WAAW,GAAG,CAAhC,EAAmC;AACjCA,MAAAA,WAAW,IAAIrB,KAAf;AACD,KAFD,MAEO,IAAIJ,SAAS,IAAIyB,WAAW,GAAG,CAA/B,EAAkC;AACvCA,MAAAA,WAAW,IAAIrB,KAAf;AACD;;AAEDmB,IAAAA,UAAU,IAAInB,KAAd;AACAqB,IAAAA,WAAW,IAAIrB,KAAf;;AAEA,QAAIuB,QAAQ,GAAGxO,IAAI,CAACyO,IAAL,CAAUlO,IAAI,CAAC+N,WAAD,CAAJ,IAAqBrB,KAAK,GAAG,CAA7B,CAAV,CAAf;AAAA,QACItL,OAAO,GAAG,EADd;AAAA,QAEI+M,cAAc,GAAGJ,WAAW,GAAGE,QAFnC;AAAA,QAGIG,aAAa,GAAG,IAAI,CAAJ,GAAQxO,IAAI,CAACuO,cAAc,GAAG,CAAlB,CAAZ,IAAoC,IAAIrO,IAAI,CAACqO,cAAc,GAAG,CAAlB,CAA5C,CAHpB;AAAA,QAIIE,EAAE,GAAG7B,QAAQ,GAAGvF,EAJpB;AAAA,QAKIqH,EAAE,GAAG7B,QAAQ,GAAGxF,EALpB;AAAA,QAMIsH,EAAE,GAAG9B,QAAQ,GAAG,CAACzG,EANrB;AAAA,QAOIwI,EAAE,GAAGhC,QAAQ,GAAGxG,EAPpB;AAAA,QAQI1E,CARJ;;AAUA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2M,QAAhB,EAA0B3M,CAAC,EAA3B,EAA+B;AAC7BqI,MAAAA,KAAK,GAAGkE,UAAU,GAAGvM,CAAC,GAAG6M,cAAzB;AACA5G,MAAAA,EAAE,GAAGzH,IAAI,CAAC6J,KAAD,CAAT;AACAnC,MAAAA,EAAE,GAAG5H,IAAI,CAAC+J,KAAD,CAAT;AACA6D,MAAAA,EAAE,GAAG1N,IAAI,CAAC6J,KAAK,IAAIwE,cAAV,CAAT;AACAV,MAAAA,EAAE,GAAG7N,IAAI,CAAC+J,KAAD,CAAT;AACAvI,MAAAA,OAAO,CAACwI,IAAR,CAAarC,EAAE,GAAG6G,aAAa,GAAG5G,EAAlC,EAAsCA,EAAE,GAAG4G,aAAa,GAAG7G,EAA3D,EAA+DiG,EAAE,GAAGY,aAAa,GAAGX,EAApF,EAAwFA,EAAE,GAAGW,aAAa,GAAGZ,EAA7G,EAAiHA,EAAjH,EAAqHC,EAArH;AACD;;AAED,SAAKnM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,OAAO,CAACO,MAAxB,EAAgCL,CAAC,IAAI,CAArC,EAAwC;AACtCiG,MAAAA,EAAE,GAAGnG,OAAO,CAACE,CAAD,CAAZ;AACAkG,MAAAA,EAAE,GAAGpG,OAAO,CAACE,CAAC,GAAG,CAAL,CAAZ;AACAF,MAAAA,OAAO,CAACE,CAAD,CAAP,GAAaiG,EAAE,GAAG8G,EAAL,GAAU7G,EAAE,GAAG+G,EAAf,GAAoBlH,EAAjC;AACAjG,MAAAA,OAAO,CAACE,CAAC,GAAG,CAAL,CAAP,GAAiBiG,EAAE,GAAG+G,EAAL,GAAU9G,EAAE,GAAGgH,EAAf,GAAoBlH,EAArC;AACD;;AAEDlG,IAAAA,OAAO,CAACE,CAAC,GAAG,CAAL,CAAP,GAAiBwE,CAAjB;AACA1E,IAAAA,OAAO,CAACE,CAAC,GAAG,CAAL,CAAP,GAAiByC,CAAjB;AACA,WAAO3C,OAAP;AACD;;AAED,WAASsC,eAAT,CAAyBqI,CAAzB,EAA4B;AAC1B,QAAIjI,CAAC,GAAG,CAACiI,CAAC,GAAG,EAAL,EAAS0C,OAAT,CAAiBnP,WAAjB,EAA8B,UAAUoP,CAAV,EAAa;AACjD,UAAIC,CAAC,GAAG,CAACD,CAAT;AACA,aAAOC,CAAC,GAAG,MAAJ,IAAcA,CAAC,GAAG,CAAC,MAAnB,GAA4B,CAA5B,GAAgCA,CAAvC;AACD,KAHO,EAGLlH,KAHK,CAGCrI,WAHD,KAGiB,EAHzB;AAAA,QAII8E,IAAI,GAAG,EAJX;AAAA,QAKI0K,SAAS,GAAG,CALhB;AAAA,QAMIC,SAAS,GAAG,CANhB;AAAA,QAOIC,SAAS,GAAG,IAAI,CAPpB;AAAA,QAQIC,QAAQ,GAAGjL,CAAC,CAACnC,MARjB;AAAA,QASIwE,MAAM,GAAG,CATb;AAAA,QAUI6I,YAAY,GAAG,4BAA4BjD,CAV/C;AAAA,QAWIzK,CAXJ;AAAA,QAYIoI,CAZJ;AAAA,QAaI5D,CAbJ;AAAA,QAcI/B,CAdJ;AAAA,QAeIkL,OAfJ;AAAA,QAgBIC,UAhBJ;AAAA,QAiBI1N,OAjBJ;AAAA,QAkBI2N,MAlBJ;AAAA,QAmBIC,MAnBJ;AAAA,QAoBIC,IApBJ;AAAA,QAqBIC,IArBJ;AAAA,QAsBIC,OAtBJ;AAAA,QAuBIC,WAvBJ;AAAA,QAwBIC,KAxBJ;AAAA,QAyBIC,KAzBJ;AAAA,QA0BIzK,IAAI,GAAG,SAASA,IAAT,CAAc0K,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;AACvCT,MAAAA,IAAI,GAAG,CAACQ,EAAE,GAAGF,EAAN,IAAY,CAAnB;AACAL,MAAAA,IAAI,GAAG,CAACQ,EAAE,GAAGF,EAAN,IAAY,CAAnB;AACApO,MAAAA,OAAO,CAACoI,IAAR,CAAa+F,EAAE,GAAGN,IAAlB,EAAwBO,EAAE,GAAGN,IAA7B,EAAmCO,EAAE,GAAGR,IAAxC,EAA8CS,EAAE,GAAGR,IAAnD,EAAyDO,EAAzD,EAA6DC,EAA7D;AACD,KA9BD;;AAgCA,QAAI,CAAC/D,CAAD,IAAM,CAACiC,KAAK,CAAClK,CAAC,CAAC,CAAD,CAAF,CAAZ,IAAsBkK,KAAK,CAAClK,CAAC,CAAC,CAAD,CAAF,CAA/B,EAAuC;AACrCH,MAAAA,OAAO,CAACoM,GAAR,CAAYf,YAAZ;AACA,aAAO9K,IAAP;AACD;;AAED,SAAK5C,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyN,QAAhB,EAA0BzN,CAAC,EAA3B,EAA+B;AAC7BkO,MAAAA,WAAW,GAAGP,OAAd;;AAEA,UAAIjB,KAAK,CAAClK,CAAC,CAACxC,CAAD,CAAF,CAAT,EAAiB;AACf2N,QAAAA,OAAO,GAAGnL,CAAC,CAACxC,CAAD,CAAD,CAAK0O,WAAL,EAAV;AACAd,QAAAA,UAAU,GAAGD,OAAO,KAAKnL,CAAC,CAACxC,CAAD,CAA1B;AACD,OAHD,MAGO;AACLA,QAAAA,CAAC;AACF;;AAEDwE,MAAAA,CAAC,GAAG,CAAChC,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAN;AACAyC,MAAAA,CAAC,GAAG,CAACD,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAN;;AAEA,UAAI4N,UAAJ,EAAgB;AACdpJ,QAAAA,CAAC,IAAI8I,SAAL;AACA7K,QAAAA,CAAC,IAAI8K,SAAL;AACD;;AAED,UAAI,CAACvN,CAAL,EAAQ;AACN6N,QAAAA,MAAM,GAAGrJ,CAAT;AACAsJ,QAAAA,MAAM,GAAGrL,CAAT;AACD;;AAED,UAAIkL,OAAO,KAAK,GAAhB,EAAqB;AACnB,YAAIzN,OAAJ,EAAa;AACX,cAAIA,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtBuC,YAAAA,IAAI,CAACvC,MAAL,IAAe,CAAf;AACD,WAFD,MAEO;AACLwE,YAAAA,MAAM,IAAI3E,OAAO,CAACG,MAAlB;AACD;AACF;;AAEDiN,QAAAA,SAAS,GAAGO,MAAM,GAAGrJ,CAArB;AACA+I,QAAAA,SAAS,GAAGO,MAAM,GAAGrL,CAArB;AACAvC,QAAAA,OAAO,GAAG,CAACsE,CAAD,EAAI/B,CAAJ,CAAV;AACAG,QAAAA,IAAI,CAAC0F,IAAL,CAAUpI,OAAV;AACAF,QAAAA,CAAC,IAAI,CAAL;AACA2N,QAAAA,OAAO,GAAG,GAAV;AACD,OAfD,MAeO,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AAC1B,YAAI,CAACzN,OAAL,EAAc;AACZA,UAAAA,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAV;AACD;;AAED,YAAI,CAAC0N,UAAL,EAAiB;AACfN,UAAAA,SAAS,GAAGC,SAAS,GAAG,CAAxB;AACD;;AAEDrN,QAAAA,OAAO,CAACoI,IAAR,CAAa9D,CAAb,EAAgB/B,CAAhB,EAAmB6K,SAAS,GAAG9K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAA1C,EAA6CuN,SAAS,GAAG/K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAApE,EAAuEsN,SAAS,IAAI9K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAA/F,EAAkGuN,SAAS,IAAI/K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAA1H;AACAA,QAAAA,CAAC,IAAI,CAAL;AACD,OAXM,MAWA,IAAI2N,OAAO,KAAK,GAAhB,EAAqB;AAC1BI,QAAAA,IAAI,GAAGT,SAAP;AACAU,QAAAA,IAAI,GAAGT,SAAP;;AAEA,YAAIW,WAAW,KAAK,GAAhB,IAAuBA,WAAW,KAAK,GAA3C,EAAgD;AAC9CH,UAAAA,IAAI,IAAIT,SAAS,GAAGpN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAA3B;AACA2N,UAAAA,IAAI,IAAIT,SAAS,GAAGrN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAA3B;AACD;;AAED,YAAI,CAACuN,UAAL,EAAiB;AACfN,UAAAA,SAAS,GAAGC,SAAS,GAAG,CAAxB;AACD;;AAEDrN,QAAAA,OAAO,CAACoI,IAAR,CAAayF,IAAb,EAAmBC,IAAnB,EAAyBxJ,CAAzB,EAA4B/B,CAA5B,EAA+B6K,SAAS,IAAI9K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAAvD,EAA0DuN,SAAS,IAAI/K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAAlF;AACAA,QAAAA,CAAC,IAAI,CAAL;AACD,OAfM,MAeA,IAAI2N,OAAO,KAAK,GAAhB,EAAqB;AAC1BI,QAAAA,IAAI,GAAGT,SAAS,GAAG,CAAC9I,CAAC,GAAG8I,SAAL,IAAkBE,SAArC;AACAQ,QAAAA,IAAI,GAAGT,SAAS,GAAG,CAAC9K,CAAC,GAAG8K,SAAL,IAAkBC,SAArC;;AAEA,YAAI,CAACI,UAAL,EAAiB;AACfN,UAAAA,SAAS,GAAGC,SAAS,GAAG,CAAxB;AACD;;AAEDD,QAAAA,SAAS,IAAI9K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAAxB;AACAuN,QAAAA,SAAS,IAAI/K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAD,GAAW,CAAxB;AACAE,QAAAA,OAAO,CAACoI,IAAR,CAAayF,IAAb,EAAmBC,IAAnB,EAAyBV,SAAS,GAAG,CAAC9I,CAAC,GAAG8I,SAAL,IAAkBE,SAAvD,EAAkED,SAAS,GAAG,CAAC9K,CAAC,GAAG8K,SAAL,IAAkBC,SAAhG,EAA2GF,SAA3G,EAAsHC,SAAtH;AACAvN,QAAAA,CAAC,IAAI,CAAL;AACD,OAZM,MAYA,IAAI2N,OAAO,KAAK,GAAhB,EAAqB;AAC1BI,QAAAA,IAAI,GAAGT,SAAS,GAAGpN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAA1B;AACA2N,QAAAA,IAAI,GAAGT,SAAS,GAAGrN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAA1B;AACAH,QAAAA,OAAO,CAACoI,IAAR,CAAagF,SAAS,GAAGS,IAAzB,EAA+BR,SAAS,GAAGS,IAA3C,EAAiDxJ,CAAC,GAAG,CAAC8I,SAAS,GAAGS,IAAI,GAAG,GAAnB,GAAyBvJ,CAA1B,IAA+BgJ,SAApF,EAA+F/K,CAAC,GAAG,CAAC8K,SAAS,GAAGS,IAAI,GAAG,GAAnB,GAAyBvL,CAA1B,IAA+B+K,SAAlI,EAA6IF,SAAS,GAAG9I,CAAzJ,EAA4J+I,SAAS,GAAG9K,CAAxK;AACAzC,QAAAA,CAAC,IAAI,CAAL;AACD,OALM,MAKA,IAAI2N,OAAO,KAAK,GAAhB,EAAqB;AAC1BhK,QAAAA,IAAI,CAAC2J,SAAD,EAAYC,SAAZ,EAAuBD,SAAS,GAAG9I,CAAnC,EAAsC+I,SAAtC,CAAJ;AACAvN,QAAAA,CAAC,IAAI,CAAL;AACD,OAHM,MAGA,IAAI2N,OAAO,KAAK,GAAhB,EAAqB;AAC1BhK,QAAAA,IAAI,CAAC2J,SAAD,EAAYC,SAAZ,EAAuBD,SAAvB,EAAkCC,SAAS,GAAG/I,CAAC,IAAIoJ,UAAU,GAAGL,SAAS,GAAGD,SAAf,GAA2B,CAAzC,CAA/C,CAAJ;AACAtN,QAAAA,CAAC,IAAI,CAAL;AACD,OAHM,MAGA,IAAI2N,OAAO,KAAK,GAAZ,IAAmBA,OAAO,KAAK,GAAnC,EAAwC;AAC7C,YAAIA,OAAO,KAAK,GAAhB,EAAqB;AACnBnJ,UAAAA,CAAC,GAAGqJ,MAAJ;AACApL,UAAAA,CAAC,GAAGqL,MAAJ;AACA5N,UAAAA,OAAO,CAACyO,MAAR,GAAiB,IAAjB;AACD;;AAED,YAAIhB,OAAO,KAAK,GAAZ,IAAmBjP,IAAI,CAAC4O,SAAS,GAAG9I,CAAb,CAAJ,GAAsB,GAAzC,IAAgD9F,IAAI,CAAC6O,SAAS,GAAG9K,CAAb,CAAJ,GAAsB,GAA1E,EAA+E;AAC7EkB,UAAAA,IAAI,CAAC2J,SAAD,EAAYC,SAAZ,EAAuB/I,CAAvB,EAA0B/B,CAA1B,CAAJ;;AAEA,cAAIkL,OAAO,KAAK,GAAhB,EAAqB;AACnB3N,YAAAA,CAAC,IAAI,CAAL;AACD;AACF;;AAEDsN,QAAAA,SAAS,GAAG9I,CAAZ;AACA+I,QAAAA,SAAS,GAAG9K,CAAZ;AACD,OAjBM,MAiBA,IAAIkL,OAAO,KAAK,GAAhB,EAAqB;AAC1BQ,QAAAA,KAAK,GAAG3L,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAT;AACAoO,QAAAA,KAAK,GAAG5L,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAT;AACA+N,QAAAA,IAAI,GAAGvL,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAR;AACAgO,QAAAA,IAAI,GAAGxL,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAR;AACAoI,QAAAA,CAAC,GAAG,CAAJ;;AAEA,YAAI+F,KAAK,CAAC9N,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAI8N,KAAK,CAAC9N,MAAN,GAAe,CAAnB,EAAsB;AACpB2N,YAAAA,IAAI,GAAGD,IAAP;AACAA,YAAAA,IAAI,GAAGK,KAAP;AACAhG,YAAAA,CAAC;AACF,WAJD,MAIO;AACL4F,YAAAA,IAAI,GAAGI,KAAP;AACAL,YAAAA,IAAI,GAAGI,KAAK,CAACS,MAAN,CAAa,CAAb,CAAP;AACAxG,YAAAA,CAAC,IAAI,CAAL;AACD;;AAEDgG,UAAAA,KAAK,GAAGD,KAAK,CAACU,MAAN,CAAa,CAAb,CAAR;AACAV,UAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAa,CAAb,CAAR;AACD;;AAEDZ,QAAAA,OAAO,GAAGrD,YAAY,CAAC0C,SAAD,EAAYC,SAAZ,EAAuB,CAAC/K,CAAC,CAACxC,CAAC,GAAG,CAAL,CAAzB,EAAkC,CAACwC,CAAC,CAACxC,CAAC,GAAG,CAAL,CAApC,EAA6C,CAACwC,CAAC,CAACxC,CAAC,GAAG,CAAL,CAA/C,EAAwD,CAACmO,KAAzD,EAAgE,CAACC,KAAjE,EAAwE,CAACR,UAAU,GAAGN,SAAH,GAAe,CAA1B,IAA+BS,IAAI,GAAG,CAA9G,EAAiH,CAACH,UAAU,GAAGL,SAAH,GAAe,CAA1B,IAA+BS,IAAI,GAAG,CAAvJ,CAAtB;AACAhO,QAAAA,CAAC,IAAIoI,CAAL;;AAEA,YAAI6F,OAAJ,EAAa;AACX,eAAK7F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6F,OAAO,CAAC5N,MAAxB,EAAgC+H,CAAC,EAAjC,EAAqC;AACnClI,YAAAA,OAAO,CAACoI,IAAR,CAAa2F,OAAO,CAAC7F,CAAD,CAApB;AACD;AACF;;AAEDkF,QAAAA,SAAS,GAAGpN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAnB;AACAkN,QAAAA,SAAS,GAAGrN,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAnB;AACD,OAjCM,MAiCA;AACLgC,QAAAA,OAAO,CAACoM,GAAR,CAAYf,YAAZ;AACD;AACF;;AAED1N,IAAAA,CAAC,GAAGE,OAAO,CAACG,MAAZ;;AAEA,QAAIL,CAAC,GAAG,CAAR,EAAW;AACT4C,MAAAA,IAAI,CAACkM,GAAL;AACA9O,MAAAA,CAAC,GAAG,CAAJ;AACD,KAHD,MAGO,IAAIE,OAAO,CAAC,CAAD,CAAP,KAAeA,OAAO,CAACF,CAAC,GAAG,CAAL,CAAtB,IAAiCE,OAAO,CAAC,CAAD,CAAP,KAAeA,OAAO,CAACF,CAAC,GAAG,CAAL,CAA3D,EAAoE;AACzEE,MAAAA,OAAO,CAACyO,MAAR,GAAiB,IAAjB;AACD;;AAED/L,IAAAA,IAAI,CAACrB,WAAL,GAAmBsD,MAAM,GAAG7E,CAA5B;AACA,WAAO4C,IAAP;AACD;;AACD,WAASmM,mBAAT,CAA6BlK,MAA7B,EAAqCmK,SAArC,EAAgD;AAC9C,QAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAED,QAAIxK,CAAC,GAAGK,MAAM,CAAC,CAAD,CAAd;AAAA,QACIpC,CAAC,GAAG,CADR;AAAA,QAEIvC,OAAO,GAAG,CAACsE,CAAD,EAAI/B,CAAJ,CAFd;AAAA,QAGIzC,CAAC,GAAG,CAHR;;AAKA,WAAOA,CAAC,GAAG6E,MAAM,CAACxE,MAAlB,EAA0BL,CAAC,IAAI,CAA/B,EAAkC;AAChCE,MAAAA,OAAO,CAACoI,IAAR,CAAa9D,CAAb,EAAgB/B,CAAhB,EAAmBoC,MAAM,CAAC7E,CAAD,CAAzB,EAA8ByC,CAAC,GAAG,CAACoC,MAAM,CAAC7E,CAAD,CAAN,GAAYwE,CAAb,IAAkBwK,SAAlB,GAA8B,CAAhE,EAAmExK,CAAC,GAAGK,MAAM,CAAC7E,CAAD,CAA7E,EAAkF,CAACyC,CAAnF;AACD;;AAED,WAAOvC,OAAP;AACD;;AACD,WAAS+O,eAAT,CAAyBpK,MAAzB,EAAiCmK,SAAjC,EAA4CE,eAA5C,EAA6D;AAC3DxQ,IAAAA,IAAI,CAACmG,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAnB,CAAJ,GAA8B,IAA9B,IAAsCnG,IAAI,CAACmG,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAnB,CAAJ,GAA8B,IAApE,KAA6EA,MAAM,GAAGA,MAAM,CAACtE,KAAP,CAAa,CAAb,CAAtF;AACA,QAAIG,CAAC,GAAGmE,MAAM,CAACxE,MAAP,GAAgB,CAAxB;AAAA,QACImE,CAAC,GAAG,CAACK,MAAM,CAAC,CAAD,CADf;AAAA,QAEIpC,CAAC,GAAG,CAACoC,MAAM,CAAC,CAAD,CAFf;AAAA,QAGIsK,KAAK,GAAG,CAACtK,MAAM,CAAC,CAAD,CAHnB;AAAA,QAIIuK,KAAK,GAAG,CAACvK,MAAM,CAAC,CAAD,CAJnB;AAAA,QAKI3E,OAAO,GAAG,CAACsE,CAAD,EAAI/B,CAAJ,EAAO+B,CAAP,EAAU/B,CAAV,CALd;AAAA,QAMI4I,GAAG,GAAG8D,KAAK,GAAG3K,CANlB;AAAA,QAOI8G,GAAG,GAAG8D,KAAK,GAAG3M,CAPlB;AAAA,QAQIkM,MAAM,GAAGxQ,IAAI,CAACQ,GAAL,CAASkG,MAAM,CAACnE,CAAD,CAAN,GAAY8D,CAArB,IAA0B,KAA1B,IAAmCrG,IAAI,CAACQ,GAAL,CAASkG,MAAM,CAACnE,CAAC,GAAG,CAAL,CAAN,GAAgB+B,CAAzB,IAA8B,KAR9E;AAAA,QASI4M,KATJ;AAAA,QAUIC,KAVJ;AAAA,QAWIjH,KAXJ;AAAA,QAYIkH,KAZJ;AAAA,QAaIvP,CAbJ;AAAA,QAcIwP,GAdJ;AAAA,QAeIC,GAfJ;AAAA,QAgBIC,GAhBJ;AAAA,QAiBIC,GAjBJ;AAAA,QAkBIC,EAlBJ;AAAA,QAmBIC,EAnBJ;AAAA,QAoBIrN,CApBJ;AAAA,QAqBImE,CArBJ;AAAA,QAsBIC,CAtBJ;;AAwBA,QAAI8F,KAAK,CAACwC,eAAD,CAAT,EAA4B;AAC1BA,MAAAA,eAAe,GAAG/Q,IAAI,CAACC,EAAL,GAAU,EAA5B;AACD;;AAED,QAAIuQ,MAAJ,EAAY;AACV9J,MAAAA,MAAM,CAACyD,IAAP,CAAY6G,KAAZ,EAAmBC,KAAnB;AACAD,MAAAA,KAAK,GAAG3K,CAAR;AACA4K,MAAAA,KAAK,GAAG3M,CAAR;AACA+B,MAAAA,CAAC,GAAGK,MAAM,CAACnE,CAAC,GAAG,CAAL,CAAV;AACA+B,MAAAA,CAAC,GAAGoC,MAAM,CAACnE,CAAC,GAAG,CAAL,CAAV;AACAmE,MAAAA,MAAM,CAACiL,OAAP,CAAetL,CAAf,EAAkB/B,CAAlB;AACA/B,MAAAA,CAAC,IAAI,CAAL;AACD;;AAEDsO,IAAAA,SAAS,GAAGA,SAAS,IAAIA,SAAS,KAAK,CAA3B,GAA+B,CAACA,SAAhC,GAA4C,CAAxD;;AAEA,SAAKhP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,CAAhB,EAAmBV,CAAC,IAAI,CAAxB,EAA2B;AACzBqP,MAAAA,KAAK,GAAG7K,CAAR;AACA8K,MAAAA,KAAK,GAAG7M,CAAR;AACA+B,MAAAA,CAAC,GAAG2K,KAAJ;AACA1M,MAAAA,CAAC,GAAG2M,KAAJ;AACAD,MAAAA,KAAK,GAAG,CAACtK,MAAM,CAAC7E,CAAC,GAAG,CAAL,CAAf;AACAoP,MAAAA,KAAK,GAAG,CAACvK,MAAM,CAAC7E,CAAC,GAAG,CAAL,CAAf;;AAEA,UAAIwE,CAAC,KAAK2K,KAAN,IAAe1M,CAAC,KAAK2M,KAAzB,EAAgC;AAC9B;AACD;;AAEDI,MAAAA,GAAG,GAAGnE,GAAN;AACAqE,MAAAA,GAAG,GAAGpE,GAAN;AACAD,MAAAA,GAAG,GAAG8D,KAAK,GAAG3K,CAAd;AACA8G,MAAAA,GAAG,GAAG8D,KAAK,GAAG3M,CAAd;AACAgN,MAAAA,GAAG,GAAGN,KAAK,GAAGE,KAAd;AACAM,MAAAA,GAAG,GAAGP,KAAK,GAAGE,KAAd;AACA9M,MAAAA,CAAC,GAAGgN,GAAG,GAAGA,GAAN,GAAYE,GAAG,GAAGA,GAAtB;AACA/I,MAAAA,CAAC,GAAG0E,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAAtB;AACA1E,MAAAA,CAAC,GAAG6I,GAAG,GAAGA,GAAN,GAAYE,GAAG,GAAGA,GAAtB;AACAtH,MAAAA,KAAK,GAAGlK,IAAI,CAACqO,IAAL,CAAU,CAAChK,CAAC,GAAGmE,CAAJ,GAAQC,CAAT,IAAchI,KAAK,CAAC,IAAI4D,CAAJ,GAAQmE,CAAT,CAA7B,CAAR;AACAkJ,MAAAA,EAAE,GAAGxH,KAAK,GAAGlK,IAAI,CAACC,EAAb,GAAkB4Q,SAAvB;AACAY,MAAAA,EAAE,GAAGhR,KAAK,CAAC4D,CAAD,CAAL,GAAWqN,EAAhB;AACAA,MAAAA,EAAE,IAAIjR,KAAK,CAAC+H,CAAD,CAAX;;AAEA,UAAInC,CAAC,KAAK6K,KAAN,IAAe5M,CAAC,KAAK6M,KAAzB,EAAgC;AAC9B,YAAIjH,KAAK,GAAG6G,eAAZ,EAA6B;AAC3BK,UAAAA,KAAK,GAAGzQ,MAAM,CAAC6Q,GAAD,EAAMF,GAAN,CAAd;AACAvP,UAAAA,OAAO,CAACoI,IAAR,CAAa3I,MAAM,CAAC6E,CAAC,GAAGhG,IAAI,CAAC+Q,KAAD,CAAJ,GAAcK,EAAnB,CAAnB,EAA2CjQ,MAAM,CAAC8C,CAAC,GAAGnE,IAAI,CAACiR,KAAD,CAAJ,GAAcK,EAAnB,CAAjD,EAAyEjQ,MAAM,CAAC6E,CAAD,CAA/E,EAAoF7E,MAAM,CAAC8C,CAAD,CAA1F,EAA+F9C,MAAM,CAAC6E,CAAC,GAAGhG,IAAI,CAAC+Q,KAAD,CAAJ,GAAcM,EAAnB,CAArG,EAA6HlQ,MAAM,CAAC8C,CAAC,GAAGnE,IAAI,CAACiR,KAAD,CAAJ,GAAcM,EAAnB,CAAnI;AACD,SAHD,MAGO;AACLN,UAAAA,KAAK,GAAGzQ,MAAM,CAAC4Q,GAAD,EAAMF,GAAN,CAAd;AACAtP,UAAAA,OAAO,CAACoI,IAAR,CAAa3I,MAAM,CAAC6E,CAAC,GAAGhG,IAAI,CAAC+Q,KAAD,CAAJ,GAAcK,EAAnB,CAAnB,EAA2CjQ,MAAM,CAAC8C,CAAC,GAAGnE,IAAI,CAACiR,KAAD,CAAJ,GAAcK,EAAnB,CAAjD;AACAL,UAAAA,KAAK,GAAGzQ,MAAM,CAACwM,GAAD,EAAMD,GAAN,CAAd;AACAnL,UAAAA,OAAO,CAACoI,IAAR,CAAa3I,MAAM,CAAC6E,CAAD,CAAnB,EAAwB7E,MAAM,CAAC8C,CAAD,CAA9B,EAAmC9C,MAAM,CAAC6E,CAAC,GAAGhG,IAAI,CAAC+Q,KAAD,CAAJ,GAAcM,EAAnB,CAAzC,EAAiElQ,MAAM,CAAC8C,CAAC,GAAGnE,IAAI,CAACiR,KAAD,CAAJ,GAAcM,EAAnB,CAAvE;AACD;AACF;AACF;;AAEDrL,IAAAA,CAAC,KAAK2K,KAAN,IAAe1M,CAAC,KAAK2M,KAArB,IAA8BlP,OAAO,CAACG,MAAR,GAAiB,CAA/C,GAAmDH,OAAO,CAACoI,IAAR,CAAa3I,MAAM,CAACwP,KAAD,CAAnB,EAA4BxP,MAAM,CAACyP,KAAD,CAAlC,EAA2CzP,MAAM,CAACwP,KAAD,CAAjD,EAA0DxP,MAAM,CAACyP,KAAD,CAAhE,CAAnD,GAA8HlP,OAAO,CAACG,MAAR,IAAkB,CAAhJ;;AAEA,QAAIsO,MAAJ,EAAY;AACVzO,MAAAA,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACAJ,MAAAA,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACG,MAAR,GAAiB,CAAlC;AACD;;AAED,WAAOH,OAAP;AACD;;AACD,WAASmG,eAAT,CAAyBvG,OAAzB,EAAkC;AAChC,QAAIX,SAAS,CAACW,OAAO,CAAC,CAAD,CAAR,CAAb,EAA2B;AACzBA,MAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AAED,QAAIyK,MAAM,GAAG,EAAb;AAAA,QACI7J,CAAC,GAAGZ,OAAO,CAACO,MADhB;AAAA,QAEI0P,EAFJ;AAAA,QAGIzI,CAHJ;AAAA,QAIItH,CAJJ;AAAA,QAKIE,OALJ;;AAOA,SAAKoH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG5G,CAAhB,EAAmB4G,CAAC,EAApB,EAAwB;AACtBpH,MAAAA,OAAO,GAAGJ,OAAO,CAACwH,CAAD,CAAjB;AACAiD,MAAAA,MAAM,IAAI,MAAM5K,MAAM,CAACO,OAAO,CAAC,CAAD,CAAR,CAAZ,GAA2B,GAA3B,GAAiCP,MAAM,CAACO,OAAO,CAAC,CAAD,CAAR,CAAvC,GAAsD,IAAhE;AACA6P,MAAAA,EAAE,GAAG7P,OAAO,CAACG,MAAb;;AAEA,WAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+P,EAAhB,EAAoB/P,CAAC,EAArB,EAAyB;AACvBuK,QAAAA,MAAM,IAAI5K,MAAM,CAACO,OAAO,CAACF,CAAC,EAAF,CAAR,CAAN,GAAuB,GAAvB,GAA6BL,MAAM,CAACO,OAAO,CAACF,CAAC,EAAF,CAAR,CAAnC,GAAoD,GAApD,GAA0DL,MAAM,CAACO,OAAO,CAACF,CAAC,EAAF,CAAR,CAAhE,GAAiF,GAAjF,GAAuFL,MAAM,CAACO,OAAO,CAACF,CAAC,EAAF,CAAR,CAA7F,GAA8G,GAA9G,GAAoHL,MAAM,CAACO,OAAO,CAACF,CAAC,EAAF,CAAR,CAA1H,GAA2I,GAA3I,GAAiJL,MAAM,CAACO,OAAO,CAACF,CAAD,CAAR,CAAvJ,GAAsK,GAAhL;AACD;;AAED,UAAIE,OAAO,CAACyO,MAAZ,EAAoB;AAClBpE,QAAAA,MAAM,IAAI,GAAV;AACD;AACF;;AAED,WAAOA,MAAP;AACD;;AAED,MAAIyF,IAAJ;AAAA,MACIC,IADJ;AAAA,MAEIC,WAFJ;AAAA,MAGIC,KAHJ;AAAA,MAIIC,aAJJ;AAAA,MAKIC,aALJ;AAAA,MAMIC,eANJ;AAAA,MAOIC,IAPJ;AAAA,MAQIC,cAAc,GAAG,WARrB;AAAA,MASIC,oBAAoB,GAAGD,cAAc,GAAG,QAT5C;AAAA,MAUIE,aAVJ;AAAA,MAWIC,OAAO,GAAG,SAASA,OAAT,CAAiBzM,OAAjB,EAA0B;AACtC,QAAI0M,GAAG,GAAG1M,OAAO,CAAC2M,aAAR,IAAyB3M,OAAnC;;AAEA,QAAI,EAAEsM,cAAc,IAAItM,OAAO,CAAC4M,KAA5B,KAAsC,iBAAiB5M,OAAO,CAAC4M,KAAnE,EAA0E;AACxEN,MAAAA,cAAc,GAAG,aAAjB;AACAC,MAAAA,oBAAoB,GAAGD,cAAc,GAAG,QAAxC;AACD;;AAED,WAAOI,GAAG,CAACrK,UAAJ,KAAmBqK,GAAG,GAAGA,GAAG,CAACrK,UAA7B,CAAP,EAAiD,CAAE;;AAEnD0J,IAAAA,IAAI,GAAGpS,MAAP;AACAyS,IAAAA,eAAe,GAAG,IAAIS,QAAJ,EAAlB;;AAEA,QAAIH,GAAJ,EAAS;AACPZ,MAAAA,IAAI,GAAGY,GAAP;AACAV,MAAAA,WAAW,GAAGU,GAAG,CAACI,eAAlB;AACAb,MAAAA,KAAK,GAAGS,GAAG,CAACK,IAAZ;AACAV,MAAAA,IAAI,GAAGP,IAAI,CAACnN,eAAL,CAAqB,4BAArB,EAAmD,GAAnD,CAAP;AACA0N,MAAAA,IAAI,CAACO,KAAL,CAAWI,SAAX,GAAuB,MAAvB;AACA,UAAItB,EAAE,GAAGgB,GAAG,CAACO,aAAJ,CAAkB,KAAlB,CAAT;AAAA,UACItB,EAAE,GAAGe,GAAG,CAACO,aAAJ,CAAkB,KAAlB,CADT;;AAGAhB,MAAAA,KAAK,CAACiB,WAAN,CAAkBxB,EAAlB;;AAEAA,MAAAA,EAAE,CAACwB,WAAH,CAAevB,EAAf;AACAD,MAAAA,EAAE,CAACkB,KAAH,CAASO,QAAT,GAAoB,QAApB;AACAzB,MAAAA,EAAE,CAACkB,KAAH,CAASN,cAAT,IAA2B,sBAA3B;AACAE,MAAAA,aAAa,GAAGb,EAAE,CAACyB,YAAH,KAAoB1B,EAApC;;AAEAO,MAAAA,KAAK,CAAC1J,WAAN,CAAkBmJ,EAAlB;AACD;;AAED,WAAOgB,GAAP;AACD,GA5CD;AAAA,MA6CIW,kBAAkB,GAAG,SAASA,kBAAT,CAA4BvP,CAA5B,EAA+B;AACtD,QAAIQ,CAAJ,EAAOgP,KAAP;;AAEA,WAAOxP,CAAC,IAAIA,CAAC,KAAKmO,KAAlB,EAAyB;AACvBqB,MAAAA,KAAK,GAAGxP,CAAC,CAACyP,KAAV;AACAD,MAAAA,KAAK,IAAIA,KAAK,CAACE,OAAf,IAA0BF,KAAK,CAACG,GAAN,CAAU3P,CAAV,EAAa,GAAb,CAA1B;;AAEA,UAAIwP,KAAK,IAAI,CAACA,KAAK,CAACI,MAAhB,IAA0B,CAACJ,KAAK,CAACK,MAAjC,IAA2CL,KAAK,CAACM,eAArD,EAAsE;AACpEN,QAAAA,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACK,MAAN,GAAe,IAA9B;AACAL,QAAAA,KAAK,CAACM,eAAN,CAAsB,CAAtB,EAAyBN,KAAzB;AACAhP,QAAAA,CAAC,GAAGA,CAAC,CAAC8F,IAAF,CAAOkJ,KAAP,CAAH,GAAmBhP,CAAC,GAAG,CAACgP,KAAD,CAAxB;AACD;;AAEDxP,MAAAA,CAAC,GAAGA,CAAC,CAACuE,UAAN;AACD;;AAED,WAAO/D,CAAP;AACD,GA9DD;AAAA,MA+DIuP,SAAS,GAAG,EA/DhB;AAAA,MAgEIC,SAAS,GAAG,EAhEhB;AAAA,MAiEIC,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AACjD,WAAOhC,IAAI,CAACiC,WAAL,IAAoBlC,IAAI,CAACmC,SAAzB,IAAsCjC,WAAW,CAACiC,SAAlD,IAA+DhC,KAAK,CAACgC,SAArE,IAAkF,CAAzF;AACD,GAnED;AAAA,MAoEIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,WAAOnC,IAAI,CAACoC,WAAL,IAAoBrC,IAAI,CAACsC,UAAzB,IAAuCpC,WAAW,CAACoC,UAAnD,IAAiEnC,KAAK,CAACmC,UAAvE,IAAqF,CAA5F;AACD,GAtED;AAAA,MAuEIC,SAAS,GAAG,SAASA,SAAT,CAAmBrO,OAAnB,EAA4B;AAC1C,WAAOA,OAAO,CAACsO,eAAR,KAA4B,CAACtO,OAAO,CAACG,OAAR,GAAkB,EAAnB,EAAuBlB,WAAvB,OAAyC,KAAzC,GAAiDe,OAAjD,GAA2D,IAAvF,CAAP;AACD,GAzED;AAAA,MA0EIuO,QAAQ,GAAG,SAASA,QAAT,CAAkBvO,OAAlB,EAA2B;AACxC,QAAI+L,IAAI,CAACyC,gBAAL,CAAsBxO,OAAtB,EAA+BmN,QAA/B,KAA4C,OAAhD,EAAyD;AACvD,aAAO,IAAP;AACD;;AAEDnN,IAAAA,OAAO,GAAGA,OAAO,CAACqC,UAAlB;;AAEA,QAAIrC,OAAO,IAAIA,OAAO,CAACyO,QAAR,KAAqB,CAApC,EAAuC;AACrC,aAAOF,QAAQ,CAACvO,OAAD,CAAf;AACD;AACF,GApFD;AAAA,MAqFI0O,cAAc,GAAG,SAASA,cAAT,CAAwB1O,OAAxB,EAAiClE,CAAjC,EAAoC;AACvD,QAAIkE,OAAO,CAACqC,UAAR,KAAuByJ,IAAI,IAAIW,OAAO,CAACzM,OAAD,CAAtC,CAAJ,EAAsD;AACpD,UAAI2O,GAAG,GAAGN,SAAS,CAACrO,OAAD,CAAnB;AAAA,UACI4O,EAAE,GAAGD,GAAG,GAAGA,GAAG,CAAC5Q,YAAJ,CAAiB,OAAjB,KAA6B,4BAAhC,GAA+D,8BAD3E;AAAA,UAEImC,IAAI,GAAGyO,GAAG,GAAG7S,CAAC,GAAG,MAAH,GAAY,GAAhB,GAAsB,KAFpC;AAAA,UAGIwE,CAAC,GAAGxE,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,GAHtB;AAAA,UAIIyC,CAAC,GAAGzC,CAAC,KAAK,CAAN,GAAU,GAAV,GAAgB,CAJxB;AAAA,UAKI+S,GAAG,GAAG,yEALV;AAAA,UAMI/Q,CAAC,GAAGgO,IAAI,CAACnN,eAAL,GAAuBmN,IAAI,CAACnN,eAAL,CAAqBiQ,EAAE,CAAC3F,OAAH,CAAW,QAAX,EAAqB,MAArB,CAArB,EAAmD/I,IAAnD,CAAvB,GAAkF4L,IAAI,CAACmB,aAAL,CAAmB/M,IAAnB,CAN1F;;AAQA,UAAIpE,CAAJ,EAAO;AACL,YAAI,CAAC6S,GAAL,EAAU;AACR,cAAI,CAACzC,aAAL,EAAoB;AAClBA,YAAAA,aAAa,GAAGwC,cAAc,CAAC1O,OAAD,CAA9B;AACAkM,YAAAA,aAAa,CAACU,KAAd,CAAoBkC,OAApB,GAA8BD,GAA9B;AACD;;AAED/Q,UAAAA,CAAC,CAAC8O,KAAF,CAAQkC,OAAR,GAAkBD,GAAG,GAAG,+BAAN,GAAwCtQ,CAAxC,GAA4C,UAA5C,GAAyD+B,CAAzD,GAA6D,IAA/E;;AAEA4L,UAAAA,aAAa,CAACgB,WAAd,CAA0BpP,CAA1B;AACD,SATD,MASO;AACLqO,UAAAA,aAAa,KAAKA,aAAa,GAAGuC,cAAc,CAAC1O,OAAD,CAAnC,CAAb;AACAlC,UAAAA,CAAC,CAACoE,YAAF,CAAe,OAAf,EAAwB,IAAxB;AACApE,UAAAA,CAAC,CAACoE,YAAF,CAAe,QAAf,EAAyB,IAAzB;AACApE,UAAAA,CAAC,CAACoE,YAAF,CAAe,WAAf,EAA4B,eAAe5B,CAAf,GAAmB,GAAnB,GAAyB/B,CAAzB,GAA6B,GAAzD;;AAEA4N,UAAAA,aAAa,CAACe,WAAd,CAA0BpP,CAA1B;AACD;AACF;;AAED,aAAOA,CAAP;AACD;;AAED,UAAM,2BAAN;AACD,GAvHD;AAAA,MAwHIiR,YAAY,GAAG,SAASA,YAAT,CAAsB7F,CAAtB,EAAyB;AAC1C,QAAIxG,CAAC,GAAG,IAAImK,QAAJ,EAAR;AAAA,QACI/Q,CAAC,GAAG,CADR;;AAGA,WAAOA,CAAC,GAAGoN,CAAC,CAAC8F,aAAb,EAA4BlT,CAAC,EAA7B,EAAiC;AAC/B4G,MAAAA,CAAC,CAACuM,QAAF,CAAW/F,CAAC,CAACgG,OAAF,CAAUpT,CAAV,EAAaqT,MAAxB;AACD;;AAED,WAAOzM,CAAP;AACD,GAjID;AAAA,MAkII0M,OAAO,GAAG,SAASA,OAAT,CAAiBT,GAAjB,EAAsB;AAClC,QAAIzF,CAAC,GAAGyF,GAAG,CAACU,MAAJ,EAAR;AAAA,QACIrC,SADJ;;AAGA,QAAI,CAAC9D,CAAL,EAAQ;AACN8D,MAAAA,SAAS,GAAG2B,GAAG,CAAC/B,KAAJ,CAAUN,cAAV,CAAZ;AACAqC,MAAAA,GAAG,CAAC/B,KAAJ,CAAUN,cAAV,IAA4B,MAA5B;AACAqC,MAAAA,GAAG,CAACzB,WAAJ,CAAgBb,IAAhB;AACAnD,MAAAA,CAAC,GAAGmD,IAAI,CAACgD,MAAL,EAAJ;AACAV,MAAAA,GAAG,CAACpM,WAAJ,CAAgB8J,IAAhB;AACAW,MAAAA,SAAS,GAAG2B,GAAG,CAAC/B,KAAJ,CAAUN,cAAV,IAA4BU,SAA/B,GAA2C2B,GAAG,CAAC/B,KAAJ,CAAU0C,cAAV,CAAyBhD,cAAc,CAACrD,OAAf,CAAuB,UAAvB,EAAmC,KAAnC,EAA0ChK,WAA1C,EAAzB,CAApD;AACD;;AAED,WAAOiK,CAAC,IAAIkD,eAAe,CAACmD,KAAhB,EAAZ;AACD,GAhJD;AAAA,MAiJIC,cAAc,GAAG,SAASA,cAAT,CAAwBxP,OAAxB,EAAiCyP,aAAjC,EAAgD;AACnE,QAAId,GAAG,GAAGN,SAAS,CAACrO,OAAD,CAAnB;AAAA,QACI0P,SAAS,GAAG1P,OAAO,KAAK2O,GAD5B;AAAA,QAEIgB,QAAQ,GAAGhB,GAAG,GAAGd,SAAH,GAAeC,SAFjC;AAAA,QAGI8B,MAAM,GAAG5P,OAAO,CAACqC,UAHrB;AAAA,QAIIwN,SAJJ;AAAA,QAKI3G,CALJ;AAAA,QAMIzG,CANJ;AAAA,QAOInC,CAPJ;AAAA,QAQI/B,CARJ;AAAA,QASIuR,EATJ;;AAWA,QAAI9P,OAAO,KAAK+L,IAAhB,EAAsB;AACpB,aAAO/L,OAAP;AACD;;AAED2P,IAAAA,QAAQ,CAACxT,MAAT,IAAmBwT,QAAQ,CAACvL,IAAT,CAAcsK,cAAc,CAAC1O,OAAD,EAAU,CAAV,CAA5B,EAA0C0O,cAAc,CAAC1O,OAAD,EAAU,CAAV,CAAxD,EAAsE0O,cAAc,CAAC1O,OAAD,EAAU,CAAV,CAApF,CAAnB;AACA6P,IAAAA,SAAS,GAAGlB,GAAG,GAAGxC,aAAH,GAAmBD,aAAlC;;AAEA,QAAIyC,GAAJ,EAAS;AACP,UAAIe,SAAJ,EAAe;AACbjN,QAAAA,CAAC,GAAG2M,OAAO,CAACpP,OAAD,CAAX;AACAM,QAAAA,CAAC,GAAG,CAACmC,CAAC,CAAC3E,CAAH,GAAO2E,CAAC,CAACnE,CAAb;AACAC,QAAAA,CAAC,GAAG,CAACkE,CAAC,CAACsN,CAAH,GAAOtN,CAAC,CAAC8D,CAAb;AACA2C,QAAAA,CAAC,GAAGkD,eAAJ;AACD,OALD,MAKO;AACL3J,QAAAA,CAAC,GAAGzC,OAAO,CAACwB,OAAR,EAAJ;AACA0H,QAAAA,CAAC,GAAGlJ,OAAO,CAACgN,SAAR,GAAoBhN,OAAO,CAACgN,SAAR,CAAkBgD,OAAtC,GAAgD,EAApD;AACA9G,QAAAA,CAAC,GAAG,CAACA,CAAC,CAAC8F,aAAH,GAAmB5C,eAAnB,GAAqClD,CAAC,CAAC8F,aAAF,GAAkB,CAAlB,GAAsBD,YAAY,CAAC7F,CAAD,CAAlC,GAAwCA,CAAC,CAACgG,OAAF,CAAU,CAAV,EAAaC,MAA9F;AACA7O,QAAAA,CAAC,GAAG4I,CAAC,CAAC5K,CAAF,GAAMmE,CAAC,CAACnC,CAAR,GAAY4I,CAAC,CAACxG,CAAF,GAAMD,CAAC,CAAClE,CAAxB;AACAA,QAAAA,CAAC,GAAG2K,CAAC,CAACzG,CAAF,GAAMA,CAAC,CAACnC,CAAR,GAAY4I,CAAC,CAAC3C,CAAF,GAAM9D,CAAC,CAAClE,CAAxB;AACD;;AAED,UAAIkR,aAAa,IAAIzP,OAAO,CAACG,OAAR,CAAgBlB,WAAhB,OAAkC,GAAvD,EAA4D;AAC1DqB,QAAAA,CAAC,GAAG/B,CAAC,GAAG,CAAR;AACD;;AAED,OAACmR,SAAS,GAAGf,GAAH,GAASiB,MAAnB,EAA2B1C,WAA3B,CAAuC2C,SAAvC;AACAA,MAAAA,SAAS,CAAC3N,YAAV,CAAuB,WAAvB,EAAoC,YAAYgH,CAAC,CAAC5K,CAAd,GAAkB,GAAlB,GAAwB4K,CAAC,CAACzG,CAA1B,GAA8B,GAA9B,GAAoCyG,CAAC,CAACxG,CAAtC,GAA0C,GAA1C,GAAgDwG,CAAC,CAAC3C,CAAlD,GAAsD,GAAtD,IAA6D2C,CAAC,CAACpL,CAAF,GAAMwC,CAAnE,IAAwE,GAAxE,IAA+E4I,CAAC,CAAC6G,CAAF,GAAMxR,CAArF,IAA0F,GAA9H;AACD,KApBD,MAoBO;AACL+B,MAAAA,CAAC,GAAG/B,CAAC,GAAG,CAAR;;AAEA,UAAIiO,aAAJ,EAAmB;AACjBtD,QAAAA,CAAC,GAAGlJ,OAAO,CAACoN,YAAZ;AACA3K,QAAAA,CAAC,GAAGzC,OAAJ;;AAEA,eAAOyC,CAAC,KAAKA,CAAC,GAAGA,CAAC,CAACJ,UAAX,CAAD,IAA2BI,CAAC,KAAKyG,CAAjC,IAAsCzG,CAAC,CAACJ,UAA/C,EAA2D;AACzD,cAAI,CAAC0J,IAAI,CAACyC,gBAAL,CAAsB/L,CAAtB,EAAyB6J,cAAzB,IAA2C,EAA5C,EAAgDnQ,MAAhD,GAAyD,CAA7D,EAAgE;AAC9DmE,YAAAA,CAAC,GAAGmC,CAAC,CAACwN,UAAN;AACA1R,YAAAA,CAAC,GAAGkE,CAAC,CAACyN,SAAN;AACAzN,YAAAA,CAAC,GAAG,CAAJ;AACD;AACF;AACF;;AAEDqN,MAAAA,EAAE,GAAG/D,IAAI,CAACyC,gBAAL,CAAsBxO,OAAtB,CAAL;;AAEA,UAAI8P,EAAE,CAAC3C,QAAH,KAAgB,UAAhB,IAA8B2C,EAAE,CAAC3C,QAAH,KAAgB,OAAlD,EAA2D;AACzDjE,QAAAA,CAAC,GAAGlJ,OAAO,CAACoN,YAAZ;;AAEA,eAAOwC,MAAM,IAAIA,MAAM,KAAK1G,CAA5B,EAA+B;AAC7B5I,UAAAA,CAAC,IAAIsP,MAAM,CAACxB,UAAP,IAAqB,CAA1B;AACA7P,UAAAA,CAAC,IAAIqR,MAAM,CAAC3B,SAAP,IAAoB,CAAzB;AACA2B,UAAAA,MAAM,GAAGA,MAAM,CAACvN,UAAhB;AACD;AACF;;AAEDI,MAAAA,CAAC,GAAGoN,SAAS,CAACjD,KAAd;AACAnK,MAAAA,CAAC,CAAC0N,GAAF,GAAQnQ,OAAO,CAACkQ,SAAR,GAAoB3R,CAApB,GAAwB,IAAhC;AACAkE,MAAAA,CAAC,CAAC2N,IAAF,GAASpQ,OAAO,CAACiQ,UAAR,GAAqB3P,CAArB,GAAyB,IAAlC;AACAmC,MAAAA,CAAC,CAAC6J,cAAD,CAAD,GAAoBwD,EAAE,CAACxD,cAAD,CAAtB;AACA7J,MAAAA,CAAC,CAAC8J,oBAAD,CAAD,GAA0BuD,EAAE,CAACvD,oBAAD,CAA5B;AACA9J,MAAAA,CAAC,CAAC0K,QAAF,GAAa2C,EAAE,CAAC3C,QAAH,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC,UAAjD;AACAnN,MAAAA,OAAO,CAACqC,UAAR,CAAmB6K,WAAnB,CAA+B2C,SAA/B;AACD;;AAED,WAAOA,SAAP;AACD,GA9ND;AAAA,MA+NIQ,UAAU,GAAG,SAASA,UAAT,CAAoBnH,CAApB,EAAuB5K,CAAvB,EAA0BmE,CAA1B,EAA6BC,CAA7B,EAAgC6D,CAAhC,EAAmCzI,CAAnC,EAAsCiS,CAAtC,EAAyC;AACxD7G,IAAAA,CAAC,CAAC5K,CAAF,GAAMA,CAAN;AACA4K,IAAAA,CAAC,CAACzG,CAAF,GAAMA,CAAN;AACAyG,IAAAA,CAAC,CAACxG,CAAF,GAAMA,CAAN;AACAwG,IAAAA,CAAC,CAAC3C,CAAF,GAAMA,CAAN;AACA2C,IAAAA,CAAC,CAACpL,CAAF,GAAMA,CAAN;AACAoL,IAAAA,CAAC,CAAC6G,CAAF,GAAMA,CAAN;AACA,WAAO7G,CAAP;AACD,GAvOD;;AAyOA,MAAI2D,QAAQ,GAAG,YAAY;AACzB,aAASA,QAAT,CAAkBvO,CAAlB,EAAqBmE,CAArB,EAAwBC,CAAxB,EAA2B6D,CAA3B,EAA8BzI,CAA9B,EAAiCiS,CAAjC,EAAoC;AAClC,UAAIzR,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAImE,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAIC,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAI6D,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAIzI,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,UAAIiS,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChBA,QAAAA,CAAC,GAAG,CAAJ;AACD;;AAEDM,MAAAA,UAAU,CAAC,IAAD,EAAO/R,CAAP,EAAUmE,CAAV,EAAaC,CAAb,EAAgB6D,CAAhB,EAAmBzI,CAAnB,EAAsBiS,CAAtB,CAAV;AACD;;AAED,QAAIO,MAAM,GAAGzD,QAAQ,CAAC0D,SAAtB;;AAEAD,IAAAA,MAAM,CAACE,OAAP,GAAiB,SAASA,OAAT,GAAmB;AAClC,UAAIlS,CAAC,GAAG,KAAKA,CAAb;AAAA,UACImE,CAAC,GAAG,KAAKA,CADb;AAAA,UAEIC,CAAC,GAAG,KAAKA,CAFb;AAAA,UAGI6D,CAAC,GAAG,KAAKA,CAHb;AAAA,UAIIzI,CAAC,GAAG,KAAKA,CAJb;AAAA,UAKIiS,CAAC,GAAG,KAAKA,CALb;AAAA,UAMIU,WAAW,GAAGnS,CAAC,GAAGiI,CAAJ,GAAQ9D,CAAC,GAAGC,CAAZ,IAAiB,KANnC;AAOA,aAAO2N,UAAU,CAAC,IAAD,EAAO9J,CAAC,GAAGkK,WAAX,EAAwB,CAAChO,CAAD,GAAKgO,WAA7B,EAA0C,CAAC/N,CAAD,GAAK+N,WAA/C,EAA4DnS,CAAC,GAAGmS,WAAhE,EAA6E,CAAC/N,CAAC,GAAGqN,CAAJ,GAAQxJ,CAAC,GAAGzI,CAAb,IAAkB2S,WAA/F,EAA4G,EAAEnS,CAAC,GAAGyR,CAAJ,GAAQtN,CAAC,GAAG3E,CAAd,IAAmB2S,WAA/H,CAAjB;AACD,KATD;;AAWAH,IAAAA,MAAM,CAACrB,QAAP,GAAkB,SAASA,QAAT,CAAkBE,MAAlB,EAA0B;AAC1C,UAAI7Q,CAAC,GAAG,KAAKA,CAAb;AAAA,UACImE,CAAC,GAAG,KAAKA,CADb;AAAA,UAEIC,CAAC,GAAG,KAAKA,CAFb;AAAA,UAGI6D,CAAC,GAAG,KAAKA,CAHb;AAAA,UAIIzI,CAAC,GAAG,KAAKA,CAJb;AAAA,UAKIiS,CAAC,GAAG,KAAKA,CALb;AAAA,UAMIW,EAAE,GAAGvB,MAAM,CAAC7Q,CANhB;AAAA,UAOIqS,EAAE,GAAGxB,MAAM,CAACzM,CAPhB;AAAA,UAQIkO,EAAE,GAAGzB,MAAM,CAAC1M,CARhB;AAAA,UASIkJ,EAAE,GAAGwD,MAAM,CAAC5I,CAThB;AAAA,UAUIsK,EAAE,GAAG1B,MAAM,CAACrR,CAVhB;AAAA,UAWIgT,EAAE,GAAG3B,MAAM,CAACY,CAXhB;AAYA,aAAOM,UAAU,CAAC,IAAD,EAAOK,EAAE,GAAGpS,CAAL,GAASsS,EAAE,GAAGlO,CAArB,EAAwBgO,EAAE,GAAGjO,CAAL,GAASmO,EAAE,GAAGrK,CAAtC,EAAyCoK,EAAE,GAAGrS,CAAL,GAASqN,EAAE,GAAGjJ,CAAvD,EAA0DiO,EAAE,GAAGlO,CAAL,GAASkJ,EAAE,GAAGpF,CAAxE,EAA2EzI,CAAC,GAAG+S,EAAE,GAAGvS,CAAT,GAAawS,EAAE,GAAGpO,CAA7F,EAAgGqN,CAAC,GAAGc,EAAE,GAAGpO,CAAT,GAAaqO,EAAE,GAAGvK,CAAlH,CAAjB;AACD,KAdD;;AAgBA+J,IAAAA,MAAM,CAACf,KAAP,GAAe,SAASA,KAAT,GAAiB;AAC9B,aAAO,IAAI1C,QAAJ,CAAa,KAAKvO,CAAlB,EAAqB,KAAKmE,CAA1B,EAA6B,KAAKC,CAAlC,EAAqC,KAAK6D,CAA1C,EAA6C,KAAKzI,CAAlD,EAAqD,KAAKiS,CAA1D,CAAP;AACD,KAFD;;AAIAO,IAAAA,MAAM,CAACS,MAAP,GAAgB,SAASA,MAAT,CAAgB5B,MAAhB,EAAwB;AACtC,UAAI7Q,CAAC,GAAG,KAAKA,CAAb;AAAA,UACImE,CAAC,GAAG,KAAKA,CADb;AAAA,UAEIC,CAAC,GAAG,KAAKA,CAFb;AAAA,UAGI6D,CAAC,GAAG,KAAKA,CAHb;AAAA,UAIIzI,CAAC,GAAG,KAAKA,CAJb;AAAA,UAKIiS,CAAC,GAAG,KAAKA,CALb;AAMA,aAAOzR,CAAC,KAAK6Q,MAAM,CAAC7Q,CAAb,IAAkBmE,CAAC,KAAK0M,MAAM,CAAC1M,CAA/B,IAAoCC,CAAC,KAAKyM,MAAM,CAACzM,CAAjD,IAAsD6D,CAAC,KAAK4I,MAAM,CAAC5I,CAAnE,IAAwEzI,CAAC,KAAKqR,MAAM,CAACrR,CAArF,IAA0FiS,CAAC,KAAKZ,MAAM,CAACY,CAA9G;AACD,KARD;;AAUAO,IAAAA,MAAM,CAACU,KAAP,GAAe,SAASA,KAAT,CAAe5K,KAAf,EAAsBJ,SAAtB,EAAiC;AAC9C,UAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,QAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,UAAI1F,CAAC,GAAG8F,KAAK,CAAC9F,CAAd;AAAA,UACI/B,CAAC,GAAG6H,KAAK,CAAC7H,CADd;AAAA,UAEID,CAAC,GAAG,KAAKA,CAFb;AAAA,UAGImE,CAAC,GAAG,KAAKA,CAHb;AAAA,UAIIC,CAAC,GAAG,KAAKA,CAJb;AAAA,UAKI6D,CAAC,GAAG,KAAKA,CALb;AAAA,UAMIzI,CAAC,GAAG,KAAKA,CANb;AAAA,UAOIiS,CAAC,GAAG,KAAKA,CAPb;AAQA/J,MAAAA,SAAS,CAAC1F,CAAV,GAAcA,CAAC,GAAGhC,CAAJ,GAAQC,CAAC,GAAGmE,CAAZ,GAAgB5E,CAAhB,IAAqB,CAAnC;AACAkI,MAAAA,SAAS,CAACzH,CAAV,GAAc+B,CAAC,GAAGmC,CAAJ,GAAQlE,CAAC,GAAGgI,CAAZ,GAAgBwJ,CAAhB,IAAqB,CAAnC;AACA,aAAO/J,SAAP;AACD,KAhBD;;AAkBA,WAAO6G,QAAP;AACD,GA3Fc,EAAf;;AA4FA,WAASoE,eAAT,CAAyBjR,OAAzB,EAAkCwQ,OAAlC,EAA2Cf,aAA3C,EAA0DyB,oBAA1D,EAAgF;AAC9E,QAAI,CAAClR,OAAD,IAAY,CAACA,OAAO,CAACqC,UAArB,IAAmC,CAACyJ,IAAI,IAAIW,OAAO,CAACzM,OAAD,CAAhB,EAA2B8M,eAA3B,KAA+C9M,OAAtF,EAA+F;AAC7F,aAAO,IAAI6M,QAAJ,EAAP;AACD;;AAED,QAAIsE,UAAU,GAAG9D,kBAAkB,CAACrN,OAAD,CAAnC;AAAA,QACI2O,GAAG,GAAGN,SAAS,CAACrO,OAAD,CADnB;AAAA,QAEIoR,KAAK,GAAGzC,GAAG,GAAGd,SAAH,GAAeC,SAF9B;AAAA,QAGI+B,SAAS,GAAGL,cAAc,CAACxP,OAAD,EAAUyP,aAAV,CAH9B;AAAA,QAII4B,EAAE,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,qBAAT,EAJT;AAAA,QAKIX,EAAE,GAAGS,KAAK,CAAC,CAAD,CAAL,CAASE,qBAAT,EALT;AAAA,QAMIC,EAAE,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,qBAAT,EANT;AAAA,QAOI1B,MAAM,GAAGC,SAAS,CAACxN,UAPvB;AAAA,QAQImP,OAAO,GAAG,CAACN,oBAAD,IAAyB3C,QAAQ,CAACvO,OAAD,CAR/C;AAAA,QASIkJ,CAAC,GAAG,IAAI2D,QAAJ,CAAa,CAAC8D,EAAE,CAACP,IAAH,GAAUiB,EAAE,CAACjB,IAAd,IAAsB,GAAnC,EAAwC,CAACO,EAAE,CAACR,GAAH,GAASkB,EAAE,CAAClB,GAAb,IAAoB,GAA5D,EAAiE,CAACoB,EAAE,CAACnB,IAAH,GAAUiB,EAAE,CAACjB,IAAd,IAAsB,GAAvF,EAA4F,CAACmB,EAAE,CAACpB,GAAH,GAASkB,EAAE,CAAClB,GAAb,IAAoB,GAAhH,EAAqHkB,EAAE,CAACjB,IAAH,IAAWoB,OAAO,GAAG,CAAH,GAAOtD,iBAAiB,EAA1C,CAArH,EAAoKmD,EAAE,CAAClB,GAAH,IAAUqB,OAAO,GAAG,CAAH,GAAOzD,gBAAgB,EAAxC,CAApK,CATR;;AAWA6B,IAAAA,MAAM,CAACrN,WAAP,CAAmBsN,SAAnB;;AAEA,QAAIsB,UAAJ,EAAgB;AACdE,MAAAA,EAAE,GAAGF,UAAU,CAAChV,MAAhB;;AAEA,aAAOkV,EAAE,EAAT,EAAa;AACXV,QAAAA,EAAE,GAAGQ,UAAU,CAACE,EAAD,CAAf;AACAV,QAAAA,EAAE,CAACjD,MAAH,GAAYiD,EAAE,CAAChD,MAAH,GAAY,CAAxB;AACAgD,QAAAA,EAAE,CAAC/C,eAAH,CAAmB,CAAnB,EAAsB+C,EAAtB;AACD;AACF;;AAED,WAAOH,OAAO,GAAGtH,CAAC,CAACsH,OAAF,EAAH,GAAiBtH,CAA/B;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEC,MAAIuI,OAAO,GAAG,wCAAwC5R,KAAxC,CAA8C,GAA9C,CAAd;AAAA,MACI6R,OAAO,GAAG,sCAAsC7R,KAAtC,CAA4C,GAA5C,CADd;AAAA,MAEI8R,UAAU,GAAG1X,IAAI,CAACC,EAAL,GAAU,GAF3B;AAAA,MAGI0X,IAHJ;AAAA,MAIIC,SAJJ;AAAA,MAKIC,QALJ;AAAA,MAMIC,QANJ;AAAA,MAOIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,WAAOJ,IAAI,IAAI,OAAOjY,MAAP,KAAkB,WAAlB,KAAkCiY,IAAI,GAAGjY,MAAM,CAACiY,IAAhD,KAAyDA,IAAI,CAACK,cAA9D,IAAgFL,IAA/F;AACD,GATD;AAAA,MAUIM,yBAAyB,GAAG,SAASA,yBAAT,CAAmClW,OAAnC,EAA4CmW,MAA5C,EAAoDC,QAApD,EAA8DC,IAA9D,EAAoE;AAClG,QAAI7V,CAAC,GAAG2V,MAAM,CAAChW,MAAf;AAAA,QACIwH,EAAE,GAAG0O,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBA,IAD1B;AAAA,QAEIvW,CAAC,GAAG,CAFR;AAAA,QAGIwW,CAHJ;;AAKA,WAAOxW,CAAC,GAAGU,CAAX,EAAcV,CAAC,EAAf,EAAmB;AACjBE,MAAAA,OAAO,CAAC2H,EAAD,CAAP,GAAc2O,CAAC,GAAGC,UAAU,CAACJ,MAAM,CAACrW,CAAD,CAAN,CAAUsW,QAAV,CAAD,CAA5B;AACAC,MAAAA,IAAI,KAAK,CAAT,KAAerW,OAAO,CAAC2H,EAAE,GAAG,CAAN,CAAP,GAAkB,CAAjC;AACAA,MAAAA,EAAE,IAAI,CAAN;AACD;;AAED,WAAO3H,OAAP;AACD,GAvBD;AAAA,MAwBIwW,WAAW,GAAG,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyC;AACzD,WAAOJ,UAAU,CAACE,MAAM,CAAClF,KAAP,CAAaE,GAAb,CAAiBgF,MAAjB,EAAyBC,IAAzB,EAA+BC,IAAI,IAAI,IAAvC,CAAD,CAAV,IAA4D,CAAnE;AACD,GA1BD;AAAA,MA2BIC,WAAW,GAAG,SAASA,WAAT,CAAqB5W,OAArB,EAA8B;AAC9C,QAAIsE,CAAC,GAAGtE,OAAO,CAAC,CAAD,CAAf;AAAA,QACIuC,CAAC,GAAGvC,OAAO,CAAC,CAAD,CADf;AAAA,QAEIF,CAFJ;;AAIA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGE,OAAO,CAACG,MAAxB,EAAgCL,CAAC,IAAI,CAArC,EAAwC;AACtCwE,MAAAA,CAAC,GAAGtE,OAAO,CAACF,CAAD,CAAP,IAAcwE,CAAlB;AACA/B,MAAAA,CAAC,GAAGvC,OAAO,CAACF,CAAC,GAAG,CAAL,CAAP,IAAkByC,CAAtB;AACD;AACF,GApCD;AAAA,MAqCIsU,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC9W,OAAnC,EAA4CyW,MAA5C,EAAoDnS,CAApD,EAAuD/B,CAAvD,EAA0DwU,MAA1D,EAAkEC,IAAlE,EAAwEC,KAAxE,EAA+EC,KAA/E,EAAsF;AAC5G,QAAIF,IAAI,CAAC9S,IAAL,KAAc,OAAlB,EAA2B;AACzBlE,MAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD,KAFD,MAEO;AACLgX,MAAAA,IAAI,CAACG,WAAL,KAAqB,KAArB,IAA8BnX,OAAO,CAAC4P,OAAR,CAAgB4G,WAAW,CAACC,MAAD,EAASnS,CAAT,EAAY2S,KAAZ,CAA3B,EAA+C1U,CAAC,GAAGiU,WAAW,CAACC,MAAD,EAASlU,CAAT,EAAY2U,KAAZ,CAAd,GAAmC,CAAnF,CAA9B;AACAF,MAAAA,IAAI,CAACI,QAAL,IAAiBR,WAAW,CAAC5W,OAAD,CAA5B;AACA,UAAIqX,SAAS,GAAG9U,CAAC,GAAGwM,eAAH,GAAqBF,mBAAtC;AACA7O,MAAAA,OAAO,GAAG,CAACqX,SAAS,CAACrX,OAAD,EAAUgX,IAAI,CAAClI,SAAf,CAAV,CAAV;AACD;;AAED9O,IAAAA,OAAO,GAAG+W,MAAM,CAACO,MAAM,CAACtX,OAAD,EAAUyW,MAAV,EAAkBO,IAAlB,CAAP,CAAhB;;AAEAO,IAAAA,wBAAwB,CAACT,MAAD,EAASL,MAAT,EAAiBnS,CAAjB,EAAoBtE,OAApB,EAA6B,GAA7B,EAAkCiX,KAAlC,CAAxB;;AAEA1U,IAAAA,CAAC,IAAIgV,wBAAwB,CAACT,MAAD,EAASL,MAAT,EAAiBlU,CAAjB,EAAoBvC,OAApB,EAA6B,GAA7B,EAAkCkX,KAAlC,CAA7B;AACA,WAAOhQ,wBAAwB,CAAClH,OAAD,EAAUgX,IAAI,CAAC5V,UAAL,KAAoB4V,IAAI,CAAClI,SAAL,KAAmB,CAAnB,GAAuB,EAAvB,GAA4B,EAAhD,CAAV,CAA/B;AACD,GArDD;AAAA,MAsDI0I,UAAU,GAAG,SAASA,UAAT,CAAoBlB,CAApB,EAAuB;AACtC,WAAOA,CAAP;AACD,GAxDD;AAAA,MAyDImB,OAAO,GAAG,8BAzDd;AAAA,MA0DIC,cAAc,GAAG,SAASA,cAAT,CAAwB1T,OAAxB,EAAiC2T,MAAjC,EAAyCC,YAAzC,EAAuD;AAC1E,QAAI1K,CAAC,GAAG+H,eAAe,CAACjR,OAAD,CAAvB;AAAA,QACIM,CAAC,GAAG,CADR;AAAA,QAEI/B,CAAC,GAAG,CAFR;AAAA,QAGIoQ,GAHJ;;AAKA,QAAI,CAAC3O,OAAO,CAACG,OAAR,GAAkB,EAAnB,EAAuBlB,WAAvB,OAAyC,KAA7C,EAAoD;AAClD0P,MAAAA,GAAG,GAAG3O,OAAO,CAAC6T,OAAR,CAAgB7D,OAAtB;AACArB,MAAAA,GAAG,CAACjN,KAAJ,KAAciN,GAAG,GAAG;AAClBjN,QAAAA,KAAK,EAAE,CAAC1B,OAAO,CAACjC,YAAR,CAAqB,OAArB,CADU;AAElB4D,QAAAA,MAAM,EAAE,CAAC3B,OAAO,CAACjC,YAAR,CAAqB,QAArB;AAFS,OAApB;AAID,KAND,MAMO;AACL4Q,MAAAA,GAAG,GAAGgF,MAAM,IAAI3T,OAAO,CAACwB,OAAlB,IAA6BxB,OAAO,CAACwB,OAAR,EAAnC;AACD;;AAED,QAAImS,MAAM,IAAIA,MAAM,KAAK,MAAzB,EAAiC;AAC/BrT,MAAAA,CAAC,GAAGqT,MAAM,CAACvP,IAAP,GAAcuP,MAAM,CAAC,CAAD,CAAN,IAAahF,GAAG,GAAGA,GAAG,CAACjN,KAAP,GAAe1B,OAAO,CAAC8T,WAAR,IAAuB,CAAtD,CAAd,GAAyEH,MAAM,CAACrT,CAApF;AACA/B,MAAAA,CAAC,GAAGoV,MAAM,CAACvP,IAAP,GAAcuP,MAAM,CAAC,CAAD,CAAN,IAAahF,GAAG,GAAGA,GAAG,CAAChN,MAAP,GAAgB3B,OAAO,CAAC+T,YAAR,IAAwB,CAAxD,CAAd,GAA2EJ,MAAM,CAACpV,CAAtF;AACD;;AAED,WAAOqV,YAAY,CAAC5C,KAAb,CAAmB1Q,CAAC,IAAI/B,CAAL,GAAS2K,CAAC,CAAC8H,KAAF,CAAQ;AACzC1Q,MAAAA,CAAC,EAAEA,CADsC;AAEzC/B,MAAAA,CAAC,EAAEA;AAFsC,KAAR,CAAT,GAGrB;AACH+B,MAAAA,CAAC,EAAE4I,CAAC,CAACpL,CADF;AAEHS,MAAAA,CAAC,EAAE2K,CAAC,CAAC6G;AAFF,KAHE,CAAP;AAOD,GAtFD;AAAA,MAuFIiE,eAAe,GAAG,SAASA,eAAT,CAAyBC,WAAzB,EAAsCC,SAAtC,EAAiDC,UAAjD,EAA6DC,QAA7D,EAAuE;AAC3F,QAAIR,YAAY,GAAG3C,eAAe,CAACgD,WAAW,CAAC5R,UAAb,EAAyB,IAAzB,EAA+B,IAA/B,CAAlC;AAAA,QACI6G,CAAC,GAAG0K,YAAY,CAACrE,KAAb,GAAqBN,QAArB,CAA8BgC,eAAe,CAACiD,SAAD,CAA7C,CADR;AAAA,QAEIG,SAAS,GAAGX,cAAc,CAACO,WAAD,EAAcE,UAAd,EAA0BP,YAA1B,CAF9B;AAAA,QAGIU,eAAe,GAAGZ,cAAc,CAACQ,SAAD,EAAYE,QAAZ,EAAsBR,YAAtB,CAHpC;AAAA,QAIItT,CAAC,GAAGgU,eAAe,CAAChU,CAJxB;AAAA,QAKI/B,CAAC,GAAG+V,eAAe,CAAC/V,CALxB;AAAA,QAMIgW,CANJ;;AAQArL,IAAAA,CAAC,CAACpL,CAAF,GAAMoL,CAAC,CAAC6G,CAAF,GAAM,CAAZ;;AAEA,QAAIqE,QAAQ,KAAK,MAAb,IAAuBF,SAAS,CAACM,cAAjC,IAAmDN,SAAS,CAAC/T,OAAV,CAAkBlB,WAAlB,OAAoC,MAA3F,EAAmG;AACjGsV,MAAAA,CAAC,GAAGL,SAAS,CAACnW,YAAV,CAAuB,GAAvB,EAA4BkE,KAA5B,CAAkCwR,OAAlC,KAA8C,EAAlD;AACAc,MAAAA,CAAC,GAAGrL,CAAC,CAAC8H,KAAF,CAAQ;AACV1Q,QAAAA,CAAC,EAAE,CAACiU,CAAC,CAAC,CAAD,CADK;AAEVhW,QAAAA,CAAC,EAAE,CAACgW,CAAC,CAAC,CAAD;AAFK,OAAR,CAAJ;AAIAjU,MAAAA,CAAC,IAAIiU,CAAC,CAACjU,CAAP;AACA/B,MAAAA,CAAC,IAAIgW,CAAC,CAAChW,CAAP;AACD;;AAED,QAAIgW,CAAC,IAAIL,SAAS,CAAC1S,OAAV,IAAqByS,WAAW,CAACzS,OAAjC,IAA4C0S,SAAS,CAAC5F,eAAV,KAA8B2F,WAAW,CAAC3F,eAA/F,EAAgH;AAC9GiG,MAAAA,CAAC,GAAGrL,CAAC,CAAC8H,KAAF,CAAQkD,SAAS,CAAC1S,OAAV,EAAR,CAAJ;AACAlB,MAAAA,CAAC,IAAIiU,CAAC,CAACjU,CAAP;AACA/B,MAAAA,CAAC,IAAIgW,CAAC,CAAChW,CAAP;AACD;;AAED2K,IAAAA,CAAC,CAACpL,CAAF,GAAMwC,CAAC,GAAG+T,SAAS,CAAC/T,CAApB;AACA4I,IAAAA,CAAC,CAAC6G,CAAF,GAAMxR,CAAC,GAAG8V,SAAS,CAAC9V,CAApB;AACA,WAAO2K,CAAP;AACD,GArHD;AAAA,MAsHIoK,MAAM,GAAG,SAASA,MAAT,CAAgB1X,OAAhB,EAAyB6W,MAAzB,EAAiCgC,IAAjC,EAAuC;AAClD,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,QACIvF,MAAM,GAAGsF,IAAI,CAACtF,MADlB;AAAA,QAEIwF,OAAO,GAAGF,IAAI,CAACE,OAFnB;AAAA,QAGIC,OAAO,GAAGH,IAAI,CAACG,OAHnB;AAAA,QAIIC,WAAW,GAAGJ,IAAI,CAACI,WAJvB;;AAMA,QAAIvU,CAAC,GAAG1E,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAR;AAAA,QACI2C,CAAC,GAAG3C,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CADR;AAAA,QAEIkZ,IAAI,GAAGtC,WAAW,CAACC,MAAD,EAAS,GAAT,CAFtB;AAAA,QAGIsC,IAAI,GAAGvC,WAAW,CAACC,MAAD,EAAS,GAAT,CAHtB;AAAA,QAIIuC,WAJJ;AAAA,QAKI9L,CALJ;AAAA,QAMIqL,CANJ;;AAQA,QAAI,CAAC3Y,OAAD,IAAY,CAACA,OAAO,CAACO,MAAzB,EAAiC;AAC/B,aAAOuB,UAAU,CAAC,UAAD,CAAjB;AACD;;AAED,QAAIgX,KAAJ,EAAW;AACT,UAAIA,KAAK,KAAK,MAAV,IAAoB,CAACM,WAAW,GAAGjD,QAAQ,CAAC2C,KAAD,CAAR,CAAgB,CAAhB,KAAsBjC,MAArC,MAAiDA,MAAzE,EAAiF;AAC/EnM,QAAAA,gBAAgB,CAAC1K,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBkZ,IAAI,GAAGxU,CAA7B,EAAgCyU,IAAI,GAAGxW,CAAvC,CAAhB;AACD,OAFD,MAEO;AACL,YAAIsW,WAAW,IAAIA,WAAW,CAAC,CAAD,CAAX,KAAmB,KAAtC,EAA6C;AAC3CjD,UAAAA,IAAI,CAACqD,GAAL,CAASxC,MAAT,EAAiB;AACfyC,YAAAA,eAAe,EAAEL,WAAW,CAAC,CAAD,CAAX,GAAiB,GAAjB,GAAuB,IAAvB,GAA8BA,WAAW,CAAC,CAAD,CAAX,GAAiB,GAA/C,GAAqD;AADvD,WAAjB;AAGD,SAJD,MAIO;AACLA,UAAAA,WAAW,GAAG,CAACrC,WAAW,CAACC,MAAD,EAAS,UAAT,CAAX,GAAkC,CAAC,GAApC,EAAyCD,WAAW,CAACC,MAAD,EAAS,UAAT,CAAX,GAAkC,CAAC,GAA5E,CAAd;AACD;;AAEDvJ,QAAAA,CAAC,GAAG8K,eAAe,CAACvB,MAAD,EAASuC,WAAT,EAAsBH,WAAtB,EAAmC,MAAnC,CAAnB;AACAN,QAAAA,CAAC,GAAGrL,CAAC,CAAC8H,KAAF,CAAQ;AACV1Q,UAAAA,CAAC,EAAEA,CADO;AAEV/B,UAAAA,CAAC,EAAEA;AAFO,SAAR,CAAJ;AAIA+H,QAAAA,gBAAgB,CAAC1K,OAAD,EAAUsN,CAAC,CAAC5K,CAAZ,EAAe4K,CAAC,CAACzG,CAAjB,EAAoByG,CAAC,CAACxG,CAAtB,EAAyBwG,CAAC,CAAC3C,CAA3B,EAA8BuO,IAAI,GAAG5L,CAAC,CAACpL,CAAT,IAAcyW,CAAC,CAACjU,CAAF,GAAM4I,CAAC,CAACpL,CAAtB,CAA9B,EAAwDiX,IAAI,GAAG7L,CAAC,CAAC6G,CAAT,IAAcwE,CAAC,CAAChW,CAAF,GAAM2K,CAAC,CAAC6G,CAAtB,CAAxD,CAAhB;AACD;AACF;;AAED,QAAIZ,MAAJ,EAAY;AACV7I,MAAAA,gBAAgB,CAAC1K,OAAD,EAAUuT,MAAM,CAAC7Q,CAAjB,EAAoB6Q,MAAM,CAAC1M,CAA3B,EAA8B0M,MAAM,CAACzM,CAArC,EAAwCyM,MAAM,CAAC5I,CAA/C,EAAkD4I,MAAM,CAACrR,CAAzD,EAA4DqR,MAAM,CAACY,CAAnE,CAAhB;AACD,KAFD,MAEO,IAAI4E,OAAO,IAAIC,OAAf,EAAwB;AAC7BtO,MAAAA,gBAAgB,CAAC1K,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB+Y,OAAO,IAAI,CAAjC,EAAoCC,OAAO,IAAI,CAA/C,CAAhB;AACD;;AAED,WAAOhZ,OAAP;AACD,GArKD;AAAA,MAsKI2X,wBAAwB,GAAG,SAASA,wBAAT,CAAkCT,MAAlC,EAA0CL,MAA1C,EAAkDL,QAAlD,EAA4DxW,OAA5D,EAAqEuZ,YAArE,EAAmFC,SAAnF,EAA8F;AAC3H,QAAI9H,KAAK,GAAGmF,MAAM,CAAClF,KAAnB;AAAA,QACI8H,OAAO,GAAG/H,KAAK,CAAC+H,OADpB;AAAA,QAEIC,KAAK,GAAGD,OAAO,IAAIA,OAAO,CAACE,OAAnB,IAA8BF,OAAO,CAACE,OAAR,CAAgBnD,QAAhB,CAF1C;AAAA,QAGIM,IAAI,GAAG4C,KAAK,IAAIA,KAAK,CAACpW,OAAN,CAAc,GAAd,IAAqB,CAA9B,GAAkCoW,KAAlC,GAA0ClD,QAHrD;AAAA,QAIIoD,EAAE,GAAG1C,MAAM,CAAC2C,GAAP,GAAa,IAAI5D,SAAJ,CAAciB,MAAM,CAAC2C,GAArB,EAA0BhD,MAA1B,EAAkCC,IAAlC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8Cc,UAA9C,EAA0D,CAA1D,EAA6DlG,KAAK,CAAC2H,GAAN,CAAUxC,MAAV,EAAkBC,IAAlB,EAAwBI,MAAxB,CAA7D,CAJtB;AAKA0C,IAAAA,EAAE,CAACE,CAAH,GAAO5D,QAAQ,CAACxE,KAAK,CAACG,GAAN,CAAUgF,MAAV,EAAkBC,IAAlB,EAAwB0C,SAAxB,CAAD,CAAR,IAAgD,CAAvD;AACAI,IAAAA,EAAE,CAAC9W,IAAH,GAAU9C,OAAV;AACA4Z,IAAAA,EAAE,CAACG,EAAH,GAAQR,YAAR;;AAEArC,IAAAA,MAAM,CAAC8C,MAAP,CAAcxR,IAAd,CAAmBsO,IAAnB;AACD,GAjLD;AAAA,MAkLImD,cAAc,GAAG,SAASA,cAAT,CAAwBjT,KAAxB,EAA+BC,GAA/B,EAAoC;AACvD,WAAO,UAAUjH,OAAV,EAAmB;AACxB,aAAOgH,KAAK,IAAIC,GAAG,KAAK,CAAjB,GAAqBF,YAAY,CAAC/G,OAAD,EAAUgH,KAAV,EAAiBC,GAAjB,CAAjC,GAAyDjH,OAAhE;AACD,KAFD;AAGD,GAtLD;;AAwLA,MAAIka,gBAAgB,GAAG;AACrBC,IAAAA,OAAO,EAAE,OADY;AAErBhX,IAAAA,IAAI,EAAE,YAFe;AAGrBiX,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;AACnDvE,MAAAA,IAAI,GAAGqE,IAAP;AACAnE,MAAAA,QAAQ,GAAGF,IAAI,CAACwE,KAAL,CAAWC,OAAtB;AACAtE,MAAAA,QAAQ,GAAGH,IAAI,CAACwE,KAAL,CAAWE,OAAtB;AACAzE,MAAAA,SAAS,GAAGsE,SAAZ;AACD,KARoB;AASrBI,IAAAA,IAAI,EAAE,SAASA,IAAT,CAAc9D,MAAd,EAAsBO,IAAtB,EAA4B;AAChC,UAAI,CAACpB,IAAL,EAAW;AACTzT,QAAAA,OAAO,CAACC,IAAR,CAAa,8CAAb;AACA,eAAO,KAAP;AACD;;AAED,UAAI,EAAE,OAAO4U,IAAP,KAAgB,QAAhB,IAA4B,CAACA,IAAI,CAACpG,KAApC,KAA8C,CAACoG,IAAI,CAACtU,IAAxD,EAA8D;AAC5DsU,QAAAA,IAAI,GAAG;AACLtU,UAAAA,IAAI,EAAEsU;AADD,SAAP;AAGD;;AAED,UAAIwD,QAAQ,GAAG,EAAf;AAAA,UACIC,KAAK,GAAGzD,IADZ;AAAA,UAEItU,IAAI,GAAG+X,KAAK,CAAC/X,IAFjB;AAAA,UAGIgY,UAAU,GAAGD,KAAK,CAACC,UAHvB;AAAA,UAIIzD,KAAK,GAAGwD,KAAK,CAACxD,KAJlB;AAAA,UAKIC,KAAK,GAAGuD,KAAK,CAACvD,KALlB;AAAA,UAMI5S,CAAC,GAAGmW,KAAK,CAACnW,CANd;AAAA,UAOI/B,CAAC,GAAGkY,KAAK,CAAClY,CAPd;AAAA,UAQIoY,QAAQ,GAAGjY,IAAI,CAAC,CAAD,CARnB;AAAA,UASIqU,MAAM,GAAG8C,cAAc,CAAC7C,IAAI,CAACpQ,KAAN,EAAa,SAASoQ,IAAT,GAAgBA,IAAI,CAACnQ,GAArB,GAA2B,CAAxC,CAT3B;AAAA,UAUIjH,OAVJ;AAAA,UAWI2Y,CAXJ;;AAaA,WAAKiC,QAAL,GAAgBA,QAAhB;AACA,WAAK/D,MAAL,GAAcA,MAAd;;AAEA,UAAI,KAAKmE,MAAL,GAAcF,UAAU,IAAIA,UAAU,KAAK,CAA/C,EAAkD;AAChD,aAAKG,OAAL,GAAetE,UAAU,CAACmE,UAAD,CAAV,IAA0B,CAAzC;AACA,aAAKI,OAAL,GAAe,CAAC,CAAC9D,IAAI,CAAC+D,UAAtB;AACA,aAAKC,KAAL,GAAahE,IAAI,CAACiE,QAAL,IAAiB,UAA9B;AACA,aAAKC,IAAL,GAAYzE,MAAM,CAAClF,KAAP,CAAa0H,GAAb,CAAiBxC,MAAjB,EAAyB,KAAKuE,KAA9B,EAAqC,IAArC,CAAZ;AACA,aAAKG,EAAL,GAAUrF,QAAQ,CAACW,MAAM,CAAClF,KAAP,CAAaE,GAAb,CAAiBgF,MAAjB,EAAyB,KAAKuE,KAA9B,CAAD,CAAR,IAAkD,CAA5D;AACD;;AAED,UAAII,KAAK,CAACC,OAAN,CAAc3Y,IAAd,KAAuB,EAAE,YAAYA,IAAd,CAAvB,IAA8C,OAAOiY,QAAP,KAAoB,QAAtE,EAAgF;AAC9E,aAAKpC,CAAL,IAAUoC,QAAV,EAAoB;AAClB,cAAI,CAACrW,CAAD,IAAM,CAACmR,OAAO,CAACvS,OAAR,CAAgBqV,CAAhB,CAAX,EAA+B;AAC7BjU,YAAAA,CAAC,GAAGiU,CAAJ;AACD,WAFD,MAEO,IAAI,CAAChW,CAAD,IAAM,CAACmT,OAAO,CAACxS,OAAR,CAAgBqV,CAAhB,CAAX,EAA+B;AACpChW,YAAAA,CAAC,GAAGgW,CAAJ;AACD;AACF;;AAED,YAAIjU,CAAC,IAAI/B,CAAT,EAAY;AACViY,UAAAA,QAAQ,CAACpS,IAAT,CAAcyO,iBAAiB,CAAC,IAAD,EAAOX,yBAAyB,CAACA,yBAAyB,CAAC,EAAD,EAAKxT,IAAL,EAAW4B,CAAX,EAAc,CAAd,CAA1B,EAA4C5B,IAA5C,EAAkDH,CAAlD,EAAqD,CAArD,CAAhC,EAAyFkU,MAAzF,EAAiGnS,CAAjG,EAAoG/B,CAApG,EAAuGwU,MAAvG,EAA+GC,IAA/G,EAAqHC,KAAK,IAAInB,QAAQ,CAACpT,IAAI,CAAC,CAAD,CAAJ,CAAQ4B,CAAR,CAAD,CAAtI,EAAoJ4S,KAAK,IAAIpB,QAAQ,CAACpT,IAAI,CAAC,CAAD,CAAJ,CAAQH,CAAR,CAAD,CAArK,CAA/B;AACD,SAFD,MAEO;AACL+B,UAAAA,CAAC,GAAG/B,CAAC,GAAG,CAAR;AACD;;AAED,aAAKgW,CAAL,IAAUoC,QAAV,EAAoB;AAClBpC,UAAAA,CAAC,KAAKjU,CAAN,IAAWiU,CAAC,KAAKhW,CAAjB,IAAsBiY,QAAQ,CAACpS,IAAT,CAAcyO,iBAAiB,CAAC,IAAD,EAAOX,yBAAyB,CAAC,EAAD,EAAKxT,IAAL,EAAW6V,CAAX,EAAc,CAAd,CAAhC,EAAkD9B,MAAlD,EAA0D8B,CAA1D,EAA6D,CAA7D,EAAgExB,MAAhE,EAAwEC,IAAxE,EAA8ElB,QAAQ,CAACpT,IAAI,CAAC,CAAD,CAAJ,CAAQ6V,CAAR,CAAD,CAAtF,CAA/B,CAAtB;AACD;AACF,OAlBD,MAkBO;AACL3Y,QAAAA,OAAO,GAAGmX,MAAM,CAACO,MAAM,CAAC5V,UAAU,CAACsV,IAAI,CAACtU,IAAN,CAAX,EAAwB+T,MAAxB,EAAgCO,IAAhC,CAAP,CAAhB;AACA9P,QAAAA,wBAAwB,CAACtH,OAAD,EAAUoX,IAAI,CAAC5V,UAAf,CAAxB;AACAoZ,QAAAA,QAAQ,CAACpS,IAAT,CAAcxI,OAAd;;AAEA2X,QAAAA,wBAAwB,CAAC,IAAD,EAAOd,MAAP,EAAeO,IAAI,CAAC1S,CAAL,IAAU,GAAzB,EAA8B1E,OAA9B,EAAuC,GAAvC,EAA4CoX,IAAI,CAACC,KAAL,IAAc,IAA1D,CAAxB;;AAEAM,QAAAA,wBAAwB,CAAC,IAAD,EAAOd,MAAP,EAAeO,IAAI,CAACzU,CAAL,IAAU,GAAzB,EAA8B3C,OAA9B,EAAuC,GAAvC,EAA4CoX,IAAI,CAACE,KAAL,IAAc,IAA1D,CAAxB;AACD;AACF,KAxEoB;AAyErBoE,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuBlX,IAAvB,EAA6B;AACnC,UAAImW,QAAQ,GAAGnW,IAAI,CAACmW,QAApB;AAAA,UACI1a,CAAC,GAAG0a,QAAQ,CAACra,MADjB;AAAA,UAEIqZ,EAAE,GAAGnV,IAAI,CAACoV,GAFd;;AAIA,UAAI8B,KAAK,GAAG,CAAZ,EAAe;AACbA,QAAAA,KAAK,GAAG,CAAR;AACD,OAFD,MAEO,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBA,QAAAA,KAAK,GAAG,CAAR;AACD;;AAED,aAAOzb,CAAC,EAAR,EAAY;AACVoK,QAAAA,iBAAiB,CAACsQ,QAAQ,CAAC1a,CAAD,CAAT,EAAcyb,KAAd,EAAqB,CAACzb,CAAD,IAAMuE,IAAI,CAACuW,MAAhC,EAAwCJ,QAAQ,CAAC1a,CAAD,CAAhD,CAAjB;AACD;;AAED,aAAO0Z,EAAP,EAAW;AACTA,QAAAA,EAAE,CAACP,GAAH,CAAOO,EAAE,CAACzZ,CAAV,EAAayZ,EAAE,CAACjB,CAAhB,EAAmBiB,EAAE,CAAC9W,IAAH,CAAQ8W,EAAE,CAACG,EAAX,IAAiBH,EAAE,CAACE,CAAvC,EAA0CF,EAAE,CAACjP,CAA7C,EAAgDgR,KAAhD;AACA/B,QAAAA,EAAE,GAAGA,EAAE,CAACgC,KAAR;AACD;;AAEDnX,MAAAA,IAAI,CAACuW,MAAL,IAAevW,IAAI,CAAC6W,IAAL,CAAU7W,IAAI,CAACoS,MAAf,EAAuBpS,IAAI,CAAC2W,KAA5B,EAAmCR,QAAQ,CAAC,CAAD,CAAR,CAAYrS,KAAZ,IAAqB9D,IAAI,CAACyW,OAAL,GAAenF,UAAf,GAA4B,CAAjD,IAAsDtR,IAAI,CAACwW,OAA3D,GAAqExW,IAAI,CAAC8W,EAA7G,EAAiH9W,IAAjH,EAAuHkX,KAAvH,CAAf;AACD,KA9FoB;AA+FrBE,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB/Y,IAAnB,EAAyB;AAClC,aAAOwE,wBAAwB,CAACxF,UAAU,CAACgB,IAAD,CAAX,CAAxB,CAA2CzB,WAAlD;AACD,KAjGoB;AAkGrB0F,IAAAA,YAAY,EAAEA,YAlGO;AAmGrBjF,IAAAA,UAAU,EAAEA,UAnGS;AAoGrBqN,IAAAA,eAAe,EAAEA,eApGI;AAqGrB7M,IAAAA,eAAe,EAAEA,eArGI;AAsGrBiE,IAAAA,eAAe,EAAEA,eAtGI;AAuGrBmE,IAAAA,gBAAgB,EAAEA,gBAvGG;AAwGrB2K,IAAAA,eAAe,EAAEA,eAxGI;AAyGrB/K,IAAAA,iBAAiB,EAAEA,iBAzGE;AA0GrBhD,IAAAA,wBAAwB,EAAEA,wBA1GL;AA2GrBnD,IAAAA,aAAa,EAAE,SAAS2X,eAAT,CAAyBC,OAAzB,EAAkC1X,IAAlC,EAAwC;AACrD,aAAO8R,QAAQ,CAAC4F,OAAD,CAAR,CAAkBC,GAAlB,CAAsB,UAAUnF,MAAV,EAAkB;AAC7C,eAAO1S,aAAa,CAAC0S,MAAD,EAASxS,IAAI,KAAK,KAAlB,CAApB;AACD,OAFM,CAAP;AAGD,KA/GoB;AAgHrB4X,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4B5D,WAA5B,EAAyCC,SAAzC,EAAoD9N,KAApD,EAA2D;AAC7E,UAAI8C,CAAC,GAAG+H,eAAe,CAACiD,SAAD,EAAY,IAAZ,EAAkB,IAAlB,CAAf,CAAuCjF,QAAvC,CAAgDgC,eAAe,CAACgD,WAAD,CAA/D,CAAR;AACA,aAAO7N,KAAK,GAAG8C,CAAC,CAAC8H,KAAF,CAAQ5K,KAAR,CAAH,GAAoB8C,CAAhC;AACD,KAnHoB;AAoHrB4O,IAAAA,cAAc,EAAE9D,eApHK;AAqHrB+D,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6B9D,WAA7B,EAA0CC,SAA1C,EAAqDC,UAArD,EAAiEC,QAAjE,EAA2E;AAC9F,UAAIlL,CAAC,GAAG8K,eAAe,CAACC,WAAD,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,QAArC,CAAvB;;AAEA,aAAO;AACL9T,QAAAA,CAAC,EAAE4I,CAAC,CAACpL,CADA;AAELS,QAAAA,CAAC,EAAE2K,CAAC,CAAC6G;AAFA,OAAP;AAID,KA5HoB;AA6HrBiI,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBhd,KAAxB,EAA+BgY,IAA/B,EAAqC;AACnDA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,UAAIhX,OAAO,GAAGkW,yBAAyB,CAACA,yBAAyB,CAAC,EAAD,EAAKlX,KAAL,EAAYgY,IAAI,CAAC1S,CAAL,IAAU,GAAtB,EAA2B,CAA3B,CAA1B,EAAyDtF,KAAzD,EAAgEgY,IAAI,CAACzU,CAAL,IAAU,GAA1E,EAA+E,CAA/E,CAAvC;;AAEAyU,MAAAA,IAAI,CAACI,QAAL,IAAiBR,WAAW,CAAC5W,OAAD,CAA5B;AACA,aAAO,CAACgX,IAAI,CAAC9S,IAAL,KAAc,OAAd,GAAwBlE,OAAxB,GAAkC+O,eAAe,CAAC/O,OAAD,EAAUgX,IAAI,CAAClI,SAAf,CAAlD,CAAP;AACD;AApIoB,GAAvB;AAsIAkH,EAAAA,QAAQ,MAAMJ,IAAI,CAACK,cAAL,CAAoB6D,gBAApB,CAAd;AAEAxc,EAAAA,OAAO,CAACwc,gBAAR,GAA2BA,gBAA3B;AACAxc,EAAAA,OAAO,CAAC2e,OAAR,GAAkBnC,gBAAlB;AAEAoC,EAAAA,MAAM,CAACC,cAAP,CAAsB7e,OAAtB,EAA+B,YAA/B,EAA6C;AAAE0B,IAAAA,KAAK,EAAE;AAAT,GAA7C;AAEA,CAnwDA,CAAD","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.window = global.window || {}));\n}(this, (function (exports) { 'use strict';\n\n\tvar _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t    _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t    _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t    _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t    _DEG2RAD = Math.PI / 180,\n\t    _RAD2DEG = 180 / Math.PI,\n\t    _sin = Math.sin,\n\t    _cos = Math.cos,\n\t    _abs = Math.abs,\n\t    _sqrt = Math.sqrt,\n\t    _atan2 = Math.atan2,\n\t    _largeNum = 1e8,\n\t    _isString = function _isString(value) {\n\t  return typeof value === \"string\";\n\t},\n\t    _isNumber = function _isNumber(value) {\n\t  return typeof value === \"number\";\n\t},\n\t    _isUndefined = function _isUndefined(value) {\n\t  return typeof value === \"undefined\";\n\t},\n\t    _temp = {},\n\t    _temp2 = {},\n\t    _roundingNum = 1e5,\n\t    _wrapProgress = function _wrapProgress(progress) {\n\t  return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n\t},\n\t    _round = function _round(value) {\n\t  return Math.round(value * _roundingNum) / _roundingNum || 0;\n\t},\n\t    _roundPrecise = function _roundPrecise(value) {\n\t  return Math.round(value * 1e10) / 1e10 || 0;\n\t},\n\t    _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n\t  var segment = rawPath[segIndex],\n\t      shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\n\t  if (shift && shift + i + 2 < segment.length) {\n\t    rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n\t    segment.splice(0, i + shift);\n\t    return 1;\n\t  }\n\t},\n\t    _getSampleIndex = function _getSampleIndex(samples, length, progress) {\n\t  var l = samples.length,\n\t      i = ~~(progress * l);\n\n\t  if (samples[i] > length) {\n\t    while (--i && samples[i] > length) {}\n\t  } else {\n\t    while (samples[++i] < length && i < l) {}\n\t  }\n\n\t  return i < l ? i : l - 1;\n\t},\n\t    _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n\t  var i = rawPath.length;\n\t  skipOuter || rawPath.reverse();\n\n\t  while (i--) {\n\t    rawPath[i].reversed || reverseSegment(rawPath[i]);\n\t  }\n\t},\n\t    _copyMetaData = function _copyMetaData(source, copy) {\n\t  copy.totalLength = source.totalLength;\n\n\t  if (source.samples) {\n\t    copy.samples = source.samples.slice(0);\n\t    copy.lookup = source.lookup.slice(0);\n\t    copy.minLength = source.minLength;\n\t    copy.resolution = source.resolution;\n\t  } else if (source.totalPoints) {\n\t    copy.totalPoints = source.totalPoints;\n\t  }\n\n\t  return copy;\n\t},\n\t    _appendOrMerge = function _appendOrMerge(rawPath, segment) {\n\t  var index = rawPath.length,\n\t      prevSeg = rawPath[index - 1] || [],\n\t      l = prevSeg.length;\n\n\t  if (index && segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n\t    segment = prevSeg.concat(segment.slice(2));\n\t    index--;\n\t  }\n\n\t  rawPath[index] = segment;\n\t};\n\n\tfunction getRawPath(value) {\n\t  value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n\t  var e = value.getAttribute ? value : 0,\n\t      rawPath;\n\n\t  if (e && (value = value.getAttribute(\"d\"))) {\n\t    if (!e._gsPath) {\n\t      e._gsPath = {};\n\t    }\n\n\t    rawPath = e._gsPath[value];\n\t    return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n\t  }\n\n\t  return !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [value] : value;\n\t}\n\tfunction copyRawPath(rawPath) {\n\t  var a = [],\n\t      i = 0;\n\n\t  for (; i < rawPath.length; i++) {\n\t    a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n\t  }\n\n\t  return _copyMetaData(rawPath, a);\n\t}\n\tfunction reverseSegment(segment) {\n\t  var i = 0,\n\t      y;\n\t  segment.reverse();\n\n\t  for (; i < segment.length; i += 2) {\n\t    y = segment[i];\n\t    segment[i] = segment[i + 1];\n\t    segment[i + 1] = y;\n\t  }\n\n\t  segment.reversed = !segment.reversed;\n\t}\n\n\tvar _createPath = function _createPath(e, ignore) {\n\t  var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t      attr = [].slice.call(e.attributes),\n\t      i = attr.length,\n\t      name;\n\t  ignore = \",\" + ignore + \",\";\n\n\t  while (--i > -1) {\n\t    name = attr[i].nodeName.toLowerCase();\n\n\t    if (ignore.indexOf(\",\" + name + \",\") < 0) {\n\t      path.setAttributeNS(null, name, attr[i].nodeValue);\n\t    }\n\t  }\n\n\t  return path;\n\t},\n\t    _typeAttrs = {\n\t  rect: \"rx,ry,x,y,width,height\",\n\t  circle: \"r,cx,cy\",\n\t  ellipse: \"rx,ry,cx,cy\",\n\t  line: \"x1,x2,y1,y2\"\n\t},\n\t    _attrToObj = function _attrToObj(e, attrs) {\n\t  var props = attrs ? attrs.split(\",\") : [],\n\t      obj = {},\n\t      i = props.length;\n\n\t  while (--i > -1) {\n\t    obj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t  }\n\n\t  return obj;\n\t};\n\n\tfunction convertToPath(element, swap) {\n\t  var type = element.tagName.toLowerCase(),\n\t      circ = 0.552284749831,\n\t      data,\n\t      x,\n\t      y,\n\t      r,\n\t      ry,\n\t      path,\n\t      rcirc,\n\t      rycirc,\n\t      points,\n\t      w,\n\t      h,\n\t      x2,\n\t      x3,\n\t      x4,\n\t      x5,\n\t      x6,\n\t      y2,\n\t      y3,\n\t      y4,\n\t      y5,\n\t      y6,\n\t      attr;\n\n\t  if (type === \"path\" || !element.getBBox) {\n\t    return element;\n\t  }\n\n\t  path = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\t  attr = _attrToObj(element, _typeAttrs[type]);\n\n\t  if (type === \"rect\") {\n\t    r = attr.rx;\n\t    ry = attr.ry || r;\n\t    x = attr.x;\n\t    y = attr.y;\n\t    w = attr.width - r * 2;\n\t    h = attr.height - ry * 2;\n\n\t    if (r || ry) {\n\t      x2 = x + r * (1 - circ);\n\t      x3 = x + r;\n\t      x4 = x3 + w;\n\t      x5 = x4 + r * circ;\n\t      x6 = x4 + r;\n\t      y2 = y + ry * (1 - circ);\n\t      y3 = y + ry;\n\t      y4 = y3 + h;\n\t      y5 = y4 + ry * circ;\n\t      y6 = y4 + ry;\n\t      data = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t    } else {\n\t      data = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + -w + \" v\" + -h + \" h\" + w + \"z\";\n\t    }\n\t  } else if (type === \"circle\" || type === \"ellipse\") {\n\t    if (type === \"circle\") {\n\t      r = ry = attr.r;\n\t      rycirc = r * circ;\n\t    } else {\n\t      r = attr.rx;\n\t      ry = attr.ry;\n\t      rycirc = ry * circ;\n\t    }\n\n\t    x = attr.cx;\n\t    y = attr.cy;\n\t    rcirc = r * circ;\n\t    data = \"M\" + (x + r) + \",\" + y + \" C\" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t  } else if (type === \"line\") {\n\t    data = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2;\n\t  } else if (type === \"polyline\" || type === \"polygon\") {\n\t    points = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t    x = points.shift();\n\t    y = points.shift();\n\t    data = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\n\t    if (type === \"polygon\") {\n\t      data += \",\" + x + \",\" + y + \"z\";\n\t    }\n\t  }\n\n\t  path.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\n\t  if (swap && element.parentNode) {\n\t    element.parentNode.insertBefore(path, element);\n\t    element.parentNode.removeChild(element);\n\t  }\n\n\t  return path;\n\t}\n\n\tfunction getRotationAtBezierT(segment, i, t) {\n\t  var a = segment[i],\n\t      b = segment[i + 2],\n\t      c = segment[i + 4],\n\t      x;\n\t  a += (b - a) * t;\n\t  b += (c - b) * t;\n\t  a += (b - a) * t;\n\t  x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n\t  a = segment[i + 1];\n\t  b = segment[i + 3];\n\t  c = segment[i + 5];\n\t  a += (b - a) * t;\n\t  b += (c - b) * t;\n\t  a += (b - a) * t;\n\t  return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n\t}\n\n\tfunction sliceRawPath(rawPath, start, end) {\n\t  end = _isUndefined(end) ? 1 : _roundPrecise(end) || 0;\n\t  start = _roundPrecise(start) || 0;\n\t  var loops = Math.max(0, ~~(_abs(end - start) - 1e-8)),\n\t      path = copyRawPath(rawPath);\n\n\t  if (start > end) {\n\t    start = 1 - start;\n\t    end = 1 - end;\n\n\t    _reverseRawPath(path);\n\n\t    path.totalLength = 0;\n\t  }\n\n\t  if (start < 0 || end < 0) {\n\t    var offset = Math.abs(~~Math.min(start, end)) + 1;\n\t    start += offset;\n\t    end += offset;\n\t  }\n\n\t  path.totalLength || cacheRawPathMeasurements(path);\n\t  var wrap = end > 1,\n\t      s = getProgressData(path, start, _temp, true),\n\t      e = getProgressData(path, end, _temp2),\n\t      eSeg = e.segment,\n\t      sSeg = s.segment,\n\t      eSegIndex = e.segIndex,\n\t      sSegIndex = s.segIndex,\n\t      ei = e.i,\n\t      si = s.i,\n\t      sameSegment = sSegIndex === eSegIndex,\n\t      sameBezier = ei === si && sameSegment,\n\t      wrapsBehind,\n\t      sShift,\n\t      eShift,\n\t      i,\n\t      copy,\n\t      totalSegments,\n\t      l,\n\t      j;\n\n\t  if (wrap || loops) {\n\t    wrapsBehind = eSegIndex < sSegIndex || sameSegment && ei < si || sameBezier && e.t < s.t;\n\n\t    if (_splitSegment(path, sSegIndex, si, s.t)) {\n\t      sSegIndex++;\n\n\t      if (!wrapsBehind) {\n\t        eSegIndex++;\n\n\t        if (sameBezier) {\n\t          e.t = (e.t - s.t) / (1 - s.t);\n\t          ei = 0;\n\t        } else if (sameSegment) {\n\t          ei -= si;\n\t        }\n\t      }\n\t    }\n\n\t    if (1 - (end - start) < 1e-5) {\n\t      eSegIndex = sSegIndex - 1;\n\t    } else if (!e.t && eSegIndex) {\n\t      eSegIndex--;\n\t    } else if (_splitSegment(path, eSegIndex, ei, e.t) && wrapsBehind) {\n\t      sSegIndex++;\n\t    }\n\n\t    if (s.t === 1) {\n\t      sSegIndex = (sSegIndex + 1) % path.length;\n\t    }\n\n\t    copy = [];\n\t    totalSegments = path.length;\n\t    l = 1 + totalSegments * loops;\n\t    j = sSegIndex;\n\t    l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n\n\t    for (i = 0; i < l; i++) {\n\t      _appendOrMerge(copy, path[j++ % totalSegments]);\n\t    }\n\n\t    path = copy;\n\t  } else {\n\t    eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\n\t    if (start !== end) {\n\t      sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\t      sameSegment && (eShift += sShift);\n\t      eSeg.splice(ei + eShift + 2);\n\t      (sShift || si) && sSeg.splice(0, si + sShift);\n\t      i = path.length;\n\n\t      while (i--) {\n\t        (i < sSegIndex || i > eSegIndex) && path.splice(i, 1);\n\t      }\n\t    } else {\n\t      eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0);\n\t      ei += eShift;\n\t      s = eSeg[ei];\n\t      e = eSeg[ei + 1];\n\t      eSeg.length = eSeg.totalLength = 0;\n\t      eSeg.totalPoints = path.totalPoints = 8;\n\t      eSeg.push(s, e, s, e, s, e, s, e);\n\t    }\n\t  }\n\n\t  path.totalLength = 0;\n\t  return path;\n\t}\n\n\tfunction measureSegment(segment, startIndex, bezierQty) {\n\t  startIndex = startIndex || 0;\n\n\t  if (!segment.samples) {\n\t    segment.samples = [];\n\t    segment.lookup = [];\n\t  }\n\n\t  var resolution = ~~segment.resolution || 12,\n\t      inc = 1 / resolution,\n\t      endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n\t      x1 = segment[startIndex],\n\t      y1 = segment[startIndex + 1],\n\t      samplesIndex = startIndex ? startIndex / 6 * resolution : 0,\n\t      samples = segment.samples,\n\t      lookup = segment.lookup,\n\t      min = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n\t      prevLength = samples[samplesIndex + bezierQty * resolution - 1],\n\t      length = startIndex ? samples[samplesIndex - 1] : 0,\n\t      i,\n\t      j,\n\t      x4,\n\t      x3,\n\t      x2,\n\t      xd,\n\t      xd1,\n\t      y4,\n\t      y3,\n\t      y2,\n\t      yd,\n\t      yd1,\n\t      inv,\n\t      t,\n\t      lengthIndex,\n\t      l,\n\t      segLength;\n\t  samples.length = lookup.length = 0;\n\n\t  for (j = startIndex + 2; j < endIndex; j += 6) {\n\t    x4 = segment[j + 4] - x1;\n\t    x3 = segment[j + 2] - x1;\n\t    x2 = segment[j] - x1;\n\t    y4 = segment[j + 5] - y1;\n\t    y3 = segment[j + 3] - y1;\n\t    y2 = segment[j + 1] - y1;\n\t    xd = xd1 = yd = yd1 = 0;\n\n\t    if (_abs(x4) < .01 && _abs(y4) < .01 && _abs(x2) + _abs(y2) < .01) {\n\t      if (segment.length > 8) {\n\t        segment.splice(j, 6);\n\t        j -= 6;\n\t        endIndex -= 6;\n\t      }\n\t    } else {\n\t      for (i = 1; i <= resolution; i++) {\n\t        t = inc * i;\n\t        inv = 1 - t;\n\t        xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n\t        yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n\t        l = _sqrt(yd * yd + xd * xd);\n\n\t        if (l < min) {\n\t          min = l;\n\t        }\n\n\t        length += l;\n\t        samples[samplesIndex++] = length;\n\t      }\n\t    }\n\n\t    x1 += x4;\n\t    y1 += y4;\n\t  }\n\n\t  if (prevLength) {\n\t    prevLength -= length;\n\n\t    for (; samplesIndex < samples.length; samplesIndex++) {\n\t      samples[samplesIndex] += prevLength;\n\t    }\n\t  }\n\n\t  if (samples.length && min) {\n\t    segment.totalLength = segLength = samples[samples.length - 1] || 0;\n\t    segment.minLength = min;\n\n\t    if (segLength / min < 9999) {\n\t      l = lengthIndex = 0;\n\n\t      for (i = 0; i < segLength; i += min) {\n\t        lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n\t      }\n\t    }\n\t  } else {\n\t    segment.totalLength = samples[0] = 0;\n\t  }\n\n\t  return startIndex ? length - samples[startIndex / 2 - 1] : length;\n\t}\n\n\tfunction cacheRawPathMeasurements(rawPath, resolution) {\n\t  var pathLength, points, i;\n\n\t  for (i = pathLength = points = 0; i < rawPath.length; i++) {\n\t    rawPath[i].resolution = ~~resolution || 12;\n\t    points += rawPath[i].length;\n\t    pathLength += measureSegment(rawPath[i]);\n\t  }\n\n\t  rawPath.totalPoints = points;\n\t  rawPath.totalLength = pathLength;\n\t  return rawPath;\n\t}\n\tfunction subdivideSegment(segment, i, t) {\n\t  if (t <= 0 || t >= 1) {\n\t    return 0;\n\t  }\n\n\t  var ax = segment[i],\n\t      ay = segment[i + 1],\n\t      cp1x = segment[i + 2],\n\t      cp1y = segment[i + 3],\n\t      cp2x = segment[i + 4],\n\t      cp2y = segment[i + 5],\n\t      bx = segment[i + 6],\n\t      by = segment[i + 7],\n\t      x1a = ax + (cp1x - ax) * t,\n\t      x2 = cp1x + (cp2x - cp1x) * t,\n\t      y1a = ay + (cp1y - ay) * t,\n\t      y2 = cp1y + (cp2y - cp1y) * t,\n\t      x1 = x1a + (x2 - x1a) * t,\n\t      y1 = y1a + (y2 - y1a) * t,\n\t      x2a = cp2x + (bx - cp2x) * t,\n\t      y2a = cp2y + (by - cp2y) * t;\n\t  x2 += (x2a - x2) * t;\n\t  y2 += (y2a - y2) * t;\n\t  segment.splice(i + 2, 4, _round(x1a), _round(y1a), _round(x1), _round(y1), _round(x1 + (x2 - x1) * t), _round(y1 + (y2 - y1) * t), _round(x2), _round(y2), _round(x2a), _round(y2a));\n\t  segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n\t  return 6;\n\t}\n\n\tfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n\t  decoratee = decoratee || {};\n\t  rawPath.totalLength || cacheRawPathMeasurements(rawPath);\n\n\t  if (progress < 0 || progress > 1) {\n\t    progress = _wrapProgress(progress);\n\t  }\n\n\t  var segIndex = 0,\n\t      segment = rawPath[0],\n\t      samples,\n\t      resolution,\n\t      length,\n\t      min,\n\t      max,\n\t      i,\n\t      t;\n\n\t  if (!progress) {\n\t    t = i = segIndex = 0;\n\t    segment = rawPath[0];\n\t  } else if (progress === 1) {\n\t    t = 1;\n\t    segIndex = rawPath.length - 1;\n\t    segment = rawPath[segIndex];\n\t    i = segment.length - 8;\n\t  } else {\n\t    if (rawPath.length > 1) {\n\t      length = rawPath.totalLength * progress;\n\t      max = i = 0;\n\n\t      while ((max += rawPath[i++].totalLength) < length) {\n\t        segIndex = i;\n\t      }\n\n\t      segment = rawPath[segIndex];\n\t      min = max - segment.totalLength;\n\t      progress = (length - min) / (max - min) || 0;\n\t    }\n\n\t    samples = segment.samples;\n\t    resolution = segment.resolution;\n\t    length = segment.totalLength * progress;\n\t    i = segment.lookup.length ? segment.lookup[~~(length / segment.minLength)] || 0 : _getSampleIndex(samples, length, progress);\n\t    min = i ? samples[i - 1] : 0;\n\t    max = samples[i];\n\n\t    if (max < length) {\n\t      min = max;\n\t      max = samples[++i];\n\t    }\n\n\t    t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n\t    i = ~~(i / resolution) * 6;\n\n\t    if (pushToNextIfAtEnd && t === 1) {\n\t      if (i + 6 < segment.length) {\n\t        i += 6;\n\t        t = 0;\n\t      } else if (segIndex + 1 < rawPath.length) {\n\t        i = t = 0;\n\t        segment = rawPath[++segIndex];\n\t      }\n\t    }\n\t  }\n\n\t  decoratee.t = t;\n\t  decoratee.i = i;\n\t  decoratee.path = rawPath;\n\t  decoratee.segment = segment;\n\t  decoratee.segIndex = segIndex;\n\t  return decoratee;\n\t}\n\n\tfunction getPositionOnPath(rawPath, progress, includeAngle, point) {\n\t  var segment = rawPath[0],\n\t      result = point || {},\n\t      samples,\n\t      resolution,\n\t      length,\n\t      min,\n\t      max,\n\t      i,\n\t      t,\n\t      a,\n\t      inv;\n\n\t  if (progress < 0 || progress > 1) {\n\t    progress = _wrapProgress(progress);\n\t  }\n\n\t  if (rawPath.length > 1) {\n\t    length = rawPath.totalLength * progress;\n\t    max = i = 0;\n\n\t    while ((max += rawPath[i++].totalLength) < length) {\n\t      segment = rawPath[i];\n\t    }\n\n\t    min = max - segment.totalLength;\n\t    progress = (length - min) / (max - min) || 0;\n\t  }\n\n\t  samples = segment.samples;\n\t  resolution = segment.resolution;\n\t  length = segment.totalLength * progress;\n\t  i = segment.lookup.length ? segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0 : _getSampleIndex(samples, length, progress);\n\t  min = i ? samples[i - 1] : 0;\n\t  max = samples[i];\n\n\t  if (max < length) {\n\t    min = max;\n\t    max = samples[++i];\n\t  }\n\n\t  t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n\t  inv = 1 - t;\n\t  i = ~~(i / resolution) * 6;\n\t  a = segment[i];\n\t  result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n\t  result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\n\t  if (includeAngle) {\n\t    result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n\t  }\n\n\t  return result;\n\t}\n\tfunction transformRawPath(rawPath, a, b, c, d, tx, ty) {\n\t  var j = rawPath.length,\n\t      segment,\n\t      l,\n\t      i,\n\t      x,\n\t      y;\n\n\t  while (--j > -1) {\n\t    segment = rawPath[j];\n\t    l = segment.length;\n\n\t    for (i = 0; i < l; i += 2) {\n\t      x = segment[i];\n\t      y = segment[i + 1];\n\t      segment[i] = x * a + y * c + tx;\n\t      segment[i + 1] = x * b + y * d + ty;\n\t    }\n\t  }\n\n\t  rawPath._dirty = 1;\n\t  return rawPath;\n\t}\n\n\tfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\t  if (lastX === x && lastY === y) {\n\t    return;\n\t  }\n\n\t  rx = _abs(rx);\n\t  ry = _abs(ry);\n\n\t  var angleRad = angle % 360 * _DEG2RAD,\n\t      cosAngle = _cos(angleRad),\n\t      sinAngle = _sin(angleRad),\n\t      PI = Math.PI,\n\t      TWOPI = PI * 2,\n\t      dx2 = (lastX - x) / 2,\n\t      dy2 = (lastY - y) / 2,\n\t      x1 = cosAngle * dx2 + sinAngle * dy2,\n\t      y1 = -sinAngle * dx2 + cosAngle * dy2,\n\t      x1_sq = x1 * x1,\n\t      y1_sq = y1 * y1,\n\t      radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\n\t  if (radiiCheck > 1) {\n\t    rx = _sqrt(radiiCheck) * rx;\n\t    ry = _sqrt(radiiCheck) * ry;\n\t  }\n\n\t  var rx_sq = rx * rx,\n\t      ry_sq = ry * ry,\n\t      sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n\n\t  if (sq < 0) {\n\t    sq = 0;\n\t  }\n\n\t  var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq),\n\t      cx1 = coef * (rx * y1 / ry),\n\t      cy1 = coef * -(ry * x1 / rx),\n\t      sx2 = (lastX + x) / 2,\n\t      sy2 = (lastY + y) / 2,\n\t      cx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t      cy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t      ux = (x1 - cx1) / rx,\n\t      uy = (y1 - cy1) / ry,\n\t      vx = (-x1 - cx1) / rx,\n\t      vy = (-y1 - cy1) / ry,\n\t      temp = ux * ux + uy * uy,\n\t      angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t      angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\n\t  isNaN(angleExtent) && (angleExtent = PI);\n\n\t  if (!sweepFlag && angleExtent > 0) {\n\t    angleExtent -= TWOPI;\n\t  } else if (sweepFlag && angleExtent < 0) {\n\t    angleExtent += TWOPI;\n\t  }\n\n\t  angleStart %= TWOPI;\n\t  angleExtent %= TWOPI;\n\n\t  var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n\t      rawPath = [],\n\t      angleIncrement = angleExtent / segments,\n\t      controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t      ma = cosAngle * rx,\n\t      mb = sinAngle * rx,\n\t      mc = sinAngle * -ry,\n\t      md = cosAngle * ry,\n\t      i;\n\n\t  for (i = 0; i < segments; i++) {\n\t    angle = angleStart + i * angleIncrement;\n\t    x1 = _cos(angle);\n\t    y1 = _sin(angle);\n\t    ux = _cos(angle += angleIncrement);\n\t    uy = _sin(angle);\n\t    rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t  }\n\n\t  for (i = 0; i < rawPath.length; i += 2) {\n\t    x1 = rawPath[i];\n\t    y1 = rawPath[i + 1];\n\t    rawPath[i] = x1 * ma + y1 * mc + cx;\n\t    rawPath[i + 1] = x1 * mb + y1 * md + cy;\n\t  }\n\n\t  rawPath[i - 2] = x;\n\t  rawPath[i - 1] = y;\n\t  return rawPath;\n\t}\n\n\tfunction stringToRawPath(d) {\n\t  var a = (d + \"\").replace(_scientific, function (m) {\n\t    var n = +m;\n\t    return n < 0.0001 && n > -0.0001 ? 0 : n;\n\t  }).match(_svgPathExp) || [],\n\t      path = [],\n\t      relativeX = 0,\n\t      relativeY = 0,\n\t      twoThirds = 2 / 3,\n\t      elements = a.length,\n\t      points = 0,\n\t      errorMessage = \"ERROR: malformed path: \" + d,\n\t      i,\n\t      j,\n\t      x,\n\t      y,\n\t      command,\n\t      isRelative,\n\t      segment,\n\t      startX,\n\t      startY,\n\t      difX,\n\t      difY,\n\t      beziers,\n\t      prevCommand,\n\t      flag1,\n\t      flag2,\n\t      line = function line(sx, sy, ex, ey) {\n\t    difX = (ex - sx) / 3;\n\t    difY = (ey - sy) / 3;\n\t    segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t  };\n\n\t  if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t    console.log(errorMessage);\n\t    return path;\n\t  }\n\n\t  for (i = 0; i < elements; i++) {\n\t    prevCommand = command;\n\n\t    if (isNaN(a[i])) {\n\t      command = a[i].toUpperCase();\n\t      isRelative = command !== a[i];\n\t    } else {\n\t      i--;\n\t    }\n\n\t    x = +a[i + 1];\n\t    y = +a[i + 2];\n\n\t    if (isRelative) {\n\t      x += relativeX;\n\t      y += relativeY;\n\t    }\n\n\t    if (!i) {\n\t      startX = x;\n\t      startY = y;\n\t    }\n\n\t    if (command === \"M\") {\n\t      if (segment) {\n\t        if (segment.length < 8) {\n\t          path.length -= 1;\n\t        } else {\n\t          points += segment.length;\n\t        }\n\t      }\n\n\t      relativeX = startX = x;\n\t      relativeY = startY = y;\n\t      segment = [x, y];\n\t      path.push(segment);\n\t      i += 2;\n\t      command = \"L\";\n\t    } else if (command === \"C\") {\n\t      if (!segment) {\n\t        segment = [0, 0];\n\t      }\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n\t      i += 6;\n\t    } else if (command === \"S\") {\n\t      difX = relativeX;\n\t      difY = relativeY;\n\n\t      if (prevCommand === \"C\" || prevCommand === \"S\") {\n\t        difX += relativeX - segment[segment.length - 4];\n\t        difY += relativeY - segment[segment.length - 3];\n\t      }\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n\t      i += 4;\n\t    } else if (command === \"Q\") {\n\t      difX = relativeX + (x - relativeX) * twoThirds;\n\t      difY = relativeY + (y - relativeY) * twoThirds;\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      relativeX += a[i + 3] * 1;\n\t      relativeY += a[i + 4] * 1;\n\t      segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t      i += 4;\n\t    } else if (command === \"T\") {\n\t      difX = relativeX - segment[segment.length - 4];\n\t      difY = relativeY - segment[segment.length - 3];\n\t      segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n\t      i += 2;\n\t    } else if (command === \"H\") {\n\t      line(relativeX, relativeY, relativeX = x, relativeY);\n\t      i += 1;\n\t    } else if (command === \"V\") {\n\t      line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n\t      i += 1;\n\t    } else if (command === \"L\" || command === \"Z\") {\n\t      if (command === \"Z\") {\n\t        x = startX;\n\t        y = startY;\n\t        segment.closed = true;\n\t      }\n\n\t      if (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n\t        line(relativeX, relativeY, x, y);\n\n\t        if (command === \"L\") {\n\t          i += 2;\n\t        }\n\t      }\n\n\t      relativeX = x;\n\t      relativeY = y;\n\t    } else if (command === \"A\") {\n\t      flag1 = a[i + 4];\n\t      flag2 = a[i + 5];\n\t      difX = a[i + 6];\n\t      difY = a[i + 7];\n\t      j = 7;\n\n\t      if (flag1.length > 1) {\n\t        if (flag1.length < 3) {\n\t          difY = difX;\n\t          difX = flag2;\n\t          j--;\n\t        } else {\n\t          difY = flag2;\n\t          difX = flag1.substr(2);\n\t          j -= 2;\n\t        }\n\n\t        flag2 = flag1.charAt(1);\n\t        flag1 = flag1.charAt(0);\n\t      }\n\n\t      beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n\t      i += j;\n\n\t      if (beziers) {\n\t        for (j = 0; j < beziers.length; j++) {\n\t          segment.push(beziers[j]);\n\t        }\n\t      }\n\n\t      relativeX = segment[segment.length - 2];\n\t      relativeY = segment[segment.length - 1];\n\t    } else {\n\t      console.log(errorMessage);\n\t    }\n\t  }\n\n\t  i = segment.length;\n\n\t  if (i < 6) {\n\t    path.pop();\n\t    i = 0;\n\t  } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n\t    segment.closed = true;\n\t  }\n\n\t  path.totalPoints = points + i;\n\t  return path;\n\t}\n\tfunction flatPointsToSegment(points, curviness) {\n\t  if (curviness === void 0) {\n\t    curviness = 1;\n\t  }\n\n\t  var x = points[0],\n\t      y = 0,\n\t      segment = [x, y],\n\t      i = 2;\n\n\t  for (; i < points.length; i += 2) {\n\t    segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n\t  }\n\n\t  return segment;\n\t}\n\tfunction pointsToSegment(points, curviness, cornerThreshold) {\n\t  _abs(points[0] - points[2]) < 1e-4 && _abs(points[1] - points[3]) < 1e-4 && (points = points.slice(2));\n\t  var l = points.length - 2,\n\t      x = +points[0],\n\t      y = +points[1],\n\t      nextX = +points[2],\n\t      nextY = +points[3],\n\t      segment = [x, y, x, y],\n\t      dx2 = nextX - x,\n\t      dy2 = nextY - y,\n\t      closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001,\n\t      prevX,\n\t      prevY,\n\t      angle,\n\t      slope,\n\t      i,\n\t      dx1,\n\t      dx3,\n\t      dy1,\n\t      dy3,\n\t      d1,\n\t      d2,\n\t      a,\n\t      b,\n\t      c;\n\n\t  if (isNaN(cornerThreshold)) {\n\t    cornerThreshold = Math.PI / 10;\n\t  }\n\n\t  if (closed) {\n\t    points.push(nextX, nextY);\n\t    nextX = x;\n\t    nextY = y;\n\t    x = points[l - 2];\n\t    y = points[l - 1];\n\t    points.unshift(x, y);\n\t    l += 4;\n\t  }\n\n\t  curviness = curviness || curviness === 0 ? +curviness : 1;\n\n\t  for (i = 2; i < l; i += 2) {\n\t    prevX = x;\n\t    prevY = y;\n\t    x = nextX;\n\t    y = nextY;\n\t    nextX = +points[i + 2];\n\t    nextY = +points[i + 3];\n\n\t    if (x === nextX && y === nextY) {\n\t      continue;\n\t    }\n\n\t    dx1 = dx2;\n\t    dy1 = dy2;\n\t    dx2 = nextX - x;\n\t    dy2 = nextY - y;\n\t    dx3 = nextX - prevX;\n\t    dy3 = nextY - prevY;\n\t    a = dx1 * dx1 + dy1 * dy1;\n\t    b = dx2 * dx2 + dy2 * dy2;\n\t    c = dx3 * dx3 + dy3 * dy3;\n\t    angle = Math.acos((a + b - c) / _sqrt(4 * a * b));\n\t    d2 = angle / Math.PI * curviness;\n\t    d1 = _sqrt(a) * d2;\n\t    d2 *= _sqrt(b);\n\n\t    if (x !== prevX || y !== prevY) {\n\t      if (angle > cornerThreshold) {\n\t        slope = _atan2(dy3, dx3);\n\t        segment.push(_round(x - _cos(slope) * d1), _round(y - _sin(slope) * d1), _round(x), _round(y), _round(x + _cos(slope) * d2), _round(y + _sin(slope) * d2));\n\t      } else {\n\t        slope = _atan2(dy1, dx1);\n\t        segment.push(_round(x - _cos(slope) * d1), _round(y - _sin(slope) * d1));\n\t        slope = _atan2(dy2, dx2);\n\t        segment.push(_round(x), _round(y), _round(x + _cos(slope) * d2), _round(y + _sin(slope) * d2));\n\t      }\n\t    }\n\t  }\n\n\t  x !== nextX || y !== nextY || segment.length < 4 ? segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY)) : segment.length -= 2;\n\n\t  if (closed) {\n\t    segment.splice(0, 6);\n\t    segment.length = segment.length - 6;\n\t  }\n\n\t  return segment;\n\t}\n\tfunction rawPathToString(rawPath) {\n\t  if (_isNumber(rawPath[0])) {\n\t    rawPath = [rawPath];\n\t  }\n\n\t  var result = \"\",\n\t      l = rawPath.length,\n\t      sl,\n\t      s,\n\t      i,\n\t      segment;\n\n\t  for (s = 0; s < l; s++) {\n\t    segment = rawPath[s];\n\t    result += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n\t    sl = segment.length;\n\n\t    for (i = 2; i < sl; i++) {\n\t      result += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n\t    }\n\n\t    if (segment.closed) {\n\t      result += \"z\";\n\t    }\n\t  }\n\n\t  return result;\n\t}\n\n\tvar _doc,\n\t    _win,\n\t    _docElement,\n\t    _body,\n\t    _divContainer,\n\t    _svgContainer,\n\t    _identityMatrix,\n\t    _gEl,\n\t    _transformProp = \"transform\",\n\t    _transformOriginProp = _transformProp + \"Origin\",\n\t    _hasOffsetBug,\n\t    _setDoc = function _setDoc(element) {\n\t  var doc = element.ownerDocument || element;\n\n\t  if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n\t    _transformProp = \"msTransform\";\n\t    _transformOriginProp = _transformProp + \"Origin\";\n\t  }\n\n\t  while (doc.parentNode && (doc = doc.parentNode)) {}\n\n\t  _win = window;\n\t  _identityMatrix = new Matrix2D();\n\n\t  if (doc) {\n\t    _doc = doc;\n\t    _docElement = doc.documentElement;\n\t    _body = doc.body;\n\t    _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    _gEl.style.transform = \"none\";\n\t    var d1 = doc.createElement(\"div\"),\n\t        d2 = doc.createElement(\"div\");\n\n\t    _body.appendChild(d1);\n\n\t    d1.appendChild(d2);\n\t    d1.style.position = \"static\";\n\t    d1.style[_transformProp] = \"translate3d(0,0,1px)\";\n\t    _hasOffsetBug = d2.offsetParent !== d1;\n\n\t    _body.removeChild(d1);\n\t  }\n\n\t  return doc;\n\t},\n\t    _forceNonZeroScale = function _forceNonZeroScale(e) {\n\t  var a, cache;\n\n\t  while (e && e !== _body) {\n\t    cache = e._gsap;\n\t    cache && cache.uncache && cache.get(e, \"x\");\n\n\t    if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n\t      cache.scaleX = cache.scaleY = 1e-4;\n\t      cache.renderTransform(1, cache);\n\t      a ? a.push(cache) : a = [cache];\n\t    }\n\n\t    e = e.parentNode;\n\t  }\n\n\t  return a;\n\t},\n\t    _svgTemps = [],\n\t    _divTemps = [],\n\t    _getDocScrollTop = function _getDocScrollTop() {\n\t  return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n\t},\n\t    _getDocScrollLeft = function _getDocScrollLeft() {\n\t  return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n\t},\n\t    _svgOwner = function _svgOwner(element) {\n\t  return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n\t},\n\t    _isFixed = function _isFixed(element) {\n\t  if (_win.getComputedStyle(element).position === \"fixed\") {\n\t    return true;\n\t  }\n\n\t  element = element.parentNode;\n\n\t  if (element && element.nodeType === 1) {\n\t    return _isFixed(element);\n\t  }\n\t},\n\t    _createSibling = function _createSibling(element, i) {\n\t  if (element.parentNode && (_doc || _setDoc(element))) {\n\t    var svg = _svgOwner(element),\n\t        ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\",\n\t        type = svg ? i ? \"rect\" : \"g\" : \"div\",\n\t        x = i !== 2 ? 0 : 100,\n\t        y = i === 3 ? 100 : 0,\n\t        css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\",\n\t        e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\n\t    if (i) {\n\t      if (!svg) {\n\t        if (!_divContainer) {\n\t          _divContainer = _createSibling(element);\n\t          _divContainer.style.cssText = css;\n\t        }\n\n\t        e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\n\t        _divContainer.appendChild(e);\n\t      } else {\n\t        _svgContainer || (_svgContainer = _createSibling(element));\n\t        e.setAttribute(\"width\", 0.01);\n\t        e.setAttribute(\"height\", 0.01);\n\t        e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n\t        _svgContainer.appendChild(e);\n\t      }\n\t    }\n\n\t    return e;\n\t  }\n\n\t  throw \"Need document and parent.\";\n\t},\n\t    _consolidate = function _consolidate(m) {\n\t  var c = new Matrix2D(),\n\t      i = 0;\n\n\t  for (; i < m.numberOfItems; i++) {\n\t    c.multiply(m.getItem(i).matrix);\n\t  }\n\n\t  return c;\n\t},\n\t    _getCTM = function _getCTM(svg) {\n\t  var m = svg.getCTM(),\n\t      transform;\n\n\t  if (!m) {\n\t    transform = svg.style[_transformProp];\n\t    svg.style[_transformProp] = \"none\";\n\t    svg.appendChild(_gEl);\n\t    m = _gEl.getCTM();\n\t    svg.removeChild(_gEl);\n\t    transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n\t  }\n\n\t  return m || _identityMatrix.clone();\n\t},\n\t    _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n\t  var svg = _svgOwner(element),\n\t      isRootSVG = element === svg,\n\t      siblings = svg ? _svgTemps : _divTemps,\n\t      parent = element.parentNode,\n\t      container,\n\t      m,\n\t      b,\n\t      x,\n\t      y,\n\t      cs;\n\n\t  if (element === _win) {\n\t    return element;\n\t  }\n\n\t  siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t  container = svg ? _svgContainer : _divContainer;\n\n\t  if (svg) {\n\t    if (isRootSVG) {\n\t      b = _getCTM(element);\n\t      x = -b.e / b.a;\n\t      y = -b.f / b.d;\n\t      m = _identityMatrix;\n\t    } else {\n\t      b = element.getBBox();\n\t      m = element.transform ? element.transform.baseVal : {};\n\t      m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;\n\t      x = m.a * b.x + m.c * b.y;\n\t      y = m.b * b.x + m.d * b.y;\n\t    }\n\n\t    if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n\t      x = y = 0;\n\t    }\n\n\t    (isRootSVG ? svg : parent).appendChild(container);\n\t    container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t  } else {\n\t    x = y = 0;\n\n\t    if (_hasOffsetBug) {\n\t      m = element.offsetParent;\n\t      b = element;\n\n\t      while (b && (b = b.parentNode) && b !== m && b.parentNode) {\n\t        if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n\t          x = b.offsetLeft;\n\t          y = b.offsetTop;\n\t          b = 0;\n\t        }\n\t      }\n\t    }\n\n\t    cs = _win.getComputedStyle(element);\n\n\t    if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n\t      m = element.offsetParent;\n\n\t      while (parent && parent !== m) {\n\t        x += parent.scrollLeft || 0;\n\t        y += parent.scrollTop || 0;\n\t        parent = parent.parentNode;\n\t      }\n\t    }\n\n\t    b = container.style;\n\t    b.top = element.offsetTop - y + \"px\";\n\t    b.left = element.offsetLeft - x + \"px\";\n\t    b[_transformProp] = cs[_transformProp];\n\t    b[_transformOriginProp] = cs[_transformOriginProp];\n\t    b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n\t    element.parentNode.appendChild(container);\n\t  }\n\n\t  return container;\n\t},\n\t    _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n\t  m.a = a;\n\t  m.b = b;\n\t  m.c = c;\n\t  m.d = d;\n\t  m.e = e;\n\t  m.f = f;\n\t  return m;\n\t};\n\n\tvar Matrix2D = function () {\n\t  function Matrix2D(a, b, c, d, e, f) {\n\t    if (a === void 0) {\n\t      a = 1;\n\t    }\n\n\t    if (b === void 0) {\n\t      b = 0;\n\t    }\n\n\t    if (c === void 0) {\n\t      c = 0;\n\t    }\n\n\t    if (d === void 0) {\n\t      d = 1;\n\t    }\n\n\t    if (e === void 0) {\n\t      e = 0;\n\t    }\n\n\t    if (f === void 0) {\n\t      f = 0;\n\t    }\n\n\t    _setMatrix(this, a, b, c, d, e, f);\n\t  }\n\n\t  var _proto = Matrix2D.prototype;\n\n\t  _proto.inverse = function inverse() {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        determinant = a * d - b * c || 1e-10;\n\t    return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n\t  };\n\n\t  _proto.multiply = function multiply(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        a2 = matrix.a,\n\t        b2 = matrix.c,\n\t        c2 = matrix.b,\n\t        d2 = matrix.d,\n\t        e2 = matrix.e,\n\t        f2 = matrix.f;\n\t    return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n\t  };\n\n\t  _proto.clone = function clone() {\n\t    return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n\t  };\n\n\t  _proto.equals = function equals(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n\t  };\n\n\t  _proto.apply = function apply(point, decoratee) {\n\t    if (decoratee === void 0) {\n\t      decoratee = {};\n\t    }\n\n\t    var x = point.x,\n\t        y = point.y,\n\t        a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    decoratee.x = x * a + y * c + e || 0;\n\t    decoratee.y = x * b + y * d + f || 0;\n\t    return decoratee;\n\t  };\n\n\t  return Matrix2D;\n\t}();\n\tfunction getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n\t  if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n\t    return new Matrix2D();\n\t  }\n\n\t  var zeroScales = _forceNonZeroScale(element),\n\t      svg = _svgOwner(element),\n\t      temps = svg ? _svgTemps : _divTemps,\n\t      container = _placeSiblings(element, adjustGOffset),\n\t      b1 = temps[0].getBoundingClientRect(),\n\t      b2 = temps[1].getBoundingClientRect(),\n\t      b3 = temps[2].getBoundingClientRect(),\n\t      parent = container.parentNode,\n\t      isFixed = !includeScrollInFixed && _isFixed(element),\n\t      m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n\n\t  parent.removeChild(container);\n\n\t  if (zeroScales) {\n\t    b1 = zeroScales.length;\n\n\t    while (b1--) {\n\t      b2 = zeroScales[b1];\n\t      b2.scaleX = b2.scaleY = 0;\n\t      b2.renderTransform(1, b2);\n\t    }\n\t  }\n\n\t  return inverse ? m.inverse() : m;\n\t}\n\n\t/*!\n\t * MotionPathPlugin 3.8.0\n\t * https://greensock.com\n\t *\n\t * @license Copyright 2008-2021, GreenSock. All rights reserved.\n\t * Subject to the terms at https://greensock.com/standard-license or for\n\t * Club GreenSock members, the agreement issued with that membership.\n\t * @author: Jack Doyle, jack@greensock.com\n\t*/\n\n\tvar _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n\t    _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n\t    _DEG2RAD$1 = Math.PI / 180,\n\t    gsap,\n\t    PropTween,\n\t    _getUnit,\n\t    _toArray,\n\t    _getGSAP = function _getGSAP() {\n\t  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n\t},\n\t    _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n\t  var l = values.length,\n\t      si = mode === 2 ? 0 : mode,\n\t      i = 0,\n\t      v;\n\n\t  for (; i < l; i++) {\n\t    segment[si] = v = parseFloat(values[i][property]);\n\t    mode === 2 && (segment[si + 1] = 0);\n\t    si += 2;\n\t  }\n\n\t  return segment;\n\t},\n\t    _getPropNum = function _getPropNum(target, prop, unit) {\n\t  return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n\t},\n\t    _relativize = function _relativize(segment) {\n\t  var x = segment[0],\n\t      y = segment[1],\n\t      i;\n\n\t  for (i = 2; i < segment.length; i += 2) {\n\t    x = segment[i] += x;\n\t    y = segment[i + 1] += y;\n\t  }\n\t},\n\t    _segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n\t  if (vars.type === \"cubic\") {\n\t    segment = [segment];\n\t  } else {\n\t    vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n\t    vars.relative && _relativize(segment);\n\t    var pointFunc = y ? pointsToSegment : flatPointsToSegment;\n\t    segment = [pointFunc(segment, vars.curviness)];\n\t  }\n\n\t  segment = slicer(_align(segment, target, vars));\n\n\t  _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n\n\t  y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n\t  return cacheRawPathMeasurements(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12));\n\t},\n\t    _emptyFunc = function _emptyFunc(v) {\n\t  return v;\n\t},\n\t    _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g,\n\t    _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n\t  var m = getGlobalMatrix(element),\n\t      x = 0,\n\t      y = 0,\n\t      svg;\n\n\t  if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n\t    svg = element.viewBox.baseVal;\n\t    svg.width || (svg = {\n\t      width: +element.getAttribute(\"width\"),\n\t      height: +element.getAttribute(\"height\")\n\t    });\n\t  } else {\n\t    svg = origin && element.getBBox && element.getBBox();\n\t  }\n\n\t  if (origin && origin !== \"auto\") {\n\t    x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n\t    y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n\t  }\n\n\t  return parentMatrix.apply(x || y ? m.apply({\n\t    x: x,\n\t    y: y\n\t  }) : {\n\t    x: m.e,\n\t    y: m.f\n\t  });\n\t},\n\t    _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n\t  var parentMatrix = getGlobalMatrix(fromElement.parentNode, true, true),\n\t      m = parentMatrix.clone().multiply(getGlobalMatrix(toElement)),\n\t      fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix),\n\t      _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix),\n\t      x = _originToPoint2.x,\n\t      y = _originToPoint2.y,\n\t      p;\n\n\t  m.e = m.f = 0;\n\n\t  if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n\t    p = toElement.getAttribute(\"d\").match(_numExp) || [];\n\t    p = m.apply({\n\t      x: +p[0],\n\t      y: +p[1]\n\t    });\n\t    x += p.x;\n\t    y += p.y;\n\t  }\n\n\t  if (p || toElement.getBBox && fromElement.getBBox && toElement.ownerSVGElement === fromElement.ownerSVGElement) {\n\t    p = m.apply(toElement.getBBox());\n\t    x -= p.x;\n\t    y -= p.y;\n\t  }\n\n\t  m.e = x - fromPoint.x;\n\t  m.f = y - fromPoint.y;\n\t  return m;\n\t},\n\t    _align = function _align(rawPath, target, _ref) {\n\t  var align = _ref.align,\n\t      matrix = _ref.matrix,\n\t      offsetX = _ref.offsetX,\n\t      offsetY = _ref.offsetY,\n\t      alignOrigin = _ref.alignOrigin;\n\n\t  var x = rawPath[0][0],\n\t      y = rawPath[0][1],\n\t      curX = _getPropNum(target, \"x\"),\n\t      curY = _getPropNum(target, \"y\"),\n\t      alignTarget,\n\t      m,\n\t      p;\n\n\t  if (!rawPath || !rawPath.length) {\n\t    return getRawPath(\"M0,0L0,0\");\n\t  }\n\n\t  if (align) {\n\t    if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n\t      transformRawPath(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n\t    } else {\n\t      if (alignOrigin && alignOrigin[2] !== false) {\n\t        gsap.set(target, {\n\t          transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n\t        });\n\t      } else {\n\t        alignOrigin = [_getPropNum(target, \"xPercent\") / -100, _getPropNum(target, \"yPercent\") / -100];\n\t      }\n\n\t      m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n\t      p = m.apply({\n\t        x: x,\n\t        y: y\n\t      });\n\t      transformRawPath(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n\t    }\n\t  }\n\n\t  if (matrix) {\n\t    transformRawPath(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n\t  } else if (offsetX || offsetY) {\n\t    transformRawPath(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n\t  }\n\n\t  return rawPath;\n\t},\n\t    _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n\t  var cache = target._gsap,\n\t      harness = cache.harness,\n\t      alias = harness && harness.aliases && harness.aliases[property],\n\t      prop = alias && alias.indexOf(\",\") < 0 ? alias : property,\n\t      pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n\t  pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n\t  pt.path = rawPath;\n\t  pt.pp = pathProperty;\n\n\t  plugin._props.push(prop);\n\t},\n\t    _sliceModifier = function _sliceModifier(start, end) {\n\t  return function (rawPath) {\n\t    return start || end !== 1 ? sliceRawPath(rawPath, start, end) : rawPath;\n\t  };\n\t};\n\n\tvar MotionPathPlugin = {\n\t  version: \"3.8.0\",\n\t  name: \"motionPath\",\n\t  register: function register(core, Plugin, propTween) {\n\t    gsap = core;\n\t    _getUnit = gsap.utils.getUnit;\n\t    _toArray = gsap.utils.toArray;\n\t    PropTween = propTween;\n\t  },\n\t  init: function init(target, vars) {\n\t    if (!gsap) {\n\t      console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n\t      return false;\n\t    }\n\n\t    if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n\t      vars = {\n\t        path: vars\n\t      };\n\t    }\n\n\t    var rawPaths = [],\n\t        _vars = vars,\n\t        path = _vars.path,\n\t        autoRotate = _vars.autoRotate,\n\t        unitX = _vars.unitX,\n\t        unitY = _vars.unitY,\n\t        x = _vars.x,\n\t        y = _vars.y,\n\t        firstObj = path[0],\n\t        slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1),\n\t        rawPath,\n\t        p;\n\n\t    this.rawPaths = rawPaths;\n\t    this.target = target;\n\n\t    if (this.rotate = autoRotate || autoRotate === 0) {\n\t      this.rOffset = parseFloat(autoRotate) || 0;\n\t      this.radians = !!vars.useRadians;\n\t      this.rProp = vars.rotation || \"rotation\";\n\t      this.rSet = target._gsap.set(target, this.rProp, this);\n\t      this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0;\n\t    }\n\n\t    if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n\t      for (p in firstObj) {\n\t        if (!x && ~_xProps.indexOf(p)) {\n\t          x = p;\n\t        } else if (!y && ~_yProps.indexOf(p)) {\n\t          y = p;\n\t        }\n\t      }\n\n\t      if (x && y) {\n\t        rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n\t      } else {\n\t        x = y = 0;\n\t      }\n\n\t      for (p in firstObj) {\n\t        p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n\t      }\n\t    } else {\n\t      rawPath = slicer(_align(getRawPath(vars.path), target, vars));\n\t      cacheRawPathMeasurements(rawPath, vars.resolution);\n\t      rawPaths.push(rawPath);\n\n\t      _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n\n\t      _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n\t    }\n\t  },\n\t  render: function render(ratio, data) {\n\t    var rawPaths = data.rawPaths,\n\t        i = rawPaths.length,\n\t        pt = data._pt;\n\n\t    if (ratio > 1) {\n\t      ratio = 1;\n\t    } else if (ratio < 0) {\n\t      ratio = 0;\n\t    }\n\n\t    while (i--) {\n\t      getPositionOnPath(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n\t    }\n\n\t    while (pt) {\n\t      pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n\t      pt = pt._next;\n\t    }\n\n\t    data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD$1 : 1) + data.rOffset + data.ru, data, ratio);\n\t  },\n\t  getLength: function getLength(path) {\n\t    return cacheRawPathMeasurements(getRawPath(path)).totalLength;\n\t  },\n\t  sliceRawPath: sliceRawPath,\n\t  getRawPath: getRawPath,\n\t  pointsToSegment: pointsToSegment,\n\t  stringToRawPath: stringToRawPath,\n\t  rawPathToString: rawPathToString,\n\t  transformRawPath: transformRawPath,\n\t  getGlobalMatrix: getGlobalMatrix,\n\t  getPositionOnPath: getPositionOnPath,\n\t  cacheRawPathMeasurements: cacheRawPathMeasurements,\n\t  convertToPath: function convertToPath$1(targets, swap) {\n\t    return _toArray(targets).map(function (target) {\n\t      return convertToPath(target, swap !== false);\n\t    });\n\t  },\n\t  convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n\t    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n\t    return point ? m.apply(point) : m;\n\t  },\n\t  getAlignMatrix: _getAlignMatrix,\n\t  getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n\t    var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n\n\t    return {\n\t      x: m.e,\n\t      y: m.f\n\t    };\n\t  },\n\t  arrayToRawPath: function arrayToRawPath(value, vars) {\n\t    vars = vars || {};\n\n\t    var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n\n\t    vars.relative && _relativize(segment);\n\t    return [vars.type === \"cubic\" ? segment : pointsToSegment(segment, vars.curviness)];\n\t  }\n\t};\n\t_getGSAP() && gsap.registerPlugin(MotionPathPlugin);\n\n\texports.MotionPathPlugin = MotionPathPlugin;\n\texports.default = MotionPathPlugin;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}